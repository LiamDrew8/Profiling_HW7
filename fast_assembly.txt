
./um:     file format elf64-x86-64


Disassembly of section .init:

0000000000400b80 <_init>:
  400b80:	f3 0f 1e fa          	endbr64 
  400b84:	48 83 ec 08          	sub    $0x8,%rsp
  400b88:	48 8b 05 59 54 20 00 	mov    0x205459(%rip),%rax        # 605fe8 <__gmon_start__@Base>
  400b8f:	48 85 c0             	test   %rax,%rax
  400b92:	74 02                	je     400b96 <_init+0x16>
  400b94:	ff d0                	callq  *%rax
  400b96:	48 83 c4 08          	add    $0x8,%rsp
  400b9a:	c3                   	retq   

Disassembly of section .plt:

0000000000400ba0 <.plt>:
  400ba0:	ff 35 62 54 20 00    	pushq  0x205462(%rip)        # 606008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400ba6:	ff 25 64 54 20 00    	jmpq   *0x205464(%rip)        # 606010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400bac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bb0 <free@plt>:
  400bb0:	ff 25 62 54 20 00    	jmpq   *0x205462(%rip)        # 606018 <free@GLIBC_2.2.5>
  400bb6:	68 00 00 00 00       	pushq  $0x0
  400bbb:	e9 e0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400bc0 <putchar@plt>:
  400bc0:	ff 25 5a 54 20 00    	jmpq   *0x20545a(%rip)        # 606020 <putchar@GLIBC_2.2.5>
  400bc6:	68 01 00 00 00       	pushq  $0x1
  400bcb:	e9 d0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400bd0 <abort@plt>:
  400bd0:	ff 25 52 54 20 00    	jmpq   *0x205452(%rip)        # 606028 <abort@GLIBC_2.2.5>
  400bd6:	68 02 00 00 00       	pushq  $0x2
  400bdb:	e9 c0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400be0 <fclose@plt>:
  400be0:	ff 25 4a 54 20 00    	jmpq   *0x20544a(%rip)        # 606030 <fclose@GLIBC_2.2.5>
  400be6:	68 03 00 00 00       	pushq  $0x3
  400beb:	e9 b0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400bf0 <strlen@plt>:
  400bf0:	ff 25 42 54 20 00    	jmpq   *0x205442(%rip)        # 606038 <strlen@GLIBC_2.2.5>
  400bf6:	68 04 00 00 00       	pushq  $0x4
  400bfb:	e9 a0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c00 <strchr@plt>:
  400c00:	ff 25 3a 54 20 00    	jmpq   *0x20543a(%rip)        # 606040 <strchr@GLIBC_2.2.5>
  400c06:	68 05 00 00 00       	pushq  $0x5
  400c0b:	e9 90 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c10 <printf@plt>:
  400c10:	ff 25 32 54 20 00    	jmpq   *0x205432(%rip)        # 606048 <printf@GLIBC_2.2.5>
  400c16:	68 06 00 00 00       	pushq  $0x6
  400c1b:	e9 80 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c20 <rewind@plt>:
  400c20:	ff 25 2a 54 20 00    	jmpq   *0x20542a(%rip)        # 606050 <rewind@GLIBC_2.2.5>
  400c26:	68 07 00 00 00       	pushq  $0x7
  400c2b:	e9 70 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c30 <_IO_putc@plt>:
  400c30:	ff 25 22 54 20 00    	jmpq   *0x205422(%rip)        # 606058 <_IO_putc@GLIBC_2.2.5>
  400c36:	68 08 00 00 00       	pushq  $0x8
  400c3b:	e9 60 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c40 <memset@plt>:
  400c40:	ff 25 1a 54 20 00    	jmpq   *0x20541a(%rip)        # 606060 <memset@GLIBC_2.2.5>
  400c46:	68 09 00 00 00       	pushq  $0x9
  400c4b:	e9 50 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c50 <_setjmp@plt>:
  400c50:	ff 25 12 54 20 00    	jmpq   *0x205412(%rip)        # 606068 <_setjmp@GLIBC_2.2.5>
  400c56:	68 0a 00 00 00       	pushq  $0xa
  400c5b:	e9 40 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c60 <calloc@plt>:
  400c60:	ff 25 0a 54 20 00    	jmpq   *0x20540a(%rip)        # 606070 <calloc@GLIBC_2.2.5>
  400c66:	68 0b 00 00 00       	pushq  $0xb
  400c6b:	e9 30 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c70 <fprintf@plt>:
  400c70:	ff 25 02 54 20 00    	jmpq   *0x205402(%rip)        # 606078 <fprintf@GLIBC_2.2.5>
  400c76:	68 0c 00 00 00       	pushq  $0xc
  400c7b:	e9 20 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c80 <ftell@plt>:
  400c80:	ff 25 fa 53 20 00    	jmpq   *0x2053fa(%rip)        # 606080 <ftell@GLIBC_2.2.5>
  400c86:	68 0d 00 00 00       	pushq  $0xd
  400c8b:	e9 10 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c90 <malloc@plt>:
  400c90:	ff 25 f2 53 20 00    	jmpq   *0x2053f2(%rip)        # 606088 <malloc@GLIBC_2.2.5>
  400c96:	68 0e 00 00 00       	pushq  $0xe
  400c9b:	e9 00 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400ca0 <fflush@plt>:
  400ca0:	ff 25 ea 53 20 00    	jmpq   *0x2053ea(%rip)        # 606090 <fflush@GLIBC_2.2.5>
  400ca6:	68 0f 00 00 00       	pushq  $0xf
  400cab:	e9 f0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400cb0 <fseek@plt>:
  400cb0:	ff 25 e2 53 20 00    	jmpq   *0x2053e2(%rip)        # 606098 <fseek@GLIBC_2.2.5>
  400cb6:	68 10 00 00 00       	pushq  $0x10
  400cbb:	e9 e0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400cc0 <realloc@plt>:
  400cc0:	ff 25 da 53 20 00    	jmpq   *0x2053da(%rip)        # 6060a0 <realloc@GLIBC_2.2.5>
  400cc6:	68 11 00 00 00       	pushq  $0x11
  400ccb:	e9 d0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400cd0 <longjmp@plt>:
  400cd0:	ff 25 d2 53 20 00    	jmpq   *0x2053d2(%rip)        # 6060a8 <longjmp@GLIBC_2.2.5>
  400cd6:	68 12 00 00 00       	pushq  $0x12
  400cdb:	e9 c0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400ce0 <fopen@plt>:
  400ce0:	ff 25 ca 53 20 00    	jmpq   *0x2053ca(%rip)        # 6060b0 <fopen@GLIBC_2.2.5>
  400ce6:	68 13 00 00 00       	pushq  $0x13
  400ceb:	e9 b0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400cf0 <sprintf@plt>:
  400cf0:	ff 25 c2 53 20 00    	jmpq   *0x2053c2(%rip)        # 6060b8 <sprintf@GLIBC_2.2.5>
  400cf6:	68 14 00 00 00       	pushq  $0x14
  400cfb:	e9 a0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400d00 <exit@plt>:
  400d00:	ff 25 ba 53 20 00    	jmpq   *0x2053ba(%rip)        # 6060c0 <exit@GLIBC_2.2.5>
  400d06:	68 15 00 00 00       	pushq  $0x15
  400d0b:	e9 90 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400d10 <fwrite@plt>:
  400d10:	ff 25 b2 53 20 00    	jmpq   *0x2053b2(%rip)        # 6060c8 <fwrite@GLIBC_2.2.5>
  400d16:	68 16 00 00 00       	pushq  $0x16
  400d1b:	e9 80 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400d20 <getc@plt>:
  400d20:	ff 25 aa 53 20 00    	jmpq   *0x2053aa(%rip)        # 6060d0 <getc@GLIBC_2.2.5>
  400d26:	68 17 00 00 00       	pushq  $0x17
  400d2b:	e9 70 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400d30 <__ctype_b_loc@plt>:
  400d30:	ff 25 a2 53 20 00    	jmpq   *0x2053a2(%rip)        # 6060d8 <__ctype_b_loc@GLIBC_2.3>
  400d36:	68 18 00 00 00       	pushq  $0x18
  400d3b:	e9 60 fe ff ff       	jmpq   400ba0 <.plt>

Disassembly of section .text:

0000000000400d40 <main>:
  400d40:	48 83 ec 08          	sub    $0x8,%rsp
  400d44:	83 ff 02             	cmp    $0x2,%edi
  400d47:	74 25                	je     400d6e <main+0x2e>
  400d49:	ba 1c 00 00 00       	mov    $0x1c,%edx
  400d4e:	be 01 00 00 00       	mov    $0x1,%esi
  400d53:	bf 96 4e 40 00       	mov    $0x404e96,%edi
  400d58:	48 8b 0d 01 5c 20 00 	mov    0x205c01(%rip),%rcx        # 606960 <stderr@@GLIBC_2.2.5>
  400d5f:	e8 ac ff ff ff       	callq  400d10 <fwrite@plt>
  400d64:	b8 01 00 00 00       	mov    $0x1,%eax
  400d69:	48 83 c4 08          	add    $0x8,%rsp
  400d6d:	c3                   	retq   
  400d6e:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400d72:	be b3 4e 40 00       	mov    $0x404eb3,%esi
  400d77:	e8 64 ff ff ff       	callq  400ce0 <fopen@plt>
  400d7c:	48 85 c0             	test   %rax,%rax
  400d7f:	75 1d                	jne    400d9e <main+0x5e>
  400d81:	ba 1a 00 00 00       	mov    $0x1a,%edx
  400d86:	be 01 00 00 00       	mov    $0x1,%esi
  400d8b:	bf b5 4e 40 00       	mov    $0x404eb5,%edi
  400d90:	48 8b 0d c9 5b 20 00 	mov    0x205bc9(%rip),%rcx        # 606960 <stderr@@GLIBC_2.2.5>
  400d97:	e8 74 ff ff ff       	callq  400d10 <fwrite@plt>
  400d9c:	eb c6                	jmp    400d64 <main+0x24>
  400d9e:	48 89 c7             	mov    %rax,%rdi
  400da1:	e8 aa 0d 00 00       	callq  401b50 <start_um>

0000000000400da6 <.annobin_elf_init.c.startup>:
  400da6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400dad:	00 00 00 

0000000000400db0 <set_fast_math>:
  400db0:	f3 0f 1e fa          	endbr64 
  400db4:	0f ae 5c 24 fc       	stmxcsr -0x4(%rsp)
  400db9:	81 4c 24 fc 40 80 00 	orl    $0x8040,-0x4(%rsp)
  400dc0:	00 
  400dc1:	0f ae 54 24 fc       	ldmxcsr -0x4(%rsp)
  400dc6:	c3                   	retq   

0000000000400dc7 <.annobin_elf_init.c.hot>:
  400dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400dce:	00 00 

0000000000400dd0 <_start>:
  400dd0:	f3 0f 1e fa          	endbr64 
  400dd4:	31 ed                	xor    %ebp,%ebp
  400dd6:	49 89 d1             	mov    %rdx,%r9
  400dd9:	5e                   	pop    %rsi
  400dda:	48 89 e2             	mov    %rsp,%rdx
  400ddd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400de1:	50                   	push   %rax
  400de2:	54                   	push   %rsp
  400de3:	49 c7 c0 70 4e 40 00 	mov    $0x404e70,%r8
  400dea:	48 c7 c1 00 4e 40 00 	mov    $0x404e00,%rcx
  400df1:	48 c7 c7 40 0d 40 00 	mov    $0x400d40,%rdi
  400df8:	ff 15 e2 51 20 00    	callq  *0x2051e2(%rip)        # 605fe0 <__libc_start_main@GLIBC_2.2.5>
  400dfe:	f4                   	hlt    

0000000000400dff <.annobin_init.c>:
  400dff:	90                   	nop

0000000000400e00 <_dl_relocate_static_pie>:
  400e00:	f3 0f 1e fa          	endbr64 
  400e04:	c3                   	retq   

0000000000400e05 <.annobin__dl_relocate_static_pie.end>:
  400e05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e0c:	00 00 00 
  400e0f:	90                   	nop

0000000000400e10 <deregister_tm_clones>:
  400e10:	48 8d 3d 19 5b 20 00 	lea    0x205b19(%rip),%rdi        # 606930 <__TMC_END__>
  400e17:	48 8d 05 12 5b 20 00 	lea    0x205b12(%rip),%rax        # 606930 <__TMC_END__>
  400e1e:	48 39 f8             	cmp    %rdi,%rax
  400e21:	74 15                	je     400e38 <deregister_tm_clones+0x28>
  400e23:	48 8b 05 a6 51 20 00 	mov    0x2051a6(%rip),%rax        # 605fd0 <_ITM_deregisterTMCloneTable@Base>
  400e2a:	48 85 c0             	test   %rax,%rax
  400e2d:	74 09                	je     400e38 <deregister_tm_clones+0x28>
  400e2f:	ff e0                	jmpq   *%rax
  400e31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400e38:	c3                   	retq   
  400e39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400e40 <register_tm_clones>:
  400e40:	48 8d 3d e9 5a 20 00 	lea    0x205ae9(%rip),%rdi        # 606930 <__TMC_END__>
  400e47:	48 8d 35 e2 5a 20 00 	lea    0x205ae2(%rip),%rsi        # 606930 <__TMC_END__>
  400e4e:	48 29 fe             	sub    %rdi,%rsi
  400e51:	48 89 f0             	mov    %rsi,%rax
  400e54:	48 c1 ee 3f          	shr    $0x3f,%rsi
  400e58:	48 c1 f8 03          	sar    $0x3,%rax
  400e5c:	48 01 c6             	add    %rax,%rsi
  400e5f:	48 d1 fe             	sar    %rsi
  400e62:	74 14                	je     400e78 <register_tm_clones+0x38>
  400e64:	48 8b 05 85 51 20 00 	mov    0x205185(%rip),%rax        # 605ff0 <_ITM_registerTMCloneTable@Base>
  400e6b:	48 85 c0             	test   %rax,%rax
  400e6e:	74 08                	je     400e78 <register_tm_clones+0x38>
  400e70:	ff e0                	jmpq   *%rax
  400e72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400e78:	c3                   	retq   
  400e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400e80 <__do_global_dtors_aux>:
  400e80:	f3 0f 1e fa          	endbr64 
  400e84:	80 3d dd 5a 20 00 00 	cmpb   $0x0,0x205add(%rip)        # 606968 <completed.0>
  400e8b:	75 13                	jne    400ea0 <__do_global_dtors_aux+0x20>
  400e8d:	55                   	push   %rbp
  400e8e:	48 89 e5             	mov    %rsp,%rbp
  400e91:	e8 7a ff ff ff       	callq  400e10 <deregister_tm_clones>
  400e96:	c6 05 cb 5a 20 00 01 	movb   $0x1,0x205acb(%rip)        # 606968 <completed.0>
  400e9d:	5d                   	pop    %rbp
  400e9e:	c3                   	retq   
  400e9f:	90                   	nop
  400ea0:	c3                   	retq   
  400ea1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400ea8:	00 00 00 00 
  400eac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400eb0 <frame_dummy>:
  400eb0:	f3 0f 1e fa          	endbr64 
  400eb4:	eb 8a                	jmp    400e40 <register_tm_clones>
  400eb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400ebd:	00 00 00 

0000000000400ec0 <load_initial_segment>:
  400ec0:	41 56                	push   %r14
  400ec2:	ba 02 00 00 00       	mov    $0x2,%edx
  400ec7:	31 f6                	xor    %esi,%esi
  400ec9:	41 55                	push   %r13
  400ecb:	41 54                	push   %r12
  400ecd:	49 89 fc             	mov    %rdi,%r12
  400ed0:	55                   	push   %rbp
  400ed1:	53                   	push   %rbx
  400ed2:	e8 d9 fd ff ff       	callq  400cb0 <fseek@plt>
  400ed7:	4c 89 e7             	mov    %r12,%rdi
  400eda:	e8 a1 fd ff ff       	callq  400c80 <ftell@plt>
  400edf:	4c 89 e7             	mov    %r12,%rdi
  400ee2:	49 89 c6             	mov    %rax,%r14
  400ee5:	e8 36 fd ff ff       	callq  400c20 <rewind@plt>
  400eea:	49 63 fe             	movslq %r14d,%rdi
  400eed:	48 c1 e7 02          	shl    $0x2,%rdi
  400ef1:	e8 9a fd ff ff       	callq  400c90 <malloc@plt>
  400ef6:	49 89 c5             	mov    %rax,%r13
  400ef9:	48 85 c0             	test   %rax,%rax
  400efc:	0f 84 02 01 00 00    	je     401004 <load_initial_segment+0x144>
  400f02:	4c 89 e7             	mov    %r12,%rdi
  400f05:	e8 16 fe ff ff       	callq  400d20 <getc@plt>
  400f0a:	83 f8 ff             	cmp    $0xffffffff,%eax
  400f0d:	74 64                	je     400f73 <load_initial_segment+0xb3>
  400f0f:	31 db                	xor    %ebx,%ebx
  400f11:	31 ed                	xor    %ebp,%ebp
  400f13:	eb 2e                	jmp    400f43 <load_initial_segment+0x83>
  400f15:	0f 1f 00             	nopl   (%rax)
  400f18:	83 fa 01             	cmp    $0x1,%edx
  400f1b:	0f 84 7f 00 00 00    	je     400fa0 <load_initial_segment+0xe0>
  400f21:	83 fa 02             	cmp    $0x2,%edx
  400f24:	0f 84 96 00 00 00    	je     400fc0 <load_initial_segment+0x100>
  400f2a:	83 fa 03             	cmp    $0x3,%edx
  400f2d:	0f 84 ad 00 00 00    	je     400fe0 <load_initial_segment+0x120>
  400f33:	4c 89 e7             	mov    %r12,%rdi
  400f36:	83 c3 01             	add    $0x1,%ebx
  400f39:	e8 e2 fd ff ff       	callq  400d20 <getc@plt>
  400f3e:	83 f8 ff             	cmp    $0xffffffff,%eax
  400f41:	74 30                	je     400f73 <load_initial_segment+0xb3>
  400f43:	89 da                	mov    %ebx,%edx
  400f45:	0f b6 c8             	movzbl %al,%ecx
  400f48:	83 e2 03             	and    $0x3,%edx
  400f4b:	75 cb                	jne    400f18 <load_initial_segment+0x58>
  400f4d:	89 ef                	mov    %ebp,%edi
  400f4f:	0f b6 c8             	movzbl %al,%ecx
  400f52:	ba 18 00 00 00       	mov    $0x18,%edx
  400f57:	be 08 00 00 00       	mov    $0x8,%esi
  400f5c:	e8 df 0f 00 00       	callq  401f40 <Bitpack_newu>
  400f61:	4c 89 e7             	mov    %r12,%rdi
  400f64:	83 c3 01             	add    $0x1,%ebx
  400f67:	89 c5                	mov    %eax,%ebp
  400f69:	e8 b2 fd ff ff       	callq  400d20 <getc@plt>
  400f6e:	83 f8 ff             	cmp    $0xffffffff,%eax
  400f71:	75 d0                	jne    400f43 <load_initial_segment+0x83>
  400f73:	4c 89 e7             	mov    %r12,%rdi
  400f76:	e8 65 fc ff ff       	callq  400be0 <fclose@plt>
  400f7b:	48 8b 05 1e 5a 20 00 	mov    0x205a1e(%rip),%rax        # 6069a0 <segment_sequence>
  400f82:	4c 89 28             	mov    %r13,(%rax)
  400f85:	48 8b 05 04 5a 20 00 	mov    0x205a04(%rip),%rax        # 606990 <segment_lengths>
  400f8c:	44 89 30             	mov    %r14d,(%rax)
  400f8f:	5b                   	pop    %rbx
  400f90:	83 05 05 5a 20 00 01 	addl   $0x1,0x205a05(%rip)        # 60699c <seq_size>
  400f97:	5d                   	pop    %rbp
  400f98:	41 5c                	pop    %r12
  400f9a:	41 5d                	pop    %r13
  400f9c:	41 5e                	pop    %r14
  400f9e:	c3                   	retq   
  400f9f:	90                   	nop
  400fa0:	89 ef                	mov    %ebp,%edi
  400fa2:	ba 10 00 00 00       	mov    $0x10,%edx
  400fa7:	be 08 00 00 00       	mov    $0x8,%esi
  400fac:	e8 8f 0f 00 00       	callq  401f40 <Bitpack_newu>
  400fb1:	89 c5                	mov    %eax,%ebp
  400fb3:	e9 7b ff ff ff       	jmpq   400f33 <load_initial_segment+0x73>
  400fb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400fbf:	00 
  400fc0:	89 ef                	mov    %ebp,%edi
  400fc2:	ba 08 00 00 00       	mov    $0x8,%edx
  400fc7:	be 08 00 00 00       	mov    $0x8,%esi
  400fcc:	e8 6f 0f 00 00       	callq  401f40 <Bitpack_newu>
  400fd1:	89 c5                	mov    %eax,%ebp
  400fd3:	e9 5b ff ff ff       	jmpq   400f33 <load_initial_segment+0x73>
  400fd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400fdf:	00 
  400fe0:	89 ef                	mov    %ebp,%edi
  400fe2:	31 d2                	xor    %edx,%edx
  400fe4:	be 08 00 00 00       	mov    $0x8,%esi
  400fe9:	31 ed                	xor    %ebp,%ebp
  400feb:	e8 50 0f 00 00       	callq  401f40 <Bitpack_newu>
  400ff0:	49 89 c0             	mov    %rax,%r8
  400ff3:	89 d8                	mov    %ebx,%eax
  400ff5:	c1 f8 02             	sar    $0x2,%eax
  400ff8:	48 98                	cltq   
  400ffa:	45 89 44 85 00       	mov    %r8d,0x0(%r13,%rax,4)
  400fff:	e9 2f ff ff ff       	jmpq   400f33 <load_initial_segment+0x73>
  401004:	ba 8e 00 00 00       	mov    $0x8e,%edx
  401009:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  40100e:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401013:	e8 f8 0b 00 00       	callq  401c10 <Except_raise>
  401018:	e9 e5 fe ff ff       	jmpq   400f02 <load_initial_segment+0x42>
  40101d:	0f 1f 00             	nopl   (%rax)

0000000000401020 <initialize_memory>:
  401020:	55                   	push   %rbp
  401021:	48 89 fd             	mov    %rdi,%rbp
  401024:	bf 00 04 00 00       	mov    $0x400,%edi
  401029:	c7 05 65 59 20 00 80 	movl   $0x80,0x205965(%rip)        # 606998 <seq_capacity>
  401030:	00 00 00 
  401033:	e8 58 fc ff ff       	callq  400c90 <malloc@plt>
  401038:	48 89 05 61 59 20 00 	mov    %rax,0x205961(%rip)        # 6069a0 <segment_sequence>
  40103f:	48 85 c0             	test   %rax,%rax
  401042:	74 40                	je     401084 <initialize_memory+0x64>
  401044:	bf 00 02 00 00       	mov    $0x200,%edi
  401049:	e8 42 fc ff ff       	callq  400c90 <malloc@plt>
  40104e:	48 89 05 3b 59 20 00 	mov    %rax,0x20593b(%rip)        # 606990 <segment_lengths>
  401055:	48 85 c0             	test   %rax,%rax
  401058:	74 5f                	je     4010b9 <initialize_memory+0x99>
  40105a:	48 89 ef             	mov    %rbp,%rdi
  40105d:	e8 5e fe ff ff       	callq  400ec0 <load_initial_segment>
  401062:	bf 00 04 00 00       	mov    $0x400,%edi
  401067:	c7 05 0f 59 20 00 80 	movl   $0x80,0x20590f(%rip)        # 606980 <rec_capacity>
  40106e:	00 00 00 
  401071:	e8 1a fc ff ff       	callq  400c90 <malloc@plt>
  401076:	48 89 05 0b 59 20 00 	mov    %rax,0x20590b(%rip)        # 606988 <recycled_ids>
  40107d:	48 85 c0             	test   %rax,%rax
  401080:	74 22                	je     4010a4 <initialize_memory+0x84>
  401082:	5d                   	pop    %rbp
  401083:	c3                   	retq   
  401084:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401089:	ba 77 00 00 00       	mov    $0x77,%edx
  40108e:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  401093:	e8 78 0b 00 00       	callq  401c10 <Except_raise>
  401098:	8b 3d fa 58 20 00    	mov    0x2058fa(%rip),%edi        # 606998 <seq_capacity>
  40109e:	48 c1 e7 02          	shl    $0x2,%rdi
  4010a2:	eb a5                	jmp    401049 <initialize_memory+0x29>
  4010a4:	ba 80 00 00 00       	mov    $0x80,%edx
  4010a9:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  4010ae:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4010b3:	5d                   	pop    %rbp
  4010b4:	e9 57 0b 00 00       	jmpq   401c10 <Except_raise>
  4010b9:	ba 7a 00 00 00       	mov    $0x7a,%edx
  4010be:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  4010c3:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4010c8:	e8 43 0b 00 00       	callq  401c10 <Except_raise>
  4010cd:	eb 8b                	jmp    40105a <initialize_memory+0x3a>
  4010cf:	90                   	nop

00000000004010d0 <map_segment>:
  4010d0:	55                   	push   %rbp
  4010d1:	89 ff                	mov    %edi,%edi
  4010d3:	be 04 00 00 00       	mov    $0x4,%esi
  4010d8:	53                   	push   %rbx
  4010d9:	48 89 fb             	mov    %rdi,%rbx
  4010dc:	48 83 ec 08          	sub    $0x8,%rsp
  4010e0:	e8 7b fb ff ff       	callq  400c60 <calloc@plt>
  4010e5:	48 8b 3d b4 58 20 00 	mov    0x2058b4(%rip),%rdi        # 6069a0 <segment_sequence>
  4010ec:	48 89 c5             	mov    %rax,%rbp
  4010ef:	8b 05 8f 58 20 00    	mov    0x20588f(%rip),%eax        # 606984 <rec_size>
  4010f5:	85 c0                	test   %eax,%eax
  4010f7:	75 37                	jne    401130 <map_segment+0x60>
  4010f9:	8b 05 9d 58 20 00    	mov    0x20589d(%rip),%eax        # 60699c <seq_size>
  4010ff:	3b 05 93 58 20 00    	cmp    0x205893(%rip),%eax        # 606998 <seq_capacity>
  401105:	74 51                	je     401158 <map_segment+0x88>
  401107:	89 c2                	mov    %eax,%edx
  401109:	8d 48 01             	lea    0x1(%rax),%ecx
  40110c:	48 89 2c d7          	mov    %rbp,(%rdi,%rdx,8)
  401110:	89 0d 86 58 20 00    	mov    %ecx,0x205886(%rip)        # 60699c <seq_size>
  401116:	48 8b 0d 73 58 20 00 	mov    0x205873(%rip),%rcx        # 606990 <segment_lengths>
  40111d:	89 1c 91             	mov    %ebx,(%rcx,%rdx,4)
  401120:	48 83 c4 08          	add    $0x8,%rsp
  401124:	5b                   	pop    %rbx
  401125:	5d                   	pop    %rbp
  401126:	c3                   	retq   
  401127:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40112e:	00 00 
  401130:	48 8b 15 51 58 20 00 	mov    0x205851(%rip),%rdx        # 606988 <recycled_ids>
  401137:	83 e8 01             	sub    $0x1,%eax
  40113a:	89 05 44 58 20 00    	mov    %eax,0x205844(%rip)        # 606984 <rec_size>
  401140:	48 8d 14 82          	lea    (%rdx,%rax,4),%rdx
  401144:	8b 02                	mov    (%rdx),%eax
  401146:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  40114c:	89 c2                	mov    %eax,%edx
  40114e:	48 89 2c d7          	mov    %rbp,(%rdi,%rdx,8)
  401152:	eb c2                	jmp    401116 <map_segment+0x46>
  401154:	0f 1f 40 00          	nopl   0x0(%rax)
  401158:	8d 74 00 02          	lea    0x2(%rax,%rax,1),%esi
  40115c:	89 35 36 58 20 00    	mov    %esi,0x205836(%rip)        # 606998 <seq_capacity>
  401162:	48 c1 e6 03          	shl    $0x3,%rsi
  401166:	e8 55 fb ff ff       	callq  400cc0 <realloc@plt>
  40116b:	8b 35 27 58 20 00    	mov    0x205827(%rip),%esi        # 606998 <seq_capacity>
  401171:	48 8b 3d 18 58 20 00 	mov    0x205818(%rip),%rdi        # 606990 <segment_lengths>
  401178:	48 89 05 21 58 20 00 	mov    %rax,0x205821(%rip)        # 6069a0 <segment_sequence>
  40117f:	48 c1 e6 02          	shl    $0x2,%rsi
  401183:	e8 38 fb ff ff       	callq  400cc0 <realloc@plt>
  401188:	48 8b 3d 11 58 20 00 	mov    0x205811(%rip),%rdi        # 6069a0 <segment_sequence>
  40118f:	48 89 05 fa 57 20 00 	mov    %rax,0x2057fa(%rip)        # 606990 <segment_lengths>
  401196:	8b 05 00 58 20 00    	mov    0x205800(%rip),%eax        # 60699c <seq_size>
  40119c:	e9 66 ff ff ff       	jmpq   401107 <map_segment+0x37>
  4011a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4011a8:	00 00 00 00 
  4011ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004011b0 <unmap_segment>:
  4011b0:	55                   	push   %rbp
  4011b1:	89 fd                	mov    %edi,%ebp
  4011b3:	53                   	push   %rbx
  4011b4:	48 89 eb             	mov    %rbp,%rbx
  4011b7:	48 83 ec 08          	sub    $0x8,%rsp
  4011bb:	48 8b 05 de 57 20 00 	mov    0x2057de(%rip),%rax        # 6069a0 <segment_sequence>
  4011c2:	48 8b 3c e8          	mov    (%rax,%rbp,8),%rdi
  4011c6:	e8 e5 f9 ff ff       	callq  400bb0 <free@plt>
  4011cb:	48 8b 05 ce 57 20 00 	mov    0x2057ce(%rip),%rax        # 6069a0 <segment_sequence>
  4011d2:	8b 15 ac 57 20 00    	mov    0x2057ac(%rip),%edx        # 606984 <rec_size>
  4011d8:	3b 15 a2 57 20 00    	cmp    0x2057a2(%rip),%edx        # 606980 <rec_capacity>
  4011de:	48 c7 04 e8 00 00 00 	movq   $0x0,(%rax,%rbp,8)
  4011e5:	00 
  4011e6:	74 28                	je     401210 <unmap_segment+0x60>
  4011e8:	48 8b 05 99 57 20 00 	mov    0x205799(%rip),%rax        # 606988 <recycled_ids>
  4011ef:	89 1c 90             	mov    %ebx,(%rax,%rdx,4)
  4011f2:	48 8b 05 97 57 20 00 	mov    0x205797(%rip),%rax        # 606990 <segment_lengths>
  4011f9:	c7 04 a8 00 00 00 00 	movl   $0x0,(%rax,%rbp,4)
  401200:	83 05 7d 57 20 00 01 	addl   $0x1,0x20577d(%rip)        # 606984 <rec_size>
  401207:	48 83 c4 08          	add    $0x8,%rsp
  40120b:	5b                   	pop    %rbx
  40120c:	5d                   	pop    %rbp
  40120d:	c3                   	retq   
  40120e:	66 90                	xchg   %ax,%ax
  401210:	8d 74 12 02          	lea    0x2(%rdx,%rdx,1),%esi
  401214:	48 8b 3d 6d 57 20 00 	mov    0x20576d(%rip),%rdi        # 606988 <recycled_ids>
  40121b:	89 35 5f 57 20 00    	mov    %esi,0x20575f(%rip)        # 606980 <rec_capacity>
  401221:	48 c1 e6 02          	shl    $0x2,%rsi
  401225:	e8 96 fa ff ff       	callq  400cc0 <realloc@plt>
  40122a:	8b 15 54 57 20 00    	mov    0x205754(%rip),%edx        # 606984 <rec_size>
  401230:	48 89 05 51 57 20 00 	mov    %rax,0x205751(%rip)        # 606988 <recycled_ids>
  401237:	eb b6                	jmp    4011ef <unmap_segment+0x3f>
  401239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401240 <segmented_load>:
  401240:	48 8b 05 59 57 20 00 	mov    0x205759(%rip),%rax        # 6069a0 <segment_sequence>
  401247:	89 ff                	mov    %edi,%edi
  401249:	89 f6                	mov    %esi,%esi
  40124b:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
  40124f:	8b 04 b0             	mov    (%rax,%rsi,4),%eax
  401252:	c3                   	retq   
  401253:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40125a:	00 00 00 00 
  40125e:	66 90                	xchg   %ax,%ax

0000000000401260 <segmented_store>:
  401260:	48 8b 05 39 57 20 00 	mov    0x205739(%rip),%rax        # 6069a0 <segment_sequence>
  401267:	89 ff                	mov    %edi,%edi
  401269:	89 f6                	mov    %esi,%esi
  40126b:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
  40126f:	89 14 b0             	mov    %edx,(%rax,%rsi,4)
  401272:	c3                   	retq   
  401273:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40127a:	00 00 00 00 
  40127e:	66 90                	xchg   %ax,%ax

0000000000401280 <load_program>:
  401280:	85 ff                	test   %edi,%edi
  401282:	75 04                	jne    401288 <load_program+0x8>
  401284:	c3                   	retq   
  401285:	0f 1f 00             	nopl   (%rax)
  401288:	41 55                	push   %r13
  40128a:	41 54                	push   %r12
  40128c:	55                   	push   %rbp
  40128d:	53                   	push   %rbx
  40128e:	89 fb                	mov    %edi,%ebx
  401290:	48 83 ec 08          	sub    $0x8,%rsp
  401294:	48 8b 05 f5 56 20 00 	mov    0x2056f5(%rip),%rax        # 606990 <segment_lengths>
  40129b:	44 8b 24 98          	mov    (%rax,%rbx,4),%r12d
  40129f:	48 8b 05 fa 56 20 00 	mov    0x2056fa(%rip),%rax        # 6069a0 <segment_sequence>
  4012a6:	48 8b 38             	mov    (%rax),%rdi
  4012a9:	4c 89 e5             	mov    %r12,%rbp
  4012ac:	e8 ff f8 ff ff       	callq  400bb0 <free@plt>
  4012b1:	4c 8b 2d e8 56 20 00 	mov    0x2056e8(%rip),%r13        # 6069a0 <segment_sequence>
  4012b8:	4a 8d 3c a5 00 00 00 	lea    0x0(,%r12,4),%rdi
  4012bf:	00 
  4012c0:	e8 cb f9 ff ff       	callq  400c90 <malloc@plt>
  4012c5:	49 89 45 00          	mov    %rax,0x0(%r13)
  4012c9:	48 89 c2             	mov    %rax,%rdx
  4012cc:	45 85 e4             	test   %r12d,%r12d
  4012cf:	74 6e                	je     40133f <load_program+0xbf>
  4012d1:	49 8b 4c dd 00       	mov    0x0(%r13,%rbx,8),%rcx
  4012d6:	48 8d 71 04          	lea    0x4(%rcx),%rsi
  4012da:	48 29 f0             	sub    %rsi,%rax
  4012dd:	48 83 f8 08          	cmp    $0x8,%rax
  4012e1:	76 75                	jbe    401358 <load_program+0xd8>
  4012e3:	41 8d 44 24 ff       	lea    -0x1(%r12),%eax
  4012e8:	83 f8 02             	cmp    $0x2,%eax
  4012eb:	76 6b                	jbe    401358 <load_program+0xd8>
  4012ed:	44 89 e6             	mov    %r12d,%esi
  4012f0:	31 c0                	xor    %eax,%eax
  4012f2:	c1 ee 02             	shr    $0x2,%esi
  4012f5:	48 c1 e6 04          	shl    $0x4,%rsi
  4012f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401300:	f3 0f 6f 04 01       	movdqu (%rcx,%rax,1),%xmm0
  401305:	0f 11 04 02          	movups %xmm0,(%rdx,%rax,1)
  401309:	48 83 c0 10          	add    $0x10,%rax
  40130d:	48 39 f0             	cmp    %rsi,%rax
  401310:	75 ee                	jne    401300 <load_program+0x80>
  401312:	89 e8                	mov    %ebp,%eax
  401314:	83 e0 fc             	and    $0xfffffffc,%eax
  401317:	40 f6 c5 03          	test   $0x3,%bpl
  40131b:	74 22                	je     40133f <load_program+0xbf>
  40131d:	89 c6                	mov    %eax,%esi
  40131f:	8b 3c b1             	mov    (%rcx,%rsi,4),%edi
  401322:	89 3c b2             	mov    %edi,(%rdx,%rsi,4)
  401325:	8d 70 01             	lea    0x1(%rax),%esi
  401328:	39 f5                	cmp    %esi,%ebp
  40132a:	76 13                	jbe    40133f <load_program+0xbf>
  40132c:	8b 3c b1             	mov    (%rcx,%rsi,4),%edi
  40132f:	83 c0 02             	add    $0x2,%eax
  401332:	89 3c b2             	mov    %edi,(%rdx,%rsi,4)
  401335:	39 c5                	cmp    %eax,%ebp
  401337:	76 06                	jbe    40133f <load_program+0xbf>
  401339:	8b 0c 81             	mov    (%rcx,%rax,4),%ecx
  40133c:	89 0c 82             	mov    %ecx,(%rdx,%rax,4)
  40133f:	48 8b 05 4a 56 20 00 	mov    0x20564a(%rip),%rax        # 606990 <segment_lengths>
  401346:	89 28                	mov    %ebp,(%rax)
  401348:	48 83 c4 08          	add    $0x8,%rsp
  40134c:	5b                   	pop    %rbx
  40134d:	5d                   	pop    %rbp
  40134e:	41 5c                	pop    %r12
  401350:	41 5d                	pop    %r13
  401352:	c3                   	retq   
  401353:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401358:	31 c0                	xor    %eax,%eax
  40135a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401360:	8b 34 81             	mov    (%rcx,%rax,4),%esi
  401363:	89 34 82             	mov    %esi,(%rdx,%rax,4)
  401366:	48 83 c0 01          	add    $0x1,%rax
  40136a:	4c 39 e0             	cmp    %r12,%rax
  40136d:	75 f1                	jne    401360 <load_program+0xe0>
  40136f:	eb ce                	jmp    40133f <load_program+0xbf>
  401371:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401378:	00 00 00 00 
  40137c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401380 <handle_halt>:
  401380:	8b 15 16 56 20 00    	mov    0x205616(%rip),%edx        # 60699c <seq_size>
  401386:	4c 8b 05 13 56 20 00 	mov    0x205613(%rip),%r8        # 6069a0 <segment_sequence>
  40138d:	53                   	push   %rbx
  40138e:	85 d2                	test   %edx,%edx
  401390:	74 2a                	je     4013bc <handle_halt+0x3c>
  401392:	31 db                	xor    %ebx,%ebx
  401394:	0f 1f 40 00          	nopl   0x0(%rax)
  401398:	89 d8                	mov    %ebx,%eax
  40139a:	49 8b 3c c0          	mov    (%r8,%rax,8),%rdi
  40139e:	48 85 ff             	test   %rdi,%rdi
  4013a1:	74 45                	je     4013e8 <handle_halt+0x68>
  4013a3:	e8 08 f8 ff ff       	callq  400bb0 <free@plt>
  4013a8:	8b 15 ee 55 20 00    	mov    0x2055ee(%rip),%edx        # 60699c <seq_size>
  4013ae:	83 c3 01             	add    $0x1,%ebx
  4013b1:	4c 8b 05 e8 55 20 00 	mov    0x2055e8(%rip),%r8        # 6069a0 <segment_sequence>
  4013b8:	39 d3                	cmp    %edx,%ebx
  4013ba:	72 dc                	jb     401398 <handle_halt+0x18>
  4013bc:	4c 89 c7             	mov    %r8,%rdi
  4013bf:	e8 ec f7 ff ff       	callq  400bb0 <free@plt>
  4013c4:	48 8b 3d c5 55 20 00 	mov    0x2055c5(%rip),%rdi        # 606990 <segment_lengths>
  4013cb:	e8 e0 f7 ff ff       	callq  400bb0 <free@plt>
  4013d0:	48 8b 3d b1 55 20 00 	mov    0x2055b1(%rip),%rdi        # 606988 <recycled_ids>
  4013d7:	e8 d4 f7 ff ff       	callq  400bb0 <free@plt>
  4013dc:	31 ff                	xor    %edi,%edi
  4013de:	e8 1d f9 ff ff       	callq  400d00 <exit@plt>
  4013e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4013e8:	83 c3 01             	add    $0x1,%ebx
  4013eb:	39 d3                	cmp    %edx,%ebx
  4013ed:	72 a9                	jb     401398 <handle_halt+0x18>
  4013ef:	eb cb                	jmp    4013bc <handle_halt+0x3c>
  4013f1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4013f8:	00 00 00 00 
  4013fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401400 <handle_instruction>:
  401400:	89 f8                	mov    %edi,%eax
  401402:	83 05 d7 55 20 00 01 	addl   $0x1,0x2055d7(%rip)        # 6069e0 <program_counter>
  401409:	c1 e8 1c             	shr    $0x1c,%eax
  40140c:	83 f8 0d             	cmp    $0xd,%eax
  40140f:	74 6f                	je     401480 <handle_instruction+0x80>
  401411:	89 fa                	mov    %edi,%edx
  401413:	41 56                	push   %r14
  401415:	c1 ea 03             	shr    $0x3,%edx
  401418:	41 55                	push   %r13
  40141a:	41 54                	push   %r12
  40141c:	55                   	push   %rbp
  40141d:	89 fd                	mov    %edi,%ebp
  40141f:	c1 ef 06             	shr    $0x6,%edi
  401422:	53                   	push   %rbx
  401423:	89 d3                	mov    %edx,%ebx
  401425:	89 fa                	mov    %edi,%edx
  401427:	83 e5 07             	and    $0x7,%ebp
  40142a:	83 e3 07             	and    $0x7,%ebx
  40142d:	83 e2 07             	and    $0x7,%edx
  401430:	83 f8 0d             	cmp    $0xd,%eax
  401433:	77 39                	ja     40146e <handle_instruction+0x6e>
  401435:	ff 24 c5 d0 4e 40 00 	jmpq   *0x404ed0(,%rax,8)
  40143c:	0f 1f 40 00          	nopl   0x0(%rax)
  401440:	48 8b 3d f9 54 20 00 	mov    0x2054f9(%rip),%rdi        # 606940 <stdin@@GLIBC_2.2.5>
  401447:	e8 d4 f8 ff ff       	callq  400d20 <getc@plt>
  40144c:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  401451:	89 c3                	mov    %eax,%ebx
  401453:	83 f8 ff             	cmp    $0xffffffff,%eax
  401456:	74 0d                	je     401465 <handle_instruction+0x65>
  401458:	3d ff 00 00 00       	cmp    $0xff,%eax
  40145d:	0f 8f e5 02 00 00    	jg     401748 <handle_instruction+0x348>
  401463:	89 da                	mov    %ebx,%edx
  401465:	89 e8                	mov    %ebp,%eax
  401467:	89 14 85 c0 69 60 00 	mov    %edx,0x6069c0(,%rax,4)
  40146e:	5b                   	pop    %rbx
  40146f:	5d                   	pop    %rbp
  401470:	41 5c                	pop    %r12
  401472:	41 5d                	pop    %r13
  401474:	41 5e                	pop    %r14
  401476:	c3                   	retq   
  401477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40147e:	00 00 
  401480:	89 fa                	mov    %edi,%edx
  401482:	81 e7 ff ff ff 01    	and    $0x1ffffff,%edi
  401488:	c1 ea 19             	shr    $0x19,%edx
  40148b:	83 e2 07             	and    $0x7,%edx
  40148e:	89 3c 95 c0 69 60 00 	mov    %edi,0x6069c0(,%rdx,4)
  401495:	c3                   	retq   
  401496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40149d:	00 00 00 
  4014a0:	89 da                	mov    %ebx,%edx
  4014a2:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  4014a9:	85 c0                	test   %eax,%eax
  4014ab:	0f 85 af 01 00 00    	jne    401660 <handle_instruction+0x260>
  4014b1:	89 e8                	mov    %ebp,%eax
  4014b3:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  4014ba:	89 05 20 55 20 00    	mov    %eax,0x205520(%rip)        # 6069e0 <program_counter>
  4014c0:	eb ac                	jmp    40146e <handle_instruction+0x6e>
  4014c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4014c8:	89 e8                	mov    %ebp,%eax
  4014ca:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  4014d1:	85 c0                	test   %eax,%eax
  4014d3:	74 99                	je     40146e <handle_instruction+0x6e>
  4014d5:	8b 04 9d c0 69 60 00 	mov    0x6069c0(,%rbx,4),%eax
  4014dc:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  4014e3:	eb 89                	jmp    40146e <handle_instruction+0x6e>
  4014e5:	0f 1f 00             	nopl   (%rax)
  4014e8:	89 e8                	mov    %ebp,%eax
  4014ea:	8b 34 9d c0 69 60 00 	mov    0x6069c0(,%rbx,4),%esi
  4014f1:	8b 0c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ecx
  4014f8:	48 8b 05 a1 54 20 00 	mov    0x2054a1(%rip),%rax        # 6069a0 <segment_sequence>
  4014ff:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
  401503:	8b 04 88             	mov    (%rax,%rcx,4),%eax
  401506:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  40150d:	e9 5c ff ff ff       	jmpq   40146e <handle_instruction+0x6e>
  401512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401518:	89 e8                	mov    %ebp,%eax
  40151a:	8b 34 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%esi
  401521:	89 da                	mov    %ebx,%edx
  401523:	8b 0c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ecx
  40152a:	48 8b 05 6f 54 20 00 	mov    0x20546f(%rip),%rax        # 6069a0 <segment_sequence>
  401531:	8b 14 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%edx
  401538:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
  40153c:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  40153f:	e9 2a ff ff ff       	jmpq   40146e <handle_instruction+0x6e>
  401544:	0f 1f 40 00          	nopl   0x0(%rax)
  401548:	89 d1                	mov    %edx,%ecx
  40154a:	89 e8                	mov    %ebp,%eax
  40154c:	89 da                	mov    %ebx,%edx
  40154e:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  401555:	03 04 95 c0 69 60 00 	add    0x6069c0(,%rdx,4),%eax
  40155c:	31 d2                	xor    %edx,%edx
  40155e:	48 f7 35 8b 4b 20 00 	divq   0x204b8b(%rip)        # 6060f0 <power>
  401565:	89 14 8d c0 69 60 00 	mov    %edx,0x6069c0(,%rcx,4)
  40156c:	e9 fd fe ff ff       	jmpq   40146e <handle_instruction+0x6e>
  401571:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401578:	89 d1                	mov    %edx,%ecx
  40157a:	89 da                	mov    %ebx,%edx
  40157c:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  401583:	0f af 04 ad c0 69 60 	imul   0x6069c0(,%rbp,4),%eax
  40158a:	00 
  40158b:	31 d2                	xor    %edx,%edx
  40158d:	48 f7 35 5c 4b 20 00 	divq   0x204b5c(%rip)        # 6060f0 <power>
  401594:	89 14 8d c0 69 60 00 	mov    %edx,0x6069c0(,%rcx,4)
  40159b:	e9 ce fe ff ff       	jmpq   40146e <handle_instruction+0x6e>
  4015a0:	89 d1                	mov    %edx,%ecx
  4015a2:	89 da                	mov    %ebx,%edx
  4015a4:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  4015ab:	31 d2                	xor    %edx,%edx
  4015ad:	f7 34 ad c0 69 60 00 	divl   0x6069c0(,%rbp,4)
  4015b4:	89 04 8d c0 69 60 00 	mov    %eax,0x6069c0(,%rcx,4)
  4015bb:	e9 ae fe ff ff       	jmpq   40146e <handle_instruction+0x6e>
  4015c0:	89 d1                	mov    %edx,%ecx
  4015c2:	89 da                	mov    %ebx,%edx
  4015c4:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  4015cb:	23 04 ad c0 69 60 00 	and    0x6069c0(,%rbp,4),%eax
  4015d2:	f7 d0                	not    %eax
  4015d4:	89 04 8d c0 69 60 00 	mov    %eax,0x6069c0(,%rcx,4)
  4015db:	e9 8e fe ff ff       	jmpq   40146e <handle_instruction+0x6e>
  4015e0:	89 e8                	mov    %ebp,%eax
  4015e2:	8b 3c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%edi
  4015e9:	e8 e2 fa ff ff       	callq  4010d0 <map_segment>
  4015ee:	89 da                	mov    %ebx,%edx
  4015f0:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  4015f7:	e9 72 fe ff ff       	jmpq   40146e <handle_instruction+0x6e>
  4015fc:	0f 1f 40 00          	nopl   0x0(%rax)
  401600:	89 e8                	mov    %ebp,%eax
  401602:	5b                   	pop    %rbx
  401603:	5d                   	pop    %rbp
  401604:	8b 3c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%edi
  40160b:	41 5c                	pop    %r12
  40160d:	41 5d                	pop    %r13
  40160f:	41 5e                	pop    %r14
  401611:	e9 9a fb ff ff       	jmpq   4011b0 <unmap_segment>
  401616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40161d:	00 00 00 
  401620:	89 e8                	mov    %ebp,%eax
  401622:	8b 1c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ebx
  401629:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
  40162f:	0f 87 f3 00 00 00    	ja     401728 <handle_instruction+0x328>
  401635:	0f b6 fb             	movzbl %bl,%edi
  401638:	5b                   	pop    %rbx
  401639:	5d                   	pop    %rbp
  40163a:	41 5c                	pop    %r12
  40163c:	41 5d                	pop    %r13
  40163e:	41 5e                	pop    %r14
  401640:	e9 7b f5 ff ff       	jmpq   400bc0 <putchar@plt>
  401645:	0f 1f 00             	nopl   (%rax)
  401648:	31 ff                	xor    %edi,%edi
  40164a:	89 3c 95 c0 69 60 00 	mov    %edi,0x6069c0(,%rdx,4)
  401651:	e9 18 fe ff ff       	jmpq   40146e <handle_instruction+0x6e>
  401656:	31 c0                	xor    %eax,%eax
  401658:	e8 23 fd ff ff       	callq  401380 <handle_halt>
  40165d:	0f 1f 00             	nopl   (%rax)
  401660:	89 c3                	mov    %eax,%ebx
  401662:	48 8b 05 27 53 20 00 	mov    0x205327(%rip),%rax        # 606990 <segment_lengths>
  401669:	44 8b 2c 98          	mov    (%rax,%rbx,4),%r13d
  40166d:	48 8b 05 2c 53 20 00 	mov    0x20532c(%rip),%rax        # 6069a0 <segment_sequence>
  401674:	48 8b 38             	mov    (%rax),%rdi
  401677:	4d 89 ec             	mov    %r13,%r12
  40167a:	e8 31 f5 ff ff       	callq  400bb0 <free@plt>
  40167f:	4c 8b 35 1a 53 20 00 	mov    0x20531a(%rip),%r14        # 6069a0 <segment_sequence>
  401686:	4a 8d 3c ad 00 00 00 	lea    0x0(,%r13,4),%rdi
  40168d:	00 
  40168e:	e8 fd f5 ff ff       	callq  400c90 <malloc@plt>
  401693:	49 89 06             	mov    %rax,(%r14)
  401696:	48 89 c2             	mov    %rax,%rdx
  401699:	45 85 ed             	test   %r13d,%r13d
  40169c:	74 74                	je     401712 <handle_instruction+0x312>
  40169e:	49 8b 0c de          	mov    (%r14,%rbx,8),%rcx
  4016a2:	48 8d 71 04          	lea    0x4(%rcx),%rsi
  4016a6:	48 29 f0             	sub    %rsi,%rax
  4016a9:	48 83 f8 08          	cmp    $0x8,%rax
  4016ad:	0f 86 ae 00 00 00    	jbe    401761 <handle_instruction+0x361>
  4016b3:	41 8d 45 ff          	lea    -0x1(%r13),%eax
  4016b7:	83 f8 02             	cmp    $0x2,%eax
  4016ba:	0f 86 a1 00 00 00    	jbe    401761 <handle_instruction+0x361>
  4016c0:	44 89 ee             	mov    %r13d,%esi
  4016c3:	31 c0                	xor    %eax,%eax
  4016c5:	c1 ee 02             	shr    $0x2,%esi
  4016c8:	48 c1 e6 04          	shl    $0x4,%rsi
  4016cc:	0f 1f 40 00          	nopl   0x0(%rax)
  4016d0:	f3 0f 6f 04 01       	movdqu (%rcx,%rax,1),%xmm0
  4016d5:	0f 11 04 02          	movups %xmm0,(%rdx,%rax,1)
  4016d9:	48 83 c0 10          	add    $0x10,%rax
  4016dd:	48 39 f0             	cmp    %rsi,%rax
  4016e0:	75 ee                	jne    4016d0 <handle_instruction+0x2d0>
  4016e2:	44 89 e0             	mov    %r12d,%eax
  4016e5:	83 e0 fc             	and    $0xfffffffc,%eax
  4016e8:	41 f6 c4 03          	test   $0x3,%r12b
  4016ec:	74 24                	je     401712 <handle_instruction+0x312>
  4016ee:	89 c6                	mov    %eax,%esi
  4016f0:	8b 3c b1             	mov    (%rcx,%rsi,4),%edi
  4016f3:	89 3c b2             	mov    %edi,(%rdx,%rsi,4)
  4016f6:	8d 70 01             	lea    0x1(%rax),%esi
  4016f9:	44 39 e6             	cmp    %r12d,%esi
  4016fc:	73 14                	jae    401712 <handle_instruction+0x312>
  4016fe:	8b 3c b1             	mov    (%rcx,%rsi,4),%edi
  401701:	83 c0 02             	add    $0x2,%eax
  401704:	89 3c b2             	mov    %edi,(%rdx,%rsi,4)
  401707:	41 39 c4             	cmp    %eax,%r12d
  40170a:	76 06                	jbe    401712 <handle_instruction+0x312>
  40170c:	8b 0c 81             	mov    (%rcx,%rax,4),%ecx
  40170f:	89 0c 82             	mov    %ecx,(%rdx,%rax,4)
  401712:	48 8b 05 77 52 20 00 	mov    0x205277(%rip),%rax        # 606990 <segment_lengths>
  401719:	44 89 20             	mov    %r12d,(%rax)
  40171c:	e9 90 fd ff ff       	jmpq   4014b1 <handle_instruction+0xb1>
  401721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401728:	ba 07 02 00 00       	mov    $0x207,%edx
  40172d:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  401732:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401737:	e8 d4 04 00 00       	callq  401c10 <Except_raise>
  40173c:	e9 f4 fe ff ff       	jmpq   401635 <handle_instruction+0x235>
  401741:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401748:	ba 1f 02 00 00       	mov    $0x21f,%edx
  40174d:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  401752:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401757:	e8 b4 04 00 00       	callq  401c10 <Except_raise>
  40175c:	e9 02 fd ff ff       	jmpq   401463 <handle_instruction+0x63>
  401761:	31 c0                	xor    %eax,%eax
  401763:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401768:	8b 34 81             	mov    (%rcx,%rax,4),%esi
  40176b:	89 34 82             	mov    %esi,(%rdx,%rax,4)
  40176e:	48 83 c0 01          	add    $0x1,%rax
  401772:	4c 39 e8             	cmp    %r13,%rax
  401775:	75 f1                	jne    401768 <handle_instruction+0x368>
  401777:	eb 99                	jmp    401712 <handle_instruction+0x312>
  401779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401780 <processor_cycle>:
  401780:	48 8b 3d 19 52 20 00 	mov    0x205219(%rip),%rdi        # 6069a0 <segment_sequence>
  401787:	8b 0d 53 52 20 00    	mov    0x205253(%rip),%ecx        # 6069e0 <program_counter>
  40178d:	41 56                	push   %r14
  40178f:	41 55                	push   %r13
  401791:	41 54                	push   %r12
  401793:	55                   	push   %rbp
  401794:	53                   	push   %rbx
  401795:	0f 1f 00             	nopl   (%rax)
  401798:	4c 8b 07             	mov    (%rdi),%r8
  40179b:	89 c8                	mov    %ecx,%eax
  40179d:	83 c1 01             	add    $0x1,%ecx
  4017a0:	41 8b 04 80          	mov    (%r8,%rax,4),%eax
  4017a4:	89 0d 36 52 20 00    	mov    %ecx,0x205236(%rip)        # 6069e0 <program_counter>
  4017aa:	89 c2                	mov    %eax,%edx
  4017ac:	c1 ea 1c             	shr    $0x1c,%edx
  4017af:	83 fa 0d             	cmp    $0xd,%edx
  4017b2:	0f 84 40 03 00 00    	je     401af8 <processor_cycle+0x378>
  4017b8:	89 c6                	mov    %eax,%esi
  4017ba:	89 c5                	mov    %eax,%ebp
  4017bc:	c1 e8 06             	shr    $0x6,%eax
  4017bf:	c1 ee 03             	shr    $0x3,%esi
  4017c2:	83 e0 07             	and    $0x7,%eax
  4017c5:	83 e5 07             	and    $0x7,%ebp
  4017c8:	89 f3                	mov    %esi,%ebx
  4017ca:	89 c6                	mov    %eax,%esi
  4017cc:	83 e3 07             	and    $0x7,%ebx
  4017cf:	83 fa 0d             	cmp    $0xd,%edx
  4017d2:	77 c4                	ja     401798 <processor_cycle+0x18>
  4017d4:	ff 24 d5 40 4f 40 00 	jmpq   *0x404f40(,%rdx,8)
  4017db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4017e0:	89 de                	mov    %ebx,%esi
  4017e2:	8b 04 b5 c0 69 60 00 	mov    0x6069c0(,%rsi,4),%eax
  4017e9:	85 c0                	test   %eax,%eax
  4017eb:	0f 84 c2 00 00 00    	je     4018b3 <processor_cycle+0x133>
  4017f1:	89 c3                	mov    %eax,%ebx
  4017f3:	48 8b 05 96 51 20 00 	mov    0x205196(%rip),%rax        # 606990 <segment_lengths>
  4017fa:	4c 89 c7             	mov    %r8,%rdi
  4017fd:	44 8b 2c 98          	mov    (%rax,%rbx,4),%r13d
  401801:	e8 aa f3 ff ff       	callq  400bb0 <free@plt>
  401806:	4c 8b 35 93 51 20 00 	mov    0x205193(%rip),%r14        # 6069a0 <segment_sequence>
  40180d:	4a 8d 3c ad 00 00 00 	lea    0x0(,%r13,4),%rdi
  401814:	00 
  401815:	4d 89 ec             	mov    %r13,%r12
  401818:	e8 73 f4 ff ff       	callq  400c90 <malloc@plt>
  40181d:	49 89 06             	mov    %rax,(%r14)
  401820:	48 89 c2             	mov    %rax,%rdx
  401823:	45 85 ed             	test   %r13d,%r13d
  401826:	74 7a                	je     4018a2 <processor_cycle+0x122>
  401828:	49 8b 0c de          	mov    (%r14,%rbx,8),%rcx
  40182c:	48 8d 71 04          	lea    0x4(%rcx),%rsi
  401830:	48 29 f0             	sub    %rsi,%rax
  401833:	48 83 f8 08          	cmp    $0x8,%rax
  401837:	0f 86 ec 02 00 00    	jbe    401b29 <processor_cycle+0x3a9>
  40183d:	41 8d 45 ff          	lea    -0x1(%r13),%eax
  401841:	83 f8 02             	cmp    $0x2,%eax
  401844:	0f 86 df 02 00 00    	jbe    401b29 <processor_cycle+0x3a9>
  40184a:	44 89 ee             	mov    %r13d,%esi
  40184d:	31 c0                	xor    %eax,%eax
  40184f:	c1 ee 02             	shr    $0x2,%esi
  401852:	48 c1 e6 04          	shl    $0x4,%rsi
  401856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40185d:	00 00 00 
  401860:	f3 0f 6f 04 01       	movdqu (%rcx,%rax,1),%xmm0
  401865:	0f 11 04 02          	movups %xmm0,(%rdx,%rax,1)
  401869:	48 83 c0 10          	add    $0x10,%rax
  40186d:	48 39 c6             	cmp    %rax,%rsi
  401870:	75 ee                	jne    401860 <processor_cycle+0xe0>
  401872:	44 89 e0             	mov    %r12d,%eax
  401875:	83 e0 fc             	and    $0xfffffffc,%eax
  401878:	41 f6 c4 03          	test   $0x3,%r12b
  40187c:	74 24                	je     4018a2 <processor_cycle+0x122>
  40187e:	89 c6                	mov    %eax,%esi
  401880:	8b 3c b1             	mov    (%rcx,%rsi,4),%edi
  401883:	89 3c b2             	mov    %edi,(%rdx,%rsi,4)
  401886:	8d 70 01             	lea    0x1(%rax),%esi
  401889:	41 39 f4             	cmp    %esi,%r12d
  40188c:	76 14                	jbe    4018a2 <processor_cycle+0x122>
  40188e:	8b 3c b1             	mov    (%rcx,%rsi,4),%edi
  401891:	83 c0 02             	add    $0x2,%eax
  401894:	89 3c b2             	mov    %edi,(%rdx,%rsi,4)
  401897:	41 39 c4             	cmp    %eax,%r12d
  40189a:	76 06                	jbe    4018a2 <processor_cycle+0x122>
  40189c:	8b 0c 81             	mov    (%rcx,%rax,4),%ecx
  40189f:	89 0c 82             	mov    %ecx,(%rdx,%rax,4)
  4018a2:	48 8b 05 e7 50 20 00 	mov    0x2050e7(%rip),%rax        # 606990 <segment_lengths>
  4018a9:	48 8b 3d f0 50 20 00 	mov    0x2050f0(%rip),%rdi        # 6069a0 <segment_sequence>
  4018b0:	44 89 20             	mov    %r12d,(%rax)
  4018b3:	89 e8                	mov    %ebp,%eax
  4018b5:	8b 0c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ecx
  4018bc:	89 0d 1e 51 20 00    	mov    %ecx,0x20511e(%rip)        # 6069e0 <program_counter>
  4018c2:	e9 d1 fe ff ff       	jmpq   401798 <processor_cycle+0x18>
  4018c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4018ce:	00 00 
  4018d0:	48 8b 3d 69 50 20 00 	mov    0x205069(%rip),%rdi        # 606940 <stdin@@GLIBC_2.2.5>
  4018d7:	e8 44 f4 ff ff       	callq  400d20 <getc@plt>
  4018dc:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4018e1:	89 c3                	mov    %eax,%ebx
  4018e3:	83 f8 ff             	cmp    $0xffffffff,%eax
  4018e6:	74 0d                	je     4018f5 <processor_cycle+0x175>
  4018e8:	3d ff 00 00 00       	cmp    $0xff,%eax
  4018ed:	0f 8f e5 01 00 00    	jg     401ad8 <processor_cycle+0x358>
  4018f3:	89 da                	mov    %ebx,%edx
  4018f5:	89 e8                	mov    %ebp,%eax
  4018f7:	48 8b 3d a2 50 20 00 	mov    0x2050a2(%rip),%rdi        # 6069a0 <segment_sequence>
  4018fe:	8b 0d dc 50 20 00    	mov    0x2050dc(%rip),%ecx        # 6069e0 <program_counter>
  401904:	89 14 85 c0 69 60 00 	mov    %edx,0x6069c0(,%rax,4)
  40190b:	e9 88 fe ff ff       	jmpq   401798 <processor_cycle+0x18>
  401910:	89 e8                	mov    %ebp,%eax
  401912:	8b 1c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ebx
  401919:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
  40191f:	0f 87 eb 01 00 00    	ja     401b10 <processor_cycle+0x390>
  401925:	0f b6 fb             	movzbl %bl,%edi
  401928:	e8 93 f2 ff ff       	callq  400bc0 <putchar@plt>
  40192d:	48 8b 3d 6c 50 20 00 	mov    0x20506c(%rip),%rdi        # 6069a0 <segment_sequence>
  401934:	8b 0d a6 50 20 00    	mov    0x2050a6(%rip),%ecx        # 6069e0 <program_counter>
  40193a:	e9 59 fe ff ff       	jmpq   401798 <processor_cycle+0x18>
  40193f:	90                   	nop
  401940:	89 e8                	mov    %ebp,%eax
  401942:	8b 3c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%edi
  401949:	e8 82 f7 ff ff       	callq  4010d0 <map_segment>
  40194e:	89 de                	mov    %ebx,%esi
  401950:	48 8b 3d 49 50 20 00 	mov    0x205049(%rip),%rdi        # 6069a0 <segment_sequence>
  401957:	8b 0d 83 50 20 00    	mov    0x205083(%rip),%ecx        # 6069e0 <program_counter>
  40195d:	89 04 b5 c0 69 60 00 	mov    %eax,0x6069c0(,%rsi,4)
  401964:	e9 2f fe ff ff       	jmpq   401798 <processor_cycle+0x18>
  401969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401970:	89 f2                	mov    %esi,%edx
  401972:	89 de                	mov    %ebx,%esi
  401974:	8b 04 b5 c0 69 60 00 	mov    0x6069c0(,%rsi,4),%eax
  40197b:	23 04 ad c0 69 60 00 	and    0x6069c0(,%rbp,4),%eax
  401982:	f7 d0                	not    %eax
  401984:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  40198b:	e9 08 fe ff ff       	jmpq   401798 <processor_cycle+0x18>
  401990:	41 89 f0             	mov    %esi,%r8d
  401993:	89 de                	mov    %ebx,%esi
  401995:	31 d2                	xor    %edx,%edx
  401997:	8b 04 b5 c0 69 60 00 	mov    0x6069c0(,%rsi,4),%eax
  40199e:	f7 34 ad c0 69 60 00 	divl   0x6069c0(,%rbp,4)
  4019a5:	42 89 04 85 c0 69 60 	mov    %eax,0x6069c0(,%r8,4)
  4019ac:	00 
  4019ad:	e9 e6 fd ff ff       	jmpq   401798 <processor_cycle+0x18>
  4019b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4019b8:	41 89 f0             	mov    %esi,%r8d
  4019bb:	89 de                	mov    %ebx,%esi
  4019bd:	31 d2                	xor    %edx,%edx
  4019bf:	8b 04 b5 c0 69 60 00 	mov    0x6069c0(,%rsi,4),%eax
  4019c6:	0f af 04 ad c0 69 60 	imul   0x6069c0(,%rbp,4),%eax
  4019cd:	00 
  4019ce:	48 f7 35 1b 47 20 00 	divq   0x20471b(%rip)        # 6060f0 <power>
  4019d5:	42 89 14 85 c0 69 60 	mov    %edx,0x6069c0(,%r8,4)
  4019dc:	00 
  4019dd:	e9 b6 fd ff ff       	jmpq   401798 <processor_cycle+0x18>
  4019e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4019e8:	41 89 f0             	mov    %esi,%r8d
  4019eb:	89 e8                	mov    %ebp,%eax
  4019ed:	89 de                	mov    %ebx,%esi
  4019ef:	31 d2                	xor    %edx,%edx
  4019f1:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  4019f8:	03 04 b5 c0 69 60 00 	add    0x6069c0(,%rsi,4),%eax
  4019ff:	48 f7 35 ea 46 20 00 	divq   0x2046ea(%rip)        # 6060f0 <power>
  401a06:	42 89 14 85 c0 69 60 	mov    %edx,0x6069c0(,%r8,4)
  401a0d:	00 
  401a0e:	e9 85 fd ff ff       	jmpq   401798 <processor_cycle+0x18>
  401a13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401a18:	89 e8                	mov    %ebp,%eax
  401a1a:	8b 0c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ecx
  401a21:	8b 04 b5 c0 69 60 00 	mov    0x6069c0(,%rsi,4),%eax
  401a28:	89 de                	mov    %ebx,%esi
  401a2a:	8b 14 b5 c0 69 60 00 	mov    0x6069c0(,%rsi,4),%edx
  401a31:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
  401a35:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  401a38:	8b 0d a2 4f 20 00    	mov    0x204fa2(%rip),%ecx        # 6069e0 <program_counter>
  401a3e:	e9 55 fd ff ff       	jmpq   401798 <processor_cycle+0x18>
  401a43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401a48:	44 8b 04 9d c0 69 60 	mov    0x6069c0(,%rbx,4),%r8d
  401a4f:	00 
  401a50:	89 e8                	mov    %ebp,%eax
  401a52:	8b 14 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%edx
  401a59:	4a 8b 04 c7          	mov    (%rdi,%r8,8),%rax
  401a5d:	8b 04 90             	mov    (%rax,%rdx,4),%eax
  401a60:	89 04 b5 c0 69 60 00 	mov    %eax,0x6069c0(,%rsi,4)
  401a67:	e9 2c fd ff ff       	jmpq   401798 <processor_cycle+0x18>
  401a6c:	0f 1f 40 00          	nopl   0x0(%rax)
  401a70:	89 e8                	mov    %ebp,%eax
  401a72:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  401a79:	85 c0                	test   %eax,%eax
  401a7b:	0f 84 17 fd ff ff    	je     401798 <processor_cycle+0x18>
  401a81:	8b 04 9d c0 69 60 00 	mov    0x6069c0(,%rbx,4),%eax
  401a88:	89 04 b5 c0 69 60 00 	mov    %eax,0x6069c0(,%rsi,4)
  401a8f:	e9 04 fd ff ff       	jmpq   401798 <processor_cycle+0x18>
  401a94:	0f 1f 40 00          	nopl   0x0(%rax)
  401a98:	89 e8                	mov    %ebp,%eax
  401a9a:	8b 3c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%edi
  401aa1:	e8 0a f7 ff ff       	callq  4011b0 <unmap_segment>
  401aa6:	48 8b 3d f3 4e 20 00 	mov    0x204ef3(%rip),%rdi        # 6069a0 <segment_sequence>
  401aad:	8b 0d 2d 4f 20 00    	mov    0x204f2d(%rip),%ecx        # 6069e0 <program_counter>
  401ab3:	e9 e0 fc ff ff       	jmpq   401798 <processor_cycle+0x18>
  401ab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401abf:	00 
  401ac0:	31 c0                	xor    %eax,%eax
  401ac2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401ac8:	89 04 b5 c0 69 60 00 	mov    %eax,0x6069c0(,%rsi,4)
  401acf:	e9 c4 fc ff ff       	jmpq   401798 <processor_cycle+0x18>
  401ad4:	0f 1f 40 00          	nopl   0x0(%rax)
  401ad8:	ba 1f 02 00 00       	mov    $0x21f,%edx
  401add:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  401ae2:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401ae7:	e8 24 01 00 00       	callq  401c10 <Except_raise>
  401aec:	e9 02 fe ff ff       	jmpq   4018f3 <processor_cycle+0x173>
  401af1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401af8:	89 c6                	mov    %eax,%esi
  401afa:	25 ff ff ff 01       	and    $0x1ffffff,%eax
  401aff:	c1 ee 19             	shr    $0x19,%esi
  401b02:	83 e6 07             	and    $0x7,%esi
  401b05:	eb c1                	jmp    401ac8 <processor_cycle+0x348>
  401b07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401b0e:	00 00 
  401b10:	ba 07 02 00 00       	mov    $0x207,%edx
  401b15:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  401b1a:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401b1f:	e8 ec 00 00 00       	callq  401c10 <Except_raise>
  401b24:	e9 fc fd ff ff       	jmpq   401925 <processor_cycle+0x1a5>
  401b29:	31 c0                	xor    %eax,%eax
  401b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401b30:	8b 34 81             	mov    (%rcx,%rax,4),%esi
  401b33:	89 34 82             	mov    %esi,(%rdx,%rax,4)
  401b36:	48 83 c0 01          	add    $0x1,%rax
  401b3a:	4c 39 e8             	cmp    %r13,%rax
  401b3d:	75 f1                	jne    401b30 <processor_cycle+0x3b0>
  401b3f:	e9 5e fd ff ff       	jmpq   4018a2 <processor_cycle+0x122>
  401b44:	31 c0                	xor    %eax,%eax
  401b46:	e8 35 f8 ff ff       	callq  401380 <handle_halt>
  401b4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401b50 <start_um>:
  401b50:	48 83 ec 08          	sub    $0x8,%rsp
  401b54:	e8 c7 f4 ff ff       	callq  401020 <initialize_memory>
  401b59:	31 c0                	xor    %eax,%eax
  401b5b:	e8 20 fc ff ff       	callq  401780 <processor_cycle>

0000000000401b60 <output_register>:
  401b60:	53                   	push   %rbx
  401b61:	89 fb                	mov    %edi,%ebx
  401b63:	81 ff ff 00 00 00    	cmp    $0xff,%edi
  401b69:	77 0d                	ja     401b78 <output_register+0x18>
  401b6b:	0f b6 fb             	movzbl %bl,%edi
  401b6e:	5b                   	pop    %rbx
  401b6f:	e9 4c f0 ff ff       	jmpq   400bc0 <putchar@plt>
  401b74:	0f 1f 40 00          	nopl   0x0(%rax)
  401b78:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401b7d:	ba 07 02 00 00       	mov    $0x207,%edx
  401b82:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  401b87:	e8 84 00 00 00       	callq  401c10 <Except_raise>
  401b8c:	0f b6 fb             	movzbl %bl,%edi
  401b8f:	5b                   	pop    %rbx
  401b90:	e9 2b f0 ff ff       	jmpq   400bc0 <putchar@plt>
  401b95:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401b9c:	00 00 00 00 

0000000000401ba0 <read_in_to_register>:
  401ba0:	53                   	push   %rbx
  401ba1:	48 8b 3d 98 4d 20 00 	mov    0x204d98(%rip),%rdi        # 606940 <stdin@@GLIBC_2.2.5>
  401ba8:	e8 73 f1 ff ff       	callq  400d20 <getc@plt>
  401bad:	89 c3                	mov    %eax,%ebx
  401baf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401bb4:	83 fb ff             	cmp    $0xffffffff,%ebx
  401bb7:	74 0a                	je     401bc3 <read_in_to_register+0x23>
  401bb9:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
  401bbf:	7f 07                	jg     401bc8 <read_in_to_register+0x28>
  401bc1:	89 d8                	mov    %ebx,%eax
  401bc3:	5b                   	pop    %rbx
  401bc4:	c3                   	retq   
  401bc5:	0f 1f 00             	nopl   (%rax)
  401bc8:	ba 1f 02 00 00       	mov    $0x21f,%edx
  401bcd:	be 8c 4e 40 00       	mov    $0x404e8c,%esi
  401bd2:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401bd7:	e8 34 00 00 00       	callq  401c10 <Except_raise>
  401bdc:	89 d8                	mov    %ebx,%eax
  401bde:	eb e3                	jmp    401bc3 <read_in_to_register+0x23>

0000000000401be0 <assert>:
  401be0:	85 ff                	test   %edi,%edi
  401be2:	74 0c                	je     401bf0 <assert+0x10>
  401be4:	f3 c3                	repz retq 
  401be6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401bed:	00 00 00 
  401bf0:	48 8d 3d b1 41 20 00 	lea    0x2041b1(%rip),%rdi        # 605da8 <Assert_Failed>
  401bf7:	48 8d 35 d1 33 00 00 	lea    0x33d1(%rip),%rsi        # 404fcf <_IO_stdin_used+0x147>
  401bfe:	ba 05 00 00 00       	mov    $0x5,%edx
  401c03:	e9 08 00 00 00       	jmpq   401c10 <Except_raise>
  401c08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401c0f:	00 

0000000000401c10 <Except_raise>:
  401c10:	48 89 5c 24 d8       	mov    %rbx,-0x28(%rsp)
  401c15:	48 89 6c 24 e0       	mov    %rbp,-0x20(%rsp)
  401c1a:	48 89 fb             	mov    %rdi,%rbx
  401c1d:	4c 89 64 24 e8       	mov    %r12,-0x18(%rsp)
  401c22:	4c 89 74 24 f8       	mov    %r14,-0x8(%rsp)
  401c27:	49 89 f4             	mov    %rsi,%r12
  401c2a:	4c 89 6c 24 f0       	mov    %r13,-0x10(%rsp)
  401c2f:	48 83 ec 28          	sub    $0x28,%rsp
  401c33:	4c 8d 35 ae 4d 20 00 	lea    0x204dae(%rip),%r14        # 6069e8 <Except_stack>
  401c3a:	48 85 ff             	test   %rdi,%rdi
  401c3d:	89 d5                	mov    %edx,%ebp
  401c3f:	4d 8b 2e             	mov    (%r14),%r13
  401c42:	0f 84 a8 00 00 00    	je     401cf0 <Except_raise+0xe0>
  401c48:	4d 85 ed             	test   %r13,%r13
  401c4b:	74 33                	je     401c80 <Except_raise+0x70>
  401c4d:	49 8b 06             	mov    (%r14),%rax
  401c50:	49 8d 7d 08          	lea    0x8(%r13),%rdi
  401c54:	49 89 9d e0 00 00 00 	mov    %rbx,0xe0(%r13)
  401c5b:	4d 89 a5 d0 00 00 00 	mov    %r12,0xd0(%r13)
  401c62:	41 89 ad d8 00 00 00 	mov    %ebp,0xd8(%r13)
  401c69:	be 01 00 00 00       	mov    $0x1,%esi
  401c6e:	48 8b 00             	mov    (%rax),%rax
  401c71:	49 89 06             	mov    %rax,(%r14)
  401c74:	e8 57 f0 ff ff       	callq  400cd0 <longjmp@plt>
  401c79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401c80:	4c 8b 2d 71 43 20 00 	mov    0x204371(%rip),%r13        # 605ff8 <stderr@@GLIBC_2.2.5-0x968>
  401c87:	48 8d 3d 6c 33 00 00 	lea    0x336c(%rip),%rdi        # 404ffa <_IO_stdin_used+0x172>
  401c8e:	ba 12 00 00 00       	mov    $0x12,%edx
  401c93:	be 01 00 00 00       	mov    $0x1,%esi
  401c98:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  401c9c:	e8 6f f0 ff ff       	callq  400d10 <fwrite@plt>
  401ca1:	48 8b 13             	mov    (%rbx),%rdx
  401ca4:	48 85 d2             	test   %rdx,%rdx
  401ca7:	0f 84 83 00 00 00    	je     401d30 <Except_raise+0x120>
  401cad:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401cb1:	48 8d 35 55 33 00 00 	lea    0x3355(%rip),%rsi        # 40500d <_IO_stdin_used+0x185>
  401cb8:	31 c0                	xor    %eax,%eax
  401cba:	e8 b1 ef ff ff       	callq  400c70 <fprintf@plt>
  401cbf:	85 ed                	test   %ebp,%ebp
  401cc1:	7f 4d                	jg     401d10 <Except_raise+0x100>
  401cc3:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  401cc7:	48 8d 3d 5e 33 00 00 	lea    0x335e(%rip),%rdi        # 40502c <_IO_stdin_used+0x1a4>
  401cce:	ba 0c 00 00 00       	mov    $0xc,%edx
  401cd3:	be 01 00 00 00       	mov    $0x1,%esi
  401cd8:	e8 33 f0 ff ff       	callq  400d10 <fwrite@plt>
  401cdd:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401ce1:	e8 ba ef ff ff       	callq  400ca0 <fflush@plt>
  401ce6:	e8 e5 ee ff ff       	callq  400bd0 <abort@plt>
  401ceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401cf0:	48 8d 3d b1 40 20 00 	lea    0x2040b1(%rip),%rdi        # 605da8 <Assert_Failed>
  401cf7:	48 8d 35 ef 32 00 00 	lea    0x32ef(%rip),%rsi        # 404fed <_IO_stdin_used+0x165>
  401cfe:	ba 13 00 00 00       	mov    $0x13,%edx
  401d03:	e8 08 ff ff ff       	callq  401c10 <Except_raise>
  401d08:	e9 3b ff ff ff       	jmpq   401c48 <Except_raise+0x38>
  401d0d:	0f 1f 00             	nopl   (%rax)
  401d10:	4d 85 e4             	test   %r12,%r12
  401d13:	74 ae                	je     401cc3 <Except_raise+0xb3>
  401d15:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401d19:	48 8d 35 fa 32 00 00 	lea    0x32fa(%rip),%rsi        # 40501a <_IO_stdin_used+0x192>
  401d20:	89 e9                	mov    %ebp,%ecx
  401d22:	4c 89 e2             	mov    %r12,%rdx
  401d25:	31 c0                	xor    %eax,%eax
  401d27:	e8 44 ef ff ff       	callq  400c70 <fprintf@plt>
  401d2c:	eb 95                	jmp    401cc3 <Except_raise+0xb3>
  401d2e:	66 90                	xchg   %ax,%ax
  401d30:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401d34:	48 8d 35 d6 32 00 00 	lea    0x32d6(%rip),%rsi        # 405011 <_IO_stdin_used+0x189>
  401d3b:	48 89 da             	mov    %rbx,%rdx
  401d3e:	31 c0                	xor    %eax,%eax
  401d40:	e8 2b ef ff ff       	callq  400c70 <fprintf@plt>
  401d45:	e9 75 ff ff ff       	jmpq   401cbf <Except_raise+0xaf>
  401d4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401d50 <Bitpack_gets.part.0>:
  401d50:	41 55                	push   %r13
  401d52:	41 54                	push   %r12
  401d54:	49 89 fc             	mov    %rdi,%r12
  401d57:	55                   	push   %rbp
  401d58:	89 f5                	mov    %esi,%ebp
  401d5a:	53                   	push   %rbx
  401d5b:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  401d5e:	48 83 ec 08          	sub    $0x8,%rsp
  401d62:	83 fb 40             	cmp    $0x40,%ebx
  401d65:	77 49                	ja     401db0 <Bitpack_gets.part.0+0x60>
  401d67:	b9 40 00 00 00       	mov    $0x40,%ecx
  401d6c:	89 c8                	mov    %ecx,%eax
  401d6e:	29 d9                	sub    %ebx,%ecx
  401d70:	29 e8                	sub    %ebp,%eax
  401d72:	83 f9 40             	cmp    $0x40,%ecx
  401d75:	41 89 cd             	mov    %ecx,%r13d
  401d78:	89 c5                	mov    %eax,%ebp
  401d7a:	77 74                	ja     401df0 <Bitpack_gets.part.0+0xa0>
  401d7c:	bb 00 00 00 00       	mov    $0x0,%ebx
  401d81:	74 09                	je     401d8c <Bitpack_gets.part.0+0x3c>
  401d83:	4c 89 e3             	mov    %r12,%rbx
  401d86:	44 89 e9             	mov    %r13d,%ecx
  401d89:	48 d3 e3             	shl    %cl,%rbx
  401d8c:	83 fd 40             	cmp    $0x40,%ebp
  401d8f:	77 3f                	ja     401dd0 <Bitpack_gets.part.0+0x80>
  401d91:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  401d96:	74 02                	je     401d9a <Bitpack_gets.part.0+0x4a>
  401d98:	89 e9                	mov    %ebp,%ecx
  401d9a:	48 83 c4 08          	add    $0x8,%rsp
  401d9e:	48 89 d8             	mov    %rbx,%rax
  401da1:	5b                   	pop    %rbx
  401da2:	5d                   	pop    %rbp
  401da3:	41 5c                	pop    %r12
  401da5:	48 d3 f8             	sar    %cl,%rax
  401da8:	41 5d                	pop    %r13
  401daa:	c3                   	retq   
  401dab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401db0:	ba 50 00 00 00       	mov    $0x50,%edx
  401db5:	be 39 50 40 00       	mov    $0x405039,%esi
  401dba:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401dbf:	e8 4c fe ff ff       	callq  401c10 <Except_raise>
  401dc4:	eb a1                	jmp    401d67 <Bitpack_gets.part.0+0x17>
  401dc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401dcd:	00 00 00 
  401dd0:	ba 2c 00 00 00       	mov    $0x2c,%edx
  401dd5:	be 39 50 40 00       	mov    $0x405039,%esi
  401dda:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401ddf:	e8 2c fe ff ff       	callq  401c10 <Except_raise>
  401de4:	eb b2                	jmp    401d98 <Bitpack_gets.part.0+0x48>
  401de6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401ded:	00 00 00 
  401df0:	ba 14 00 00 00       	mov    $0x14,%edx
  401df5:	be 39 50 40 00       	mov    $0x405039,%esi
  401dfa:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401dff:	e8 0c fe ff ff       	callq  401c10 <Except_raise>
  401e04:	e9 7a ff ff ff       	jmpq   401d83 <Bitpack_gets.part.0+0x33>
  401e09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401e10 <Bitpack_fitss>:
  401e10:	83 fe 3f             	cmp    $0x3f,%esi
  401e13:	b8 01 00 00 00       	mov    $0x1,%eax
  401e18:	77 1d                	ja     401e37 <Bitpack_fitss+0x27>
  401e1a:	b9 40 00 00 00       	mov    $0x40,%ecx
  401e1f:	31 c0                	xor    %eax,%eax
  401e21:	29 f1                	sub    %esi,%ecx
  401e23:	83 f9 40             	cmp    $0x40,%ecx
  401e26:	74 09                	je     401e31 <Bitpack_fitss+0x21>
  401e28:	48 89 f8             	mov    %rdi,%rax
  401e2b:	48 d3 e0             	shl    %cl,%rax
  401e2e:	48 d3 f8             	sar    %cl,%rax
  401e31:	48 39 c7             	cmp    %rax,%rdi
  401e34:	0f 94 c0             	sete   %al
  401e37:	f3 c3                	repz retq 
  401e39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401e40 <Bitpack_fitsu>:
  401e40:	83 fe 3f             	cmp    $0x3f,%esi
  401e43:	b8 01 00 00 00       	mov    $0x1,%eax
  401e48:	77 0b                	ja     401e55 <Bitpack_fitsu+0x15>
  401e4a:	89 f1                	mov    %esi,%ecx
  401e4c:	48 d3 ef             	shr    %cl,%rdi
  401e4f:	48 85 ff             	test   %rdi,%rdi
  401e52:	0f 94 c0             	sete   %al
  401e55:	f3 c3                	repz retq 
  401e57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401e5e:	00 00 

0000000000401e60 <Bitpack_gets>:
  401e60:	85 f6                	test   %esi,%esi
  401e62:	74 0c                	je     401e70 <Bitpack_gets+0x10>
  401e64:	e9 e7 fe ff ff       	jmpq   401d50 <Bitpack_gets.part.0>
  401e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401e70:	31 c0                	xor    %eax,%eax
  401e72:	c3                   	retq   
  401e73:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  401e7a:	84 00 00 00 00 00 

0000000000401e80 <Bitpack_getu>:
  401e80:	41 55                	push   %r13
  401e82:	49 89 fd             	mov    %rdi,%r13
  401e85:	41 54                	push   %r12
  401e87:	55                   	push   %rbp
  401e88:	89 f5                	mov    %esi,%ebp
  401e8a:	53                   	push   %rbx
  401e8b:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  401e8e:	48 83 ec 08          	sub    $0x8,%rsp
  401e92:	83 fb 40             	cmp    $0x40,%ebx
  401e95:	77 49                	ja     401ee0 <Bitpack_getu+0x60>
  401e97:	b8 40 00 00 00       	mov    $0x40,%eax
  401e9c:	89 c6                	mov    %eax,%esi
  401e9e:	29 d8                	sub    %ebx,%eax
  401ea0:	29 ee                	sub    %ebp,%esi
  401ea2:	83 f8 40             	cmp    $0x40,%eax
  401ea5:	89 c3                	mov    %eax,%ebx
  401ea7:	89 f5                	mov    %esi,%ebp
  401ea9:	77 75                	ja     401f20 <Bitpack_getu+0xa0>
  401eab:	41 bc 00 00 00 00    	mov    $0x0,%r12d
  401eb1:	74 08                	je     401ebb <Bitpack_getu+0x3b>
  401eb3:	89 d9                	mov    %ebx,%ecx
  401eb5:	49 d3 e5             	shl    %cl,%r13
  401eb8:	4d 89 ec             	mov    %r13,%r12
  401ebb:	83 fd 40             	cmp    $0x40,%ebp
  401ebe:	77 40                	ja     401f00 <Bitpack_getu+0x80>
  401ec0:	b8 00 00 00 00       	mov    $0x0,%eax
  401ec5:	74 08                	je     401ecf <Bitpack_getu+0x4f>
  401ec7:	4c 89 e0             	mov    %r12,%rax
  401eca:	89 e9                	mov    %ebp,%ecx
  401ecc:	48 d3 e8             	shr    %cl,%rax
  401ecf:	48 83 c4 08          	add    $0x8,%rsp
  401ed3:	5b                   	pop    %rbx
  401ed4:	5d                   	pop    %rbp
  401ed5:	41 5c                	pop    %r12
  401ed7:	41 5d                	pop    %r13
  401ed9:	c3                   	retq   
  401eda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401ee0:	ba 58 00 00 00       	mov    $0x58,%edx
  401ee5:	be 39 50 40 00       	mov    $0x405039,%esi
  401eea:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401eef:	e8 1c fd ff ff       	callq  401c10 <Except_raise>
  401ef4:	eb a1                	jmp    401e97 <Bitpack_getu+0x17>
  401ef6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401efd:	00 00 00 
  401f00:	ba 20 00 00 00       	mov    $0x20,%edx
  401f05:	be 39 50 40 00       	mov    $0x405039,%esi
  401f0a:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401f0f:	e8 fc fc ff ff       	callq  401c10 <Except_raise>
  401f14:	eb b1                	jmp    401ec7 <Bitpack_getu+0x47>
  401f16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401f1d:	00 00 00 
  401f20:	ba 14 00 00 00       	mov    $0x14,%edx
  401f25:	be 39 50 40 00       	mov    $0x405039,%esi
  401f2a:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401f2f:	e8 dc fc ff ff       	callq  401c10 <Except_raise>
  401f34:	e9 7a ff ff ff       	jmpq   401eb3 <Bitpack_getu+0x33>
  401f39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401f40 <Bitpack_newu>:
  401f40:	41 56                	push   %r14
  401f42:	49 89 fe             	mov    %rdi,%r14
  401f45:	41 55                	push   %r13
  401f47:	41 89 f5             	mov    %esi,%r13d
  401f4a:	41 54                	push   %r12
  401f4c:	49 89 cc             	mov    %rcx,%r12
  401f4f:	55                   	push   %rbp
  401f50:	89 d5                	mov    %edx,%ebp
  401f52:	53                   	push   %rbx
  401f53:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  401f56:	83 fb 40             	cmp    $0x40,%ebx
  401f59:	0f 87 f9 00 00 00    	ja     402058 <Bitpack_newu+0x118>
  401f5f:	44 89 ee             	mov    %r13d,%esi
  401f62:	4c 89 e7             	mov    %r12,%rdi
  401f65:	e8 d6 fe ff ff       	callq  401e40 <Bitpack_fitsu>
  401f6a:	84 c0                	test   %al,%al
  401f6c:	0f 84 c6 00 00 00    	je     402038 <Bitpack_newu+0xf8>
  401f72:	83 fb 40             	cmp    $0x40,%ebx
  401f75:	0f 87 85 00 00 00    	ja     402000 <Bitpack_newu+0xc0>
  401f7b:	41 bd 00 00 00 00    	mov    $0x0,%r13d
  401f81:	74 0d                	je     401f90 <Bitpack_newu+0x50>
  401f83:	4d 89 f5             	mov    %r14,%r13
  401f86:	89 d9                	mov    %ebx,%ecx
  401f88:	49 d3 ed             	shr    %cl,%r13
  401f8b:	89 d9                	mov    %ebx,%ecx
  401f8d:	49 d3 e5             	shl    %cl,%r13
  401f90:	bb 40 00 00 00       	mov    $0x40,%ebx
  401f95:	29 eb                	sub    %ebp,%ebx
  401f97:	83 fb 40             	cmp    $0x40,%ebx
  401f9a:	77 34                	ja     401fd0 <Bitpack_newu+0x90>
  401f9c:	ba 00 00 00 00       	mov    $0x0,%edx
  401fa1:	74 0d                	je     401fb0 <Bitpack_newu+0x70>
  401fa3:	89 d9                	mov    %ebx,%ecx
  401fa5:	49 d3 e6             	shl    %cl,%r14
  401fa8:	4c 89 f2             	mov    %r14,%rdx
  401fab:	89 d9                	mov    %ebx,%ecx
  401fad:	48 d3 ea             	shr    %cl,%rdx
  401fb0:	5b                   	pop    %rbx
  401fb1:	4c 89 e0             	mov    %r12,%rax
  401fb4:	89 e9                	mov    %ebp,%ecx
  401fb6:	5d                   	pop    %rbp
  401fb7:	41 5c                	pop    %r12
  401fb9:	48 d3 e0             	shl    %cl,%rax
  401fbc:	4c 09 e8             	or     %r13,%rax
  401fbf:	41 5d                	pop    %r13
  401fc1:	48 09 d0             	or     %rdx,%rax
  401fc4:	41 5e                	pop    %r14
  401fc6:	c3                   	retq   
  401fc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401fce:	00 00 
  401fd0:	ba 14 00 00 00       	mov    $0x14,%edx
  401fd5:	be 39 50 40 00       	mov    $0x405039,%esi
  401fda:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401fdf:	e8 2c fc ff ff       	callq  401c10 <Except_raise>
  401fe4:	89 d9                	mov    %ebx,%ecx
  401fe6:	ba 20 00 00 00       	mov    $0x20,%edx
  401feb:	be 39 50 40 00       	mov    $0x405039,%esi
  401ff0:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401ff5:	49 d3 e6             	shl    %cl,%r14
  401ff8:	e8 13 fc ff ff       	callq  401c10 <Except_raise>
  401ffd:	eb a9                	jmp    401fa8 <Bitpack_newu+0x68>
  401fff:	90                   	nop
  402000:	ba 20 00 00 00       	mov    $0x20,%edx
  402005:	be 39 50 40 00       	mov    $0x405039,%esi
  40200a:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  40200f:	e8 fc fb ff ff       	callq  401c10 <Except_raise>
  402014:	4d 89 f5             	mov    %r14,%r13
  402017:	89 d9                	mov    %ebx,%ecx
  402019:	ba 14 00 00 00       	mov    $0x14,%edx
  40201e:	be 39 50 40 00       	mov    $0x405039,%esi
  402023:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  402028:	49 d3 ed             	shr    %cl,%r13
  40202b:	e8 e0 fb ff ff       	callq  401c10 <Except_raise>
  402030:	e9 56 ff ff ff       	jmpq   401f8b <Bitpack_newu+0x4b>
  402035:	0f 1f 00             	nopl   (%rax)
  402038:	ba 65 00 00 00       	mov    $0x65,%edx
  40203d:	be 39 50 40 00       	mov    $0x405039,%esi
  402042:	bf 00 61 60 00       	mov    $0x606100,%edi
  402047:	e8 c4 fb ff ff       	callq  401c10 <Except_raise>
  40204c:	e9 21 ff ff ff       	jmpq   401f72 <Bitpack_newu+0x32>
  402051:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402058:	ba 63 00 00 00       	mov    $0x63,%edx
  40205d:	be 39 50 40 00       	mov    $0x405039,%esi
  402062:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  402067:	e8 a4 fb ff ff       	callq  401c10 <Except_raise>
  40206c:	e9 ee fe ff ff       	jmpq   401f5f <Bitpack_newu+0x1f>
  402071:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  402078:	0f 1f 84 00 00 00 00 
  40207f:	00 

0000000000402080 <Bitpack_news>:
  402080:	41 55                	push   %r13
  402082:	41 89 d5             	mov    %edx,%r13d
  402085:	41 54                	push   %r12
  402087:	49 89 fc             	mov    %rdi,%r12
  40208a:	48 89 cf             	mov    %rcx,%rdi
  40208d:	55                   	push   %rbp
  40208e:	48 89 cd             	mov    %rcx,%rbp
  402091:	53                   	push   %rbx
  402092:	89 f3                	mov    %esi,%ebx
  402094:	48 83 ec 08          	sub    $0x8,%rsp
  402098:	e8 73 fd ff ff       	callq  401e10 <Bitpack_fitss>
  40209d:	84 c0                	test   %al,%al
  40209f:	75 14                	jne    4020b5 <Bitpack_news+0x35>
  4020a1:	ba 6f 00 00 00       	mov    $0x6f,%edx
  4020a6:	be 39 50 40 00       	mov    $0x405039,%esi
  4020ab:	bf 00 61 60 00       	mov    $0x606100,%edi
  4020b0:	e8 5b fb ff ff       	callq  401c10 <Except_raise>
  4020b5:	89 de                	mov    %ebx,%esi
  4020b7:	48 89 ef             	mov    %rbp,%rdi
  4020ba:	31 d2                	xor    %edx,%edx
  4020bc:	e8 bf fd ff ff       	callq  401e80 <Bitpack_getu>
  4020c1:	48 83 c4 08          	add    $0x8,%rsp
  4020c5:	89 de                	mov    %ebx,%esi
  4020c7:	4c 89 e7             	mov    %r12,%rdi
  4020ca:	5b                   	pop    %rbx
  4020cb:	5d                   	pop    %rbp
  4020cc:	41 5c                	pop    %r12
  4020ce:	44 89 ea             	mov    %r13d,%edx
  4020d1:	48 89 c1             	mov    %rax,%rcx
  4020d4:	41 5d                	pop    %r13
  4020d6:	e9 65 fe ff ff       	jmpq   401f40 <Bitpack_newu>
  4020db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004020e0 <Bitpack_run_tests>:
  4020e0:	41 56                	push   %r14
  4020e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4020e7:	55                   	push   %rbp
  4020e8:	53                   	push   %rbx
  4020e9:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
  4020f0:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  4020f7:	00 
  4020f8:	48 b8 ef be ad de ce 	movabs $0xfeedfacedeadbeef,%rax
  4020ff:	fa ed fe 
  402102:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
  402109:	00 
  40210a:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
  402111:	00 
  402112:	8b 44 24 58          	mov    0x58(%rsp),%eax
  402116:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
  40211b:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
  402120:	40 88 7c 24 43       	mov    %dil,0x43(%rsp)
  402125:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
  40212c:	00 00 00 00 00 
  402131:	83 f8 02             	cmp    $0x2,%eax
  402134:	c7 84 24 a0 00 00 00 	movl   $0x0,0xa0(%rsp)
  40213b:	00 00 00 00 
  40213f:	c7 84 24 a4 00 00 00 	movl   $0x6,0xa4(%rsp)
  402146:	06 00 00 00 
  40214a:	c7 84 24 a8 00 00 00 	movl   $0x8,0xa8(%rsp)
  402151:	08 00 00 00 
  402155:	c7 84 24 ac 00 00 00 	movl   $0x40,0xac(%rsp)
  40215c:	40 00 00 00 
  402160:	c7 84 24 90 00 00 00 	movl   $0x10,0x90(%rsp)
  402167:	10 00 00 00 
  40216b:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
  402172:	00 00 00 00 
  402176:	c7 84 24 98 00 00 00 	movl   $0x63,0x98(%rsp)
  40217d:	63 00 00 00 
  402181:	48 c7 84 24 00 01 00 	movq   $0xfffffffffffffffe,0x100(%rsp)
  402188:	00 fe ff ff ff 
  40218d:	48 c7 84 24 08 01 00 	movq   $0x7,0x108(%rsp)
  402194:	00 07 00 00 00 
  402199:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
  4021a0:	00 00 00 00 00 
  4021a5:	48 c7 84 24 18 01 00 	movq   $0xb,0x118(%rsp)
  4021ac:	00 0b 00 00 00 
  4021b1:	48 c7 84 24 20 01 00 	movq   $0xfffffffffffffff8,0x120(%rsp)
  4021b8:	00 f8 ff ff ff 
  4021bd:	48 c7 84 24 28 01 00 	movq   $0xfffffffffffffff5,0x128(%rsp)
  4021c4:	00 f5 ff ff ff 
  4021c9:	48 c7 84 24 d0 00 00 	movq   $0x33,0xd0(%rsp)
  4021d0:	00 33 00 00 00 
  4021d5:	48 c7 84 24 d8 00 00 	movq   $0x7,0xd8(%rsp)
  4021dc:	00 07 00 00 00 
  4021e1:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
  4021e8:	00 00 00 00 00 
  4021ed:	48 c7 84 24 e8 00 00 	movq   $0xb,0xe8(%rsp)
  4021f4:	00 0b 00 00 00 
  4021f9:	48 c7 84 24 f0 00 00 	movq   $0x1,0xf0(%rsp)
  402200:	00 01 00 00 00 
  402205:	0f 87 bd 02 00 00    	ja     4024c8 <Bitpack_run_tests+0x3e8>
  40220b:	48 8d 84 24 38 01 00 	lea    0x138(%rsp),%rax
  402212:	00 
  402213:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  402218:	8b 44 24 58          	mov    0x58(%rsp),%eax
  40221c:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
  402223:	00 
  402224:	48 8b 84 c4 b0 00 00 	mov    0xb0(%rsp,%rax,8),%rax
  40222b:	00 
  40222c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  402231:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  402235:	83 f8 03             	cmp    $0x3,%eax
  402238:	0f 87 72 02 00 00    	ja     4024b0 <Bitpack_run_tests+0x3d0>
  40223e:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  402242:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
  402249:	00 
  40224a:	b9 40 00 00 00       	mov    $0x40,%ecx
  40224f:	8b 84 84 a0 00 00 00 	mov    0xa0(%rsp,%rax,4),%eax
  402256:	89 c3                	mov    %eax,%ebx
  402258:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  40225c:	8b 44 24 60          	mov    0x60(%rsp),%eax
  402260:	29 d9                	sub    %ebx,%ecx
  402262:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
  402266:	83 f8 02             	cmp    $0x2,%eax
  402269:	0f 87 29 02 00 00    	ja     402498 <Bitpack_run_tests+0x3b8>
  40226f:	90                   	nop
  402270:	8b 44 24 60          	mov    0x60(%rsp),%eax
  402274:	83 bc 84 90 00 00 00 	cmpl   $0x63,0x90(%rsp,%rax,4)
  40227b:	63 
  40227c:	0f 84 76 09 00 00    	je     402bf8 <Bitpack_run_tests+0xb18>
  402282:	8b 44 24 60          	mov    0x60(%rsp),%eax
  402286:	8b 84 84 90 00 00 00 	mov    0x90(%rsp,%rax,4),%eax
  40228d:	89 44 24 64          	mov    %eax,0x64(%rsp)
  402291:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%rsp)
  402298:	00 
  402299:	8b 44 24 68          	mov    0x68(%rsp),%eax
  40229d:	83 f8 05             	cmp    $0x5,%eax
  4022a0:	76 26                	jbe    4022c8 <Bitpack_run_tests+0x1e8>
  4022a2:	e9 d9 00 00 00       	jmpq   402380 <Bitpack_run_tests+0x2a0>
  4022a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4022ae:	00 00 
  4022b0:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4022b4:	83 c0 01             	add    $0x1,%eax
  4022b7:	89 44 24 68          	mov    %eax,0x68(%rsp)
  4022bb:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4022bf:	83 f8 05             	cmp    $0x5,%eax
  4022c2:	0f 87 b8 00 00 00    	ja     402380 <Bitpack_run_tests+0x2a0>
  4022c8:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4022cc:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  4022d3:	00 00 
  4022d5:	74 08                	je     4022df <Bitpack_run_tests+0x1ff>
  4022d7:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  4022db:	85 c0                	test   %eax,%eax
  4022dd:	74 d1                	je     4022b0 <Bitpack_run_tests+0x1d0>
  4022df:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4022e3:	03 44 24 0c          	add    0xc(%rsp),%eax
  4022e7:	83 f8 40             	cmp    $0x40,%eax
  4022ea:	77 c4                	ja     4022b0 <Bitpack_run_tests+0x1d0>
  4022ec:	48 8b 05 f5 46 20 00 	mov    0x2046f5(%rip),%rax        # 6069e8 <Except_stack>
  4022f3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4022f8:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4022ff:	00 
  402300:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402307:	00 
  402308:	48 89 05 d9 46 20 00 	mov    %rax,0x2046d9(%rip)        # 6069e8 <Except_stack>
  40230f:	e8 3c e9 ff ff       	callq  400c50 <_setjmp@plt>
  402314:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
  402318:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  40231c:	85 c0                	test   %eax,%eax
  40231e:	0f 84 3c 05 00 00    	je     402860 <Bitpack_run_tests+0x780>
  402324:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402329:	c7 44 24 6c 02 00 00 	movl   $0x2,0x6c(%rsp)
  402330:	00 
  402331:	be 06 00 00 00       	mov    $0x6,%esi
  402336:	74 2d                	je     402365 <Bitpack_run_tests+0x285>
  402338:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40233c:	85 c0                	test   %eax,%eax
  40233e:	0f 84 a4 01 00 00    	je     4024e8 <Bitpack_run_tests+0x408>
  402344:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402348:	03 44 24 0c          	add    0xc(%rsp),%eax
  40234c:	83 f8 40             	cmp    $0x40,%eax
  40234f:	0f 84 93 01 00 00    	je     4024e8 <Bitpack_run_tests+0x408>
  402355:	31 c0                	xor    %eax,%eax
  402357:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  40235b:	31 f6                	xor    %esi,%esi
  40235d:	85 c9                	test   %ecx,%ecx
  40235f:	40 0f 94 c6          	sete   %sil
  402363:	09 c6                	or     %eax,%esi
  402365:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40236a:	31 d2                	xor    %edx,%edx
  40236c:	bf 68 50 40 00       	mov    $0x405068,%edi
  402371:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402376:	ff d0                	callq  *%rax
  402378:	e9 33 ff ff ff       	jmpq   4022b0 <Bitpack_run_tests+0x1d0>
  40237d:	0f 1f 00             	nopl   (%rax)
  402380:	c7 44 24 7c 00 00 00 	movl   $0x0,0x7c(%rsp)
  402387:	00 
  402388:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  40238c:	83 f8 04             	cmp    $0x4,%eax
  40238f:	76 27                	jbe    4023b8 <Bitpack_run_tests+0x2d8>
  402391:	e9 ea 00 00 00       	jmpq   402480 <Bitpack_run_tests+0x3a0>
  402396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40239d:	00 00 00 
  4023a0:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  4023a4:	83 c0 01             	add    $0x1,%eax
  4023a7:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
  4023ab:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  4023af:	83 f8 04             	cmp    $0x4,%eax
  4023b2:	0f 87 c8 00 00 00    	ja     402480 <Bitpack_run_tests+0x3a0>
  4023b8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  4023bc:	48 83 bc c4 d0 00 00 	cmpq   $0x0,0xd0(%rsp,%rax,8)
  4023c3:	00 00 
  4023c5:	74 0a                	je     4023d1 <Bitpack_run_tests+0x2f1>
  4023c7:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
  4023cc:	45 85 d2             	test   %r10d,%r10d
  4023cf:	74 cf                	je     4023a0 <Bitpack_run_tests+0x2c0>
  4023d1:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4023d5:	03 44 24 0c          	add    0xc(%rsp),%eax
  4023d9:	83 f8 40             	cmp    $0x40,%eax
  4023dc:	77 c2                	ja     4023a0 <Bitpack_run_tests+0x2c0>
  4023de:	48 8b 05 03 46 20 00 	mov    0x204603(%rip),%rax        # 6069e8 <Except_stack>
  4023e5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4023ea:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4023f1:	00 
  4023f2:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4023f9:	00 
  4023fa:	48 89 05 e7 45 20 00 	mov    %rax,0x2045e7(%rip)        # 6069e8 <Except_stack>
  402401:	e8 4a e8 ff ff       	callq  400c50 <_setjmp@plt>
  402406:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
  40240d:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  402414:	85 c0                	test   %eax,%eax
  402416:	0f 84 dc 00 00 00    	je     4024f8 <Bitpack_run_tests+0x418>
  40241c:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402421:	c7 84 24 80 00 00 00 	movl   $0x2,0x80(%rsp)
  402428:	02 00 00 00 
  40242c:	be 06 00 00 00       	mov    $0x6,%esi
  402431:	74 2d                	je     402460 <Bitpack_run_tests+0x380>
  402433:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402437:	85 c0                	test   %eax,%eax
  402439:	0f 84 99 00 00 00    	je     4024d8 <Bitpack_run_tests+0x3f8>
  40243f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402443:	03 44 24 0c          	add    0xc(%rsp),%eax
  402447:	83 f8 40             	cmp    $0x40,%eax
  40244a:	0f 84 88 00 00 00    	je     4024d8 <Bitpack_run_tests+0x3f8>
  402450:	31 c0                	xor    %eax,%eax
  402452:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402456:	31 f6                	xor    %esi,%esi
  402458:	85 d2                	test   %edx,%edx
  40245a:	40 0f 94 c6          	sete   %sil
  40245e:	09 c6                	or     %eax,%esi
  402460:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402465:	31 d2                	xor    %edx,%edx
  402467:	bf a8 51 40 00       	mov    $0x4051a8,%edi
  40246c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402471:	ff d0                	callq  *%rax
  402473:	e9 28 ff ff ff       	jmpq   4023a0 <Bitpack_run_tests+0x2c0>
  402478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40247f:	00 
  402480:	8b 44 24 60          	mov    0x60(%rsp),%eax
  402484:	83 c0 01             	add    $0x1,%eax
  402487:	89 44 24 60          	mov    %eax,0x60(%rsp)
  40248b:	8b 44 24 60          	mov    0x60(%rsp),%eax
  40248f:	83 f8 02             	cmp    $0x2,%eax
  402492:	0f 86 d8 fd ff ff    	jbe    402270 <Bitpack_run_tests+0x190>
  402498:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  40249c:	83 c0 01             	add    $0x1,%eax
  40249f:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
  4024a3:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  4024a7:	83 f8 03             	cmp    $0x3,%eax
  4024aa:	0f 86 8e fd ff ff    	jbe    40223e <Bitpack_run_tests+0x15e>
  4024b0:	8b 44 24 58          	mov    0x58(%rsp),%eax
  4024b4:	83 c0 01             	add    $0x1,%eax
  4024b7:	89 44 24 58          	mov    %eax,0x58(%rsp)
  4024bb:	8b 44 24 58          	mov    0x58(%rsp),%eax
  4024bf:	83 f8 02             	cmp    $0x2,%eax
  4024c2:	0f 86 50 fd ff ff    	jbe    402218 <Bitpack_run_tests+0x138>
  4024c8:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
  4024cf:	5b                   	pop    %rbx
  4024d0:	5d                   	pop    %rbp
  4024d1:	41 5e                	pop    %r14
  4024d3:	c3                   	retq   
  4024d4:	0f 1f 40 00          	nopl   0x0(%rax)
  4024d8:	b8 04 00 00 00       	mov    $0x4,%eax
  4024dd:	e9 70 ff ff ff       	jmpq   402452 <Bitpack_run_tests+0x372>
  4024e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4024e8:	b8 04 00 00 00       	mov    $0x4,%eax
  4024ed:	e9 65 fe ff ff       	jmpq   402357 <Bitpack_run_tests+0x277>
  4024f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4024f8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  4024fc:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402500:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402504:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402509:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  402510:	00 
  402511:	e8 2a fa ff ff       	callq  401f40 <Bitpack_newu>
  402516:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  40251d:	85 c0                	test   %eax,%eax
  40251f:	75 11                	jne    402532 <Bitpack_run_tests+0x452>
  402521:	48 8b 05 c0 44 20 00 	mov    0x2044c0(%rip),%rax        # 6069e8 <Except_stack>
  402528:	48 8b 00             	mov    (%rax),%rax
  40252b:	48 89 05 b6 44 20 00 	mov    %rax,0x2044b6(%rip)        # 6069e8 <Except_stack>
  402532:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  402539:	83 f8 01             	cmp    $0x1,%eax
  40253c:	0f 84 d0 0b 00 00    	je     403112 <Bitpack_run_tests+0x1032>
  402542:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402546:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  40254a:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40254e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402553:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  40255a:	00 
  40255b:	e8 e0 f9 ff ff       	callq  401f40 <Bitpack_newu>
  402560:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  402565:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  40256a:	0f 85 98 0a 00 00    	jne    403008 <Bitpack_run_tests+0xf28>
  402570:	48 8b 05 71 44 20 00 	mov    0x204471(%rip),%rax        # 6069e8 <Except_stack>
  402577:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40257c:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402583:	00 
  402584:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  40258b:	00 
  40258c:	48 89 05 55 44 20 00 	mov    %rax,0x204455(%rip)        # 6069e8 <Except_stack>
  402593:	e8 b8 e6 ff ff       	callq  400c50 <_setjmp@plt>
  402598:	89 84 24 84 00 00 00 	mov    %eax,0x84(%rsp)
  40259f:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  4025a6:	85 c0                	test   %eax,%eax
  4025a8:	0f 84 c2 09 00 00    	je     402f70 <Bitpack_run_tests+0xe90>
  4025ae:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
  4025b3:	c7 84 24 84 00 00 00 	movl   $0x2,0x84(%rsp)
  4025ba:	02 00 00 00 
  4025be:	bb 05 00 00 00       	mov    $0x5,%ebx
  4025c3:	45 85 c0             	test   %r8d,%r8d
  4025c6:	74 28                	je     4025f0 <Bitpack_run_tests+0x510>
  4025c8:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4025cd:	b3 06                	mov    $0x6,%bl
  4025cf:	74 1f                	je     4025f0 <Bitpack_run_tests+0x510>
  4025d1:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4025d5:	85 c0                	test   %eax,%eax
  4025d7:	0f 84 b3 0a 00 00    	je     403090 <Bitpack_run_tests+0xfb0>
  4025dd:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4025e1:	03 44 24 0c          	add    0xc(%rsp),%eax
  4025e5:	83 f8 40             	cmp    $0x40,%eax
  4025e8:	0f 84 a2 0a 00 00    	je     403090 <Bitpack_run_tests+0xfb0>
  4025ee:	30 db                	xor    %bl,%bl
  4025f0:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  4025f5:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  4025fa:	bf 08 51 40 00       	mov    $0x405108,%edi
  4025ff:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402603:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402608:	31 c0                	xor    %eax,%eax
  40260a:	e8 59 1b 00 00       	callq  404168 <Fmt_string>
  40260f:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402614:	31 d2                	xor    %edx,%edx
  402616:	48 89 c7             	mov    %rax,%rdi
  402619:	89 de                	mov    %ebx,%esi
  40261b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402620:	ff d0                	callq  *%rax
  402622:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  402629:	85 c0                	test   %eax,%eax
  40262b:	75 11                	jne    40263e <Bitpack_run_tests+0x55e>
  40262d:	48 8b 05 b4 43 20 00 	mov    0x2043b4(%rip),%rax        # 6069e8 <Except_stack>
  402634:	48 8b 00             	mov    (%rax),%rax
  402637:	48 89 05 aa 43 20 00 	mov    %rax,0x2043aa(%rip)        # 6069e8 <Except_stack>
  40263e:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  402645:	83 f8 01             	cmp    $0x1,%eax
  402648:	0f 84 27 0b 00 00    	je     403175 <Bitpack_run_tests+0x1095>
  40264e:	48 8b 05 93 43 20 00 	mov    0x204393(%rip),%rax        # 6069e8 <Except_stack>
  402655:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40265a:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402661:	00 
  402662:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402669:	00 
  40266a:	48 89 05 77 43 20 00 	mov    %rax,0x204377(%rip)        # 6069e8 <Except_stack>
  402671:	e8 da e5 ff ff       	callq  400c50 <_setjmp@plt>
  402676:	89 84 24 88 00 00 00 	mov    %eax,0x88(%rsp)
  40267d:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  402684:	85 c0                	test   %eax,%eax
  402686:	0f 84 04 08 00 00    	je     402e90 <Bitpack_run_tests+0xdb0>
  40268c:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  402690:	c7 84 24 88 00 00 00 	movl   $0x2,0x88(%rsp)
  402697:	02 00 00 00 
  40269b:	bb 05 00 00 00       	mov    $0x5,%ebx
  4026a0:	85 ff                	test   %edi,%edi
  4026a2:	74 2c                	je     4026d0 <Bitpack_run_tests+0x5f0>
  4026a4:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4026a9:	b3 06                	mov    $0x6,%bl
  4026ab:	74 23                	je     4026d0 <Bitpack_run_tests+0x5f0>
  4026ad:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4026b1:	85 c0                	test   %eax,%eax
  4026b3:	0f 84 97 09 00 00    	je     403050 <Bitpack_run_tests+0xf70>
  4026b9:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4026bd:	03 44 24 0c          	add    0xc(%rsp),%eax
  4026c1:	83 f8 40             	cmp    $0x40,%eax
  4026c4:	0f 84 86 09 00 00    	je     403050 <Bitpack_run_tests+0xf70>
  4026ca:	30 db                	xor    %bl,%bl
  4026cc:	0f 1f 40 00          	nopl   0x0(%rax)
  4026d0:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4026d4:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4026d8:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  4026de:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4026e2:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4026e6:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  4026ea:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  4026ef:	41 29 f1             	sub    %esi,%r9d
  4026f2:	be 40 00 00 00       	mov    $0x40,%esi
  4026f7:	29 d6                	sub    %edx,%esi
  4026f9:	89 f2                	mov    %esi,%edx
  4026fb:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402700:	01 f8                	add    %edi,%eax
  402702:	01 f9                	add    %edi,%ecx
  402704:	29 fa                	sub    %edi,%edx
  402706:	89 04 24             	mov    %eax,(%rsp)
  402709:	41 29 f9             	sub    %edi,%r9d
  40270c:	31 c0                	xor    %eax,%eax
  40270e:	bf 40 51 40 00       	mov    $0x405140,%edi
  402713:	e8 50 1a 00 00       	callq  404168 <Fmt_string>
  402718:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40271d:	31 d2                	xor    %edx,%edx
  40271f:	48 89 c7             	mov    %rax,%rdi
  402722:	89 de                	mov    %ebx,%esi
  402724:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402729:	ff d0                	callq  *%rax
  40272b:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  402732:	85 c0                	test   %eax,%eax
  402734:	75 11                	jne    402747 <Bitpack_run_tests+0x667>
  402736:	48 8b 05 ab 42 20 00 	mov    0x2042ab(%rip),%rax        # 6069e8 <Except_stack>
  40273d:	48 8b 00             	mov    (%rax),%rax
  402740:	48 89 05 a1 42 20 00 	mov    %rax,0x2042a1(%rip)        # 6069e8 <Except_stack>
  402747:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  40274e:	83 f8 01             	cmp    $0x1,%eax
  402751:	0f 84 3f 0a 00 00    	je     403196 <Bitpack_run_tests+0x10b6>
  402757:	48 8b 05 8a 42 20 00 	mov    0x20428a(%rip),%rax        # 6069e8 <Except_stack>
  40275e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  402763:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  40276a:	00 
  40276b:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402772:	00 
  402773:	48 89 05 6e 42 20 00 	mov    %rax,0x20426e(%rip)        # 6069e8 <Except_stack>
  40277a:	e8 d1 e4 ff ff       	callq  400c50 <_setjmp@plt>
  40277f:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%rsp)
  402786:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  40278d:	85 c0                	test   %eax,%eax
  40278f:	0f 84 63 06 00 00    	je     402df8 <Bitpack_run_tests+0xd18>
  402795:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402799:	c7 84 24 8c 00 00 00 	movl   $0x2,0x8c(%rsp)
  4027a0:	02 00 00 00 
  4027a4:	bb 05 00 00 00       	mov    $0x5,%ebx
  4027a9:	85 f6                	test   %esi,%esi
  4027ab:	74 2b                	je     4027d8 <Bitpack_run_tests+0x6f8>
  4027ad:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4027b2:	b3 06                	mov    $0x6,%bl
  4027b4:	74 22                	je     4027d8 <Bitpack_run_tests+0x6f8>
  4027b6:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4027ba:	85 c0                	test   %eax,%eax
  4027bc:	0f 84 9e 08 00 00    	je     403060 <Bitpack_run_tests+0xf80>
  4027c2:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4027c6:	03 44 24 0c          	add    0xc(%rsp),%eax
  4027ca:	83 f8 40             	cmp    $0x40,%eax
  4027cd:	0f 84 8d 08 00 00    	je     403060 <Bitpack_run_tests+0xf80>
  4027d3:	30 db                	xor    %bl,%bl
  4027d5:	0f 1f 00             	nopl   (%rax)
  4027d8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  4027dc:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  4027e0:	bf 20 52 40 00       	mov    $0x405220,%edi
  4027e5:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4027e9:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4027ee:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  4027f5:	00 
  4027f6:	31 c0                	xor    %eax,%eax
  4027f8:	e8 6b 19 00 00       	callq  404168 <Fmt_string>
  4027fd:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402802:	31 d2                	xor    %edx,%edx
  402804:	48 89 c7             	mov    %rax,%rdi
  402807:	89 de                	mov    %ebx,%esi
  402809:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40280e:	ff d0                	callq  *%rax
  402810:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  402817:	85 c0                	test   %eax,%eax
  402819:	75 11                	jne    40282c <Bitpack_run_tests+0x74c>
  40281b:	48 8b 05 c6 41 20 00 	mov    0x2041c6(%rip),%rax        # 6069e8 <Except_stack>
  402822:	48 8b 00             	mov    (%rax),%rax
  402825:	48 89 05 bc 41 20 00 	mov    %rax,0x2041bc(%rip)        # 6069e8 <Except_stack>
  40282c:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  402833:	83 f8 01             	cmp    $0x1,%eax
  402836:	0f 85 64 fb ff ff    	jne    4023a0 <Bitpack_run_tests+0x2c0>
  40283c:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402843:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  40284a:	00 
  40284b:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402852:	00 
  402853:	e8 b8 f3 ff ff       	callq  401c10 <Except_raise>
  402858:	e9 43 fb ff ff       	jmpq   4023a0 <Bitpack_run_tests+0x2c0>
  40285d:	0f 1f 00             	nopl   (%rax)
  402860:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402864:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402868:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40286c:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402871:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  402878:	00 
  402879:	e8 02 f8 ff ff       	callq  402080 <Bitpack_news>
  40287e:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  402882:	85 c0                	test   %eax,%eax
  402884:	75 11                	jne    402897 <Bitpack_run_tests+0x7b7>
  402886:	48 8b 05 5b 41 20 00 	mov    0x20415b(%rip),%rax        # 6069e8 <Except_stack>
  40288d:	48 8b 00             	mov    (%rax),%rax
  402890:	48 89 05 51 41 20 00 	mov    %rax,0x204151(%rip)        # 6069e8 <Except_stack>
  402897:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  40289b:	83 f8 01             	cmp    $0x1,%eax
  40289e:	0f 84 b0 08 00 00    	je     403154 <Bitpack_run_tests+0x1074>
  4028a4:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4028a8:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  4028ac:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4028b0:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4028b5:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  4028bc:	00 
  4028bd:	e8 be f7 ff ff       	callq  402080 <Bitpack_news>
  4028c2:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  4028c7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  4028cc:	0f 85 1e 04 00 00    	jne    402cf0 <Bitpack_run_tests+0xc10>
  4028d2:	48 8b 05 0f 41 20 00 	mov    0x20410f(%rip),%rax        # 6069e8 <Except_stack>
  4028d9:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4028de:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4028e5:	00 
  4028e6:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4028ed:	00 
  4028ee:	48 89 05 f3 40 20 00 	mov    %rax,0x2040f3(%rip)        # 6069e8 <Except_stack>
  4028f5:	e8 56 e3 ff ff       	callq  400c50 <_setjmp@plt>
  4028fa:	89 44 24 70          	mov    %eax,0x70(%rsp)
  4028fe:	8b 44 24 70          	mov    0x70(%rsp),%eax
  402902:	85 c0                	test   %eax,%eax
  402904:	0f 84 56 04 00 00    	je     402d60 <Bitpack_run_tests+0xc80>
  40290a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  40290f:	c7 44 24 70 02 00 00 	movl   $0x2,0x70(%rsp)
  402916:	00 
  402917:	bb 05 00 00 00       	mov    $0x5,%ebx
  40291c:	45 85 f6             	test   %r14d,%r14d
  40291f:	74 2f                	je     402950 <Bitpack_run_tests+0x870>
  402921:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402926:	b3 06                	mov    $0x6,%bl
  402928:	74 26                	je     402950 <Bitpack_run_tests+0x870>
  40292a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40292e:	85 c0                	test   %eax,%eax
  402930:	0f 84 4a 07 00 00    	je     403080 <Bitpack_run_tests+0xfa0>
  402936:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40293a:	03 44 24 0c          	add    0xc(%rsp),%eax
  40293e:	83 f8 40             	cmp    $0x40,%eax
  402941:	0f 84 39 07 00 00    	je     403080 <Bitpack_run_tests+0xfa0>
  402947:	30 db                	xor    %bl,%bl
  402949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402950:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402955:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40295a:	bf 08 51 40 00       	mov    $0x405108,%edi
  40295f:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402963:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402968:	31 c0                	xor    %eax,%eax
  40296a:	e8 f9 17 00 00       	callq  404168 <Fmt_string>
  40296f:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402974:	31 d2                	xor    %edx,%edx
  402976:	48 89 c7             	mov    %rax,%rdi
  402979:	89 de                	mov    %ebx,%esi
  40297b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402980:	ff d0                	callq  *%rax
  402982:	8b 44 24 70          	mov    0x70(%rsp),%eax
  402986:	85 c0                	test   %eax,%eax
  402988:	75 11                	jne    40299b <Bitpack_run_tests+0x8bb>
  40298a:	48 8b 05 57 40 20 00 	mov    0x204057(%rip),%rax        # 6069e8 <Except_stack>
  402991:	48 8b 00             	mov    (%rax),%rax
  402994:	48 89 05 4d 40 20 00 	mov    %rax,0x20404d(%rip)        # 6069e8 <Except_stack>
  40299b:	8b 44 24 70          	mov    0x70(%rsp),%eax
  40299f:	83 f8 01             	cmp    $0x1,%eax
  4029a2:	0f 84 8b 07 00 00    	je     403133 <Bitpack_run_tests+0x1053>
  4029a8:	48 8b 05 39 40 20 00 	mov    0x204039(%rip),%rax        # 6069e8 <Except_stack>
  4029af:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4029b4:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4029bb:	00 
  4029bc:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4029c3:	00 
  4029c4:	48 89 05 1d 40 20 00 	mov    %rax,0x20401d(%rip)        # 6069e8 <Except_stack>
  4029cb:	e8 80 e2 ff ff       	callq  400c50 <_setjmp@plt>
  4029d0:	89 44 24 74          	mov    %eax,0x74(%rsp)
  4029d4:	8b 44 24 74          	mov    0x74(%rsp),%eax
  4029d8:	85 c0                	test   %eax,%eax
  4029da:	0f 84 28 02 00 00    	je     402c08 <Bitpack_run_tests+0xb28>
  4029e0:	8b 6c 24 0c          	mov    0xc(%rsp),%ebp
  4029e4:	c7 44 24 74 02 00 00 	movl   $0x2,0x74(%rsp)
  4029eb:	00 
  4029ec:	bb 05 00 00 00       	mov    $0x5,%ebx
  4029f1:	85 ed                	test   %ebp,%ebp
  4029f3:	74 2b                	je     402a20 <Bitpack_run_tests+0x940>
  4029f5:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4029fa:	b3 06                	mov    $0x6,%bl
  4029fc:	74 22                	je     402a20 <Bitpack_run_tests+0x940>
  4029fe:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402a02:	85 c0                	test   %eax,%eax
  402a04:	0f 84 66 06 00 00    	je     403070 <Bitpack_run_tests+0xf90>
  402a0a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402a0e:	03 44 24 0c          	add    0xc(%rsp),%eax
  402a12:	83 f8 40             	cmp    $0x40,%eax
  402a15:	0f 84 55 06 00 00    	je     403070 <Bitpack_run_tests+0xf90>
  402a1b:	30 db                	xor    %bl,%bl
  402a1d:	0f 1f 00             	nopl   (%rax)
  402a20:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402a24:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402a28:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  402a2e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402a32:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402a36:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  402a3a:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  402a3f:	41 29 f1             	sub    %esi,%r9d
  402a42:	be 40 00 00 00       	mov    $0x40,%esi
  402a47:	29 d6                	sub    %edx,%esi
  402a49:	89 f2                	mov    %esi,%edx
  402a4b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402a50:	01 f8                	add    %edi,%eax
  402a52:	01 f9                	add    %edi,%ecx
  402a54:	29 fa                	sub    %edi,%edx
  402a56:	89 04 24             	mov    %eax,(%rsp)
  402a59:	41 29 f9             	sub    %edi,%r9d
  402a5c:	31 c0                	xor    %eax,%eax
  402a5e:	bf 40 51 40 00       	mov    $0x405140,%edi
  402a63:	e8 00 17 00 00       	callq  404168 <Fmt_string>
  402a68:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402a6d:	31 d2                	xor    %edx,%edx
  402a6f:	48 89 c7             	mov    %rax,%rdi
  402a72:	89 de                	mov    %ebx,%esi
  402a74:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402a79:	ff d0                	callq  *%rax
  402a7b:	8b 44 24 74          	mov    0x74(%rsp),%eax
  402a7f:	85 c0                	test   %eax,%eax
  402a81:	75 11                	jne    402a94 <Bitpack_run_tests+0x9b4>
  402a83:	48 8b 05 5e 3f 20 00 	mov    0x203f5e(%rip),%rax        # 6069e8 <Except_stack>
  402a8a:	48 8b 00             	mov    (%rax),%rax
  402a8d:	48 89 05 54 3f 20 00 	mov    %rax,0x203f54(%rip)        # 6069e8 <Except_stack>
  402a94:	8b 44 24 74          	mov    0x74(%rsp),%eax
  402a98:	83 f8 01             	cmp    $0x1,%eax
  402a9b:	0f 84 50 06 00 00    	je     4030f1 <Bitpack_run_tests+0x1011>
  402aa1:	48 8b 05 40 3f 20 00 	mov    0x203f40(%rip),%rax        # 6069e8 <Except_stack>
  402aa8:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  402aad:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402ab4:	00 
  402ab5:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402abc:	00 
  402abd:	48 89 05 24 3f 20 00 	mov    %rax,0x203f24(%rip)        # 6069e8 <Except_stack>
  402ac4:	e8 87 e1 ff ff       	callq  400c50 <_setjmp@plt>
  402ac9:	89 44 24 78          	mov    %eax,0x78(%rsp)
  402acd:	8b 44 24 78          	mov    0x78(%rsp),%eax
  402ad1:	85 c0                	test   %eax,%eax
  402ad3:	0f 85 a7 00 00 00    	jne    402b80 <Bitpack_run_tests+0xaa0>
  402ad9:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  402add:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402ae1:	85 db                	test   %ebx,%ebx
  402ae3:	0f 85 b1 05 00 00    	jne    40309a <Bitpack_run_tests+0xfba>
  402ae9:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402aed:	31 ed                	xor    %ebp,%ebp
  402aef:	bb 05 00 00 00       	mov    $0x5,%ebx
  402af4:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  402afb:	00 00 
  402afd:	40 0f 94 c5          	sete   %bpl
  402b01:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402b05:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402b09:	bf 80 51 40 00       	mov    $0x405180,%edi
  402b0e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402b12:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402b17:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  402b1e:	00 
  402b1f:	31 c0                	xor    %eax,%eax
  402b21:	e8 42 16 00 00       	callq  404168 <Fmt_string>
  402b26:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402b2b:	89 ea                	mov    %ebp,%edx
  402b2d:	48 89 c7             	mov    %rax,%rdi
  402b30:	89 de                	mov    %ebx,%esi
  402b32:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402b37:	ff d0                	callq  *%rax
  402b39:	8b 44 24 78          	mov    0x78(%rsp),%eax
  402b3d:	85 c0                	test   %eax,%eax
  402b3f:	75 11                	jne    402b52 <Bitpack_run_tests+0xa72>
  402b41:	48 8b 05 a0 3e 20 00 	mov    0x203ea0(%rip),%rax        # 6069e8 <Except_stack>
  402b48:	48 8b 00             	mov    (%rax),%rax
  402b4b:	48 89 05 96 3e 20 00 	mov    %rax,0x203e96(%rip)        # 6069e8 <Except_stack>
  402b52:	8b 44 24 78          	mov    0x78(%rsp),%eax
  402b56:	83 f8 01             	cmp    $0x1,%eax
  402b59:	0f 85 51 f7 ff ff    	jne    4022b0 <Bitpack_run_tests+0x1d0>
  402b5f:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402b66:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402b6d:	00 
  402b6e:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402b75:	00 
  402b76:	e8 95 f0 ff ff       	callq  401c10 <Except_raise>
  402b7b:	e9 30 f7 ff ff       	jmpq   4022b0 <Bitpack_run_tests+0x1d0>
  402b80:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
  402b85:	c7 44 24 78 02 00 00 	movl   $0x2,0x78(%rsp)
  402b8c:	00 
  402b8d:	bb 05 00 00 00       	mov    $0x5,%ebx
  402b92:	45 85 db             	test   %r11d,%r11d
  402b95:	74 29                	je     402bc0 <Bitpack_run_tests+0xae0>
  402b97:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402b9c:	b3 06                	mov    $0x6,%bl
  402b9e:	74 20                	je     402bc0 <Bitpack_run_tests+0xae0>
  402ba0:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402ba4:	85 c0                	test   %eax,%eax
  402ba6:	0f 84 15 06 00 00    	je     4031c1 <Bitpack_run_tests+0x10e1>
  402bac:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402bb0:	03 44 24 0c          	add    0xc(%rsp),%eax
  402bb4:	83 f8 40             	cmp    $0x40,%eax
  402bb7:	0f 84 04 06 00 00    	je     4031c1 <Bitpack_run_tests+0x10e1>
  402bbd:	30 db                	xor    %bl,%bl
  402bbf:	90                   	nop
  402bc0:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402bc4:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402bc8:	bf 80 51 40 00       	mov    $0x405180,%edi
  402bcd:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402bd1:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402bd6:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  402bdd:	00 
  402bde:	31 c0                	xor    %eax,%eax
  402be0:	e8 83 15 00 00       	callq  404168 <Fmt_string>
  402be5:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402bea:	31 d2                	xor    %edx,%edx
  402bec:	e9 3c ff ff ff       	jmpq   402b2d <Bitpack_run_tests+0xa4d>
  402bf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402bf8:	8b 44 24 44          	mov    0x44(%rsp),%eax
  402bfc:	e9 8c f6 ff ff       	jmpq   40228d <Bitpack_run_tests+0x1ad>
  402c01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402c08:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402c0c:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402c10:	be 40 00 00 00       	mov    $0x40,%esi
  402c15:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402c1a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402c1f:	31 ed                	xor    %ebp,%ebp
  402c21:	29 c6                	sub    %eax,%esi
  402c23:	44 01 f2             	add    %r14d,%edx
  402c26:	44 29 f6             	sub    %r14d,%esi
  402c29:	e8 52 f2 ff ff       	callq  401e80 <Bitpack_getu>
  402c2e:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402c32:	48 89 c3             	mov    %rax,%rbx
  402c35:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402c39:	be 40 00 00 00       	mov    $0x40,%esi
  402c3e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402c43:	29 c6                	sub    %eax,%esi
  402c45:	44 01 f2             	add    %r14d,%edx
  402c48:	44 29 f6             	sub    %r14d,%esi
  402c4b:	e8 30 f2 ff ff       	callq  401e80 <Bitpack_getu>
  402c50:	48 39 c3             	cmp    %rax,%rbx
  402c53:	bb 05 00 00 00       	mov    $0x5,%ebx
  402c58:	40 0f 94 c5          	sete   %bpl
  402c5c:	45 85 f6             	test   %r14d,%r14d
  402c5f:	74 2f                	je     402c90 <Bitpack_run_tests+0xbb0>
  402c61:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402c66:	b3 06                	mov    $0x6,%bl
  402c68:	74 26                	je     402c90 <Bitpack_run_tests+0xbb0>
  402c6a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402c6e:	85 c0                	test   %eax,%eax
  402c70:	0f 84 93 05 00 00    	je     403209 <Bitpack_run_tests+0x1129>
  402c76:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402c7a:	03 44 24 0c          	add    0xc(%rsp),%eax
  402c7e:	83 f8 40             	cmp    $0x40,%eax
  402c81:	0f 84 82 05 00 00    	je     403209 <Bitpack_run_tests+0x1129>
  402c87:	30 db                	xor    %bl,%bl
  402c89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402c90:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402c94:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402c98:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  402c9e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402ca2:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402ca6:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  402caa:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  402caf:	41 29 f1             	sub    %esi,%r9d
  402cb2:	be 40 00 00 00       	mov    $0x40,%esi
  402cb7:	29 c6                	sub    %eax,%esi
  402cb9:	89 f0                	mov    %esi,%eax
  402cbb:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402cc0:	01 fa                	add    %edi,%edx
  402cc2:	29 f8                	sub    %edi,%eax
  402cc4:	01 f9                	add    %edi,%ecx
  402cc6:	89 14 24             	mov    %edx,(%rsp)
  402cc9:	41 29 f9             	sub    %edi,%r9d
  402ccc:	89 c2                	mov    %eax,%edx
  402cce:	bf 40 51 40 00       	mov    $0x405140,%edi
  402cd3:	31 c0                	xor    %eax,%eax
  402cd5:	e8 8e 14 00 00       	callq  404168 <Fmt_string>
  402cda:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402cdf:	89 ea                	mov    %ebp,%edx
  402ce1:	e9 89 fd ff ff       	jmpq   402a6f <Bitpack_run_tests+0x98f>
  402ce6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402ced:	00 00 00 
  402cf0:	8b 54 24 68          	mov    0x68(%rsp),%edx
  402cf4:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402cf8:	bf a0 50 40 00       	mov    $0x4050a0,%edi
  402cfd:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  402d01:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402d05:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  402d0a:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  402d11:	00 
  402d12:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  402d17:	4c 8b 8c d4 00 01 00 	mov    0x100(%rsp,%rdx,8),%r9
  402d1e:	00 
  402d1f:	89 da                	mov    %ebx,%edx
  402d21:	48 89 04 24          	mov    %rax,(%rsp)
  402d25:	31 c0                	xor    %eax,%eax
  402d27:	e8 e4 de ff ff       	callq  400c10 <printf@plt>
  402d2c:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402d30:	31 f6                	xor    %esi,%esi
  402d32:	85 db                	test   %ebx,%ebx
  402d34:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402d38:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  402d3f:	00 
  402d40:	0f 85 85 04 00 00    	jne    4031cb <Bitpack_run_tests+0x10eb>
  402d46:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
  402d4b:	bf d8 50 40 00       	mov    $0x4050d8,%edi
  402d50:	31 c0                	xor    %eax,%eax
  402d52:	e8 b9 de ff ff       	callq  400c10 <printf@plt>
  402d57:	e9 76 fb ff ff       	jmpq   4028d2 <Bitpack_run_tests+0x7f2>
  402d5c:	0f 1f 40 00          	nopl   0x0(%rax)
  402d60:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402d64:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402d69:	31 d2                	xor    %edx,%edx
  402d6b:	31 ed                	xor    %ebp,%ebp
  402d6d:	e8 0e f1 ff ff       	callq  401e80 <Bitpack_getu>
  402d72:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402d76:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402d7b:	48 89 c3             	mov    %rax,%rbx
  402d7e:	31 d2                	xor    %edx,%edx
  402d80:	e8 fb f0 ff ff       	callq  401e80 <Bitpack_getu>
  402d85:	48 39 c3             	cmp    %rax,%rbx
  402d88:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  402d8c:	bb 05 00 00 00       	mov    $0x5,%ebx
  402d91:	40 0f 94 c5          	sete   %bpl
  402d95:	85 c0                	test   %eax,%eax
  402d97:	74 2f                	je     402dc8 <Bitpack_run_tests+0xce8>
  402d99:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402d9e:	b3 06                	mov    $0x6,%bl
  402da0:	74 26                	je     402dc8 <Bitpack_run_tests+0xce8>
  402da2:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402da6:	85 c0                	test   %eax,%eax
  402da8:	0f 84 65 04 00 00    	je     403213 <Bitpack_run_tests+0x1133>
  402dae:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402db2:	03 44 24 0c          	add    0xc(%rsp),%eax
  402db6:	83 f8 40             	cmp    $0x40,%eax
  402db9:	0f 84 54 04 00 00    	je     403213 <Bitpack_run_tests+0x1133>
  402dbf:	30 db                	xor    %bl,%bl
  402dc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402dc8:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402dcd:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  402dd2:	bf 08 51 40 00       	mov    $0x405108,%edi
  402dd7:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402ddb:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402de0:	31 c0                	xor    %eax,%eax
  402de2:	e8 81 13 00 00       	callq  404168 <Fmt_string>
  402de7:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402dec:	89 ea                	mov    %ebp,%edx
  402dee:	e9 83 fb ff ff       	jmpq   402976 <Bitpack_run_tests+0x896>
  402df3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402df8:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402dfd:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402e01:	31 ed                	xor    %ebp,%ebp
  402e03:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402e08:	bb 05 00 00 00       	mov    $0x5,%ebx
  402e0d:	44 89 f6             	mov    %r14d,%esi
  402e10:	e8 6b f0 ff ff       	callq  401e80 <Bitpack_getu>
  402e15:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  402e19:	48 3b 84 d4 d0 00 00 	cmp    0xd0(%rsp,%rdx,8),%rax
  402e20:	00 
  402e21:	40 0f 94 c5          	sete   %bpl
  402e25:	45 85 f6             	test   %r14d,%r14d
  402e28:	74 2e                	je     402e58 <Bitpack_run_tests+0xd78>
  402e2a:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402e2f:	b3 06                	mov    $0x6,%bl
  402e31:	74 25                	je     402e58 <Bitpack_run_tests+0xd78>
  402e33:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402e37:	85 c0                	test   %eax,%eax
  402e39:	0f 84 c0 03 00 00    	je     4031ff <Bitpack_run_tests+0x111f>
  402e3f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402e43:	03 44 24 0c          	add    0xc(%rsp),%eax
  402e47:	83 f8 40             	cmp    $0x40,%eax
  402e4a:	0f 84 af 03 00 00    	je     4031ff <Bitpack_run_tests+0x111f>
  402e50:	30 db                	xor    %bl,%bl
  402e52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402e58:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402e5c:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402e60:	bf 20 52 40 00       	mov    $0x405220,%edi
  402e65:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402e69:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402e6e:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  402e75:	00 
  402e76:	31 c0                	xor    %eax,%eax
  402e78:	e8 eb 12 00 00       	callq  404168 <Fmt_string>
  402e7d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402e82:	89 ea                	mov    %ebp,%edx
  402e84:	e9 7b f9 ff ff       	jmpq   402804 <Bitpack_run_tests+0x724>
  402e89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402e90:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402e94:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402e98:	be 40 00 00 00       	mov    $0x40,%esi
  402e9d:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402ea2:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402ea7:	31 ed                	xor    %ebp,%ebp
  402ea9:	29 c6                	sub    %eax,%esi
  402eab:	44 01 f2             	add    %r14d,%edx
  402eae:	44 29 f6             	sub    %r14d,%esi
  402eb1:	e8 ca ef ff ff       	callq  401e80 <Bitpack_getu>
  402eb6:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402eba:	48 89 c3             	mov    %rax,%rbx
  402ebd:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402ec1:	be 40 00 00 00       	mov    $0x40,%esi
  402ec6:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402ecb:	29 c6                	sub    %eax,%esi
  402ecd:	44 01 f2             	add    %r14d,%edx
  402ed0:	44 29 f6             	sub    %r14d,%esi
  402ed3:	e8 a8 ef ff ff       	callq  401e80 <Bitpack_getu>
  402ed8:	48 39 c3             	cmp    %rax,%rbx
  402edb:	bb 05 00 00 00       	mov    $0x5,%ebx
  402ee0:	40 0f 94 c5          	sete   %bpl
  402ee4:	45 85 f6             	test   %r14d,%r14d
  402ee7:	74 2f                	je     402f18 <Bitpack_run_tests+0xe38>
  402ee9:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402eee:	b3 06                	mov    $0x6,%bl
  402ef0:	74 26                	je     402f18 <Bitpack_run_tests+0xe38>
  402ef2:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402ef6:	85 c0                	test   %eax,%eax
  402ef8:	0f 84 ed 02 00 00    	je     4031eb <Bitpack_run_tests+0x110b>
  402efe:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402f02:	03 44 24 0c          	add    0xc(%rsp),%eax
  402f06:	83 f8 40             	cmp    $0x40,%eax
  402f09:	0f 84 dc 02 00 00    	je     4031eb <Bitpack_run_tests+0x110b>
  402f0f:	30 db                	xor    %bl,%bl
  402f11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402f18:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402f1c:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402f20:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  402f26:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402f2a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402f2e:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  402f32:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  402f37:	41 29 f1             	sub    %esi,%r9d
  402f3a:	be 40 00 00 00       	mov    $0x40,%esi
  402f3f:	29 c6                	sub    %eax,%esi
  402f41:	89 f0                	mov    %esi,%eax
  402f43:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402f48:	01 fa                	add    %edi,%edx
  402f4a:	29 f8                	sub    %edi,%eax
  402f4c:	01 f9                	add    %edi,%ecx
  402f4e:	89 14 24             	mov    %edx,(%rsp)
  402f51:	41 29 f9             	sub    %edi,%r9d
  402f54:	89 c2                	mov    %eax,%edx
  402f56:	bf 40 51 40 00       	mov    $0x405140,%edi
  402f5b:	31 c0                	xor    %eax,%eax
  402f5d:	e8 06 12 00 00       	callq  404168 <Fmt_string>
  402f62:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402f67:	89 ea                	mov    %ebp,%edx
  402f69:	e9 b1 f7 ff ff       	jmpq   40271f <Bitpack_run_tests+0x63f>
  402f6e:	66 90                	xchg   %ax,%ax
  402f70:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402f74:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402f79:	31 d2                	xor    %edx,%edx
  402f7b:	31 ed                	xor    %ebp,%ebp
  402f7d:	e8 fe ee ff ff       	callq  401e80 <Bitpack_getu>
  402f82:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402f86:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402f8b:	31 d2                	xor    %edx,%edx
  402f8d:	48 89 c3             	mov    %rax,%rbx
  402f90:	e8 eb ee ff ff       	callq  401e80 <Bitpack_getu>
  402f95:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
  402f9a:	48 39 c3             	cmp    %rax,%rbx
  402f9d:	bb 05 00 00 00       	mov    $0x5,%ebx
  402fa2:	40 0f 94 c5          	sete   %bpl
  402fa6:	45 85 c9             	test   %r9d,%r9d
  402fa9:	74 2d                	je     402fd8 <Bitpack_run_tests+0xef8>
  402fab:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402fb0:	b3 06                	mov    $0x6,%bl
  402fb2:	74 24                	je     402fd8 <Bitpack_run_tests+0xef8>
  402fb4:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402fb8:	85 c0                	test   %eax,%eax
  402fba:	0f 84 35 02 00 00    	je     4031f5 <Bitpack_run_tests+0x1115>
  402fc0:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402fc4:	03 44 24 0c          	add    0xc(%rsp),%eax
  402fc8:	83 f8 40             	cmp    $0x40,%eax
  402fcb:	0f 84 24 02 00 00    	je     4031f5 <Bitpack_run_tests+0x1115>
  402fd1:	30 db                	xor    %bl,%bl
  402fd3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402fd8:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402fdd:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  402fe2:	bf 08 51 40 00       	mov    $0x405108,%edi
  402fe7:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402feb:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402ff0:	31 c0                	xor    %eax,%eax
  402ff2:	e8 71 11 00 00       	callq  404168 <Fmt_string>
  402ff7:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402ffc:	89 ea                	mov    %ebp,%edx
  402ffe:	e9 13 f6 ff ff       	jmpq   402616 <Bitpack_run_tests+0x536>
  403003:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  403008:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  40300c:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  403010:	bf e8 51 40 00       	mov    $0x4051e8,%edi
  403015:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  403019:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  40301e:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  403025:	00 
  403026:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  40302b:	4c 8b 8c d4 d0 00 00 	mov    0xd0(%rsp,%rdx,8),%r9
  403032:	00 
  403033:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  403037:	48 89 04 24          	mov    %rax,(%rsp)
  40303b:	31 c0                	xor    %eax,%eax
  40303d:	e8 ce db ff ff       	callq  400c10 <printf@plt>
  403042:	e9 29 f5 ff ff       	jmpq   402570 <Bitpack_run_tests+0x490>
  403047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40304e:	00 00 
  403050:	bb 04 00 00 00       	mov    $0x4,%ebx
  403055:	e9 76 f6 ff ff       	jmpq   4026d0 <Bitpack_run_tests+0x5f0>
  40305a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  403060:	bb 04 00 00 00       	mov    $0x4,%ebx
  403065:	e9 6e f7 ff ff       	jmpq   4027d8 <Bitpack_run_tests+0x6f8>
  40306a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  403070:	bb 04 00 00 00       	mov    $0x4,%ebx
  403075:	e9 a6 f9 ff ff       	jmpq   402a20 <Bitpack_run_tests+0x940>
  40307a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  403080:	bb 04 00 00 00       	mov    $0x4,%ebx
  403085:	e9 c6 f8 ff ff       	jmpq   402950 <Bitpack_run_tests+0x870>
  40308a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  403090:	bb 04 00 00 00       	mov    $0x4,%ebx
  403095:	e9 56 f5 ff ff       	jmpq   4025f0 <Bitpack_run_tests+0x510>
  40309a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  40309f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  4030a4:	31 ed                	xor    %ebp,%ebp
  4030a6:	bb 06 00 00 00       	mov    $0x6,%ebx
  4030ab:	44 89 f6             	mov    %r14d,%esi
  4030ae:	e8 9d ec ff ff       	callq  401d50 <Bitpack_gets.part.0>
  4030b3:	8b 54 24 68          	mov    0x68(%rsp),%edx
  4030b7:	48 3b 84 d4 00 01 00 	cmp    0x100(%rsp,%rdx,8),%rax
  4030be:	00 
  4030bf:	40 0f 94 c5          	sete   %bpl
  4030c3:	41 83 fe 40          	cmp    $0x40,%r14d
  4030c7:	0f 84 34 fa ff ff    	je     402b01 <Bitpack_run_tests+0xa21>
  4030cd:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4030d1:	85 c0                	test   %eax,%eax
  4030d3:	0f 84 de 00 00 00    	je     4031b7 <Bitpack_run_tests+0x10d7>
  4030d9:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4030dd:	03 44 24 0c          	add    0xc(%rsp),%eax
  4030e1:	83 f8 40             	cmp    $0x40,%eax
  4030e4:	0f 84 cd 00 00 00    	je     4031b7 <Bitpack_run_tests+0x10d7>
  4030ea:	30 db                	xor    %bl,%bl
  4030ec:	e9 10 fa ff ff       	jmpq   402b01 <Bitpack_run_tests+0xa21>
  4030f1:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  4030f8:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  4030ff:	00 
  403100:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403107:	00 
  403108:	e8 03 eb ff ff       	callq  401c10 <Except_raise>
  40310d:	e9 8f f9 ff ff       	jmpq   402aa1 <Bitpack_run_tests+0x9c1>
  403112:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  403119:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403120:	00 
  403121:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403128:	00 
  403129:	e8 e2 ea ff ff       	callq  401c10 <Except_raise>
  40312e:	e9 0f f4 ff ff       	jmpq   402542 <Bitpack_run_tests+0x462>
  403133:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  40313a:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403141:	00 
  403142:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403149:	00 
  40314a:	e8 c1 ea ff ff       	callq  401c10 <Except_raise>
  40314f:	e9 54 f8 ff ff       	jmpq   4029a8 <Bitpack_run_tests+0x8c8>
  403154:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  40315b:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403162:	00 
  403163:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  40316a:	00 
  40316b:	e8 a0 ea ff ff       	callq  401c10 <Except_raise>
  403170:	e9 2f f7 ff ff       	jmpq   4028a4 <Bitpack_run_tests+0x7c4>
  403175:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  40317c:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403183:	00 
  403184:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  40318b:	00 
  40318c:	e8 7f ea ff ff       	callq  401c10 <Except_raise>
  403191:	e9 b8 f4 ff ff       	jmpq   40264e <Bitpack_run_tests+0x56e>
  403196:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  40319d:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  4031a4:	00 
  4031a5:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  4031ac:	00 
  4031ad:	e8 5e ea ff ff       	callq  401c10 <Except_raise>
  4031b2:	e9 a0 f5 ff ff       	jmpq   402757 <Bitpack_run_tests+0x677>
  4031b7:	bb 04 00 00 00       	mov    $0x4,%ebx
  4031bc:	e9 40 f9 ff ff       	jmpq   402b01 <Bitpack_run_tests+0xa21>
  4031c1:	bb 04 00 00 00       	mov    $0x4,%ebx
  4031c6:	e9 f5 f9 ff ff       	jmpq   402bc0 <Bitpack_run_tests+0xae0>
  4031cb:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  4031cf:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  4031d4:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  4031d9:	e8 72 eb ff ff       	callq  401d50 <Bitpack_gets.part.0>
  4031de:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
  4031e3:	48 89 c6             	mov    %rax,%rsi
  4031e6:	e9 5b fb ff ff       	jmpq   402d46 <Bitpack_run_tests+0xc66>
  4031eb:	bb 04 00 00 00       	mov    $0x4,%ebx
  4031f0:	e9 23 fd ff ff       	jmpq   402f18 <Bitpack_run_tests+0xe38>
  4031f5:	bb 04 00 00 00       	mov    $0x4,%ebx
  4031fa:	e9 d9 fd ff ff       	jmpq   402fd8 <Bitpack_run_tests+0xef8>
  4031ff:	bb 04 00 00 00       	mov    $0x4,%ebx
  403204:	e9 4f fc ff ff       	jmpq   402e58 <Bitpack_run_tests+0xd78>
  403209:	bb 04 00 00 00       	mov    $0x4,%ebx
  40320e:	e9 7d fa ff ff       	jmpq   402c90 <Bitpack_run_tests+0xbb0>
  403213:	bb 04 00 00 00       	mov    $0x4,%ebx
  403218:	e9 ab fb ff ff       	jmpq   402dc8 <Bitpack_run_tests+0xce8>
  40321d:	0f 1f 00             	nopl   (%rax)

0000000000403220 <cvt_s>:
  403220:	55                   	push   %rbp
  403221:	48 89 e5             	mov    %rsp,%rbp
  403224:	53                   	push   %rbx
  403225:	48 83 ec 58          	sub    $0x58,%rsp
  403229:	89 7d dc             	mov    %edi,-0x24(%rbp)
  40322c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  403230:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  403234:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  403238:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  40323c:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  403240:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403244:	8b 10                	mov    (%rax),%edx
  403246:	83 fa 30             	cmp    $0x30,%edx
  403249:	73 15                	jae    403260 <cvt_s+0x40>
  40324b:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40324f:	8b 10                	mov    (%rax),%edx
  403251:	89 d2                	mov    %edx,%edx
  403253:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403257:	8b 08                	mov    (%rax),%ecx
  403259:	83 c1 08             	add    $0x8,%ecx
  40325c:	89 08                	mov    %ecx,(%rax)
  40325e:	eb 0f                	jmp    40326f <cvt_s+0x4f>
  403260:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403264:	48 89 ca             	mov    %rcx,%rdx
  403267:	48 83 c1 08          	add    $0x8,%rcx
  40326b:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40326f:	48 89 d0             	mov    %rdx,%rax
  403272:	48 8b 00             	mov    (%rax),%rax
  403275:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403279:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40327e:	75 1b                	jne    40329b <cvt_s+0x7b>
  403280:	ba 1b 00 00 00       	mov    $0x1b,%edx
  403285:	48 8d 35 bc 1f 00 00 	lea    0x1fbc(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  40328c:	48 8d 05 15 2b 20 00 	lea    0x202b15(%rip),%rax        # 605da8 <Assert_Failed>
  403293:	48 89 c7             	mov    %rax,%rdi
  403296:	e8 75 e9 ff ff       	callq  401c10 <Except_raise>
  40329b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40329f:	48 89 c7             	mov    %rax,%rdi
  4032a2:	e8 49 d9 ff ff       	callq  400bf0 <strlen@plt>
  4032a7:	89 c3                	mov    %eax,%ebx
  4032a9:	44 8b 45 b4          	mov    -0x4c(%rbp),%r8d
  4032ad:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  4032b1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4032b5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4032b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4032bd:	8b 75 10             	mov    0x10(%rbp),%esi
  4032c0:	89 34 24             	mov    %esi,(%rsp)
  4032c3:	45 89 c1             	mov    %r8d,%r9d
  4032c6:	49 89 f8             	mov    %rdi,%r8
  4032c9:	89 de                	mov    %ebx,%esi
  4032cb:	48 89 c7             	mov    %rax,%rdi
  4032ce:	e8 d2 08 00 00       	callq  403ba5 <Fmt_puts>
  4032d3:	48 83 c4 58          	add    $0x58,%rsp
  4032d7:	5b                   	pop    %rbx
  4032d8:	c9                   	leaveq 
  4032d9:	c3                   	retq   

00000000004032da <cvt_d>:
  4032da:	55                   	push   %rbp
  4032db:	48 89 e5             	mov    %rsp,%rbp
  4032de:	53                   	push   %rbx
  4032df:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  4032e6:	89 7d ac             	mov    %edi,-0x54(%rbp)
  4032e9:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4032ed:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4032f1:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  4032f5:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  4032f9:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  4032fd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  403301:	8b 10                	mov    (%rax),%edx
  403303:	83 fa 30             	cmp    $0x30,%edx
  403306:	73 15                	jae    40331d <cvt_d+0x43>
  403308:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40330c:	8b 10                	mov    (%rax),%edx
  40330e:	89 d2                	mov    %edx,%edx
  403310:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403314:	8b 08                	mov    (%rax),%ecx
  403316:	83 c1 08             	add    $0x8,%ecx
  403319:	89 08                	mov    %ecx,(%rax)
  40331b:	eb 0f                	jmp    40332c <cvt_d+0x52>
  40331d:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403321:	48 89 ca             	mov    %rcx,%rdx
  403324:	48 83 c1 08          	add    $0x8,%rcx
  403328:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40332c:	48 89 d0             	mov    %rdx,%rax
  40332f:	8b 00                	mov    (%rax),%eax
  403331:	89 45 dc             	mov    %eax,-0x24(%rbp)
  403334:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403338:	48 83 c0 2b          	add    $0x2b,%rax
  40333c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403340:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  403347:	75 09                	jne    403352 <cvt_d+0x78>
  403349:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  403350:	eb 16                	jmp    403368 <cvt_d+0x8e>
  403352:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  403356:	79 0a                	jns    403362 <cvt_d+0x88>
  403358:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40335b:	f7 d8                	neg    %eax
  40335d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403360:	eb 06                	jmp    403368 <cvt_d+0x8e>
  403362:	8b 45 dc             	mov    -0x24(%rbp),%eax
  403365:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403368:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  40336d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403370:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  403375:	89 c8                	mov    %ecx,%eax
  403377:	f7 e2                	mul    %edx
  403379:	c1 ea 03             	shr    $0x3,%edx
  40337c:	89 d0                	mov    %edx,%eax
  40337e:	c1 e0 02             	shl    $0x2,%eax
  403381:	01 d0                	add    %edx,%eax
  403383:	01 c0                	add    %eax,%eax
  403385:	89 ca                	mov    %ecx,%edx
  403387:	29 c2                	sub    %eax,%edx
  403389:	89 d0                	mov    %edx,%eax
  40338b:	83 c0 30             	add    $0x30,%eax
  40338e:	89 c2                	mov    %eax,%edx
  403390:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403394:	88 10                	mov    %dl,(%rax)
  403396:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403399:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  40339f:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  4033a4:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  4033aa:	f7 e2                	mul    %edx
  4033ac:	89 d0                	mov    %edx,%eax
  4033ae:	c1 e8 03             	shr    $0x3,%eax
  4033b1:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4033b4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4033b8:	75 ae                	jne    403368 <cvt_d+0x8e>
  4033ba:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  4033be:	79 0c                	jns    4033cc <cvt_d+0xf2>
  4033c0:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  4033c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4033c9:	c6 00 2d             	movb   $0x2d,(%rax)
  4033cc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4033d0:	48 83 c0 2b          	add    $0x2b,%rax
  4033d4:	89 c2                	mov    %eax,%edx
  4033d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4033da:	89 d1                	mov    %edx,%ecx
  4033dc:	29 c1                	sub    %eax,%ecx
  4033de:	89 c8                	mov    %ecx,%eax
  4033e0:	89 c3                	mov    %eax,%ebx
  4033e2:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  4033e6:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  4033ea:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  4033ee:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  4033f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4033f6:	8b 75 10             	mov    0x10(%rbp),%esi
  4033f9:	89 34 24             	mov    %esi,(%rsp)
  4033fc:	45 89 c1             	mov    %r8d,%r9d
  4033ff:	49 89 f8             	mov    %rdi,%r8
  403402:	89 de                	mov    %ebx,%esi
  403404:	48 89 c7             	mov    %rax,%rdi
  403407:	e8 cd 14 00 00       	callq  4048d9 <Fmt_putd>
  40340c:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  403413:	5b                   	pop    %rbx
  403414:	c9                   	leaveq 
  403415:	c3                   	retq   

0000000000403416 <cvt_u>:
  403416:	55                   	push   %rbp
  403417:	48 89 e5             	mov    %rsp,%rbp
  40341a:	53                   	push   %rbx
  40341b:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  403422:	89 7d ac             	mov    %edi,-0x54(%rbp)
  403425:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  403429:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  40342d:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403431:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403435:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  403439:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40343d:	8b 10                	mov    (%rax),%edx
  40343f:	83 fa 30             	cmp    $0x30,%edx
  403442:	73 15                	jae    403459 <cvt_u+0x43>
  403444:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403448:	8b 10                	mov    (%rax),%edx
  40344a:	89 d2                	mov    %edx,%edx
  40344c:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403450:	8b 08                	mov    (%rax),%ecx
  403452:	83 c1 08             	add    $0x8,%ecx
  403455:	89 08                	mov    %ecx,(%rax)
  403457:	eb 0f                	jmp    403468 <cvt_u+0x52>
  403459:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40345d:	48 89 ca             	mov    %rcx,%rdx
  403460:	48 83 c1 08          	add    $0x8,%rcx
  403464:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403468:	48 89 d0             	mov    %rdx,%rax
  40346b:	8b 00                	mov    (%rax),%eax
  40346d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403470:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403474:	48 83 c0 2b          	add    $0x2b,%rax
  403478:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40347c:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403481:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403484:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  403489:	89 c8                	mov    %ecx,%eax
  40348b:	f7 e2                	mul    %edx
  40348d:	c1 ea 03             	shr    $0x3,%edx
  403490:	89 d0                	mov    %edx,%eax
  403492:	c1 e0 02             	shl    $0x2,%eax
  403495:	01 d0                	add    %edx,%eax
  403497:	01 c0                	add    %eax,%eax
  403499:	89 ca                	mov    %ecx,%edx
  40349b:	29 c2                	sub    %eax,%edx
  40349d:	89 d0                	mov    %edx,%eax
  40349f:	83 c0 30             	add    $0x30,%eax
  4034a2:	89 c2                	mov    %eax,%edx
  4034a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4034a8:	88 10                	mov    %dl,(%rax)
  4034aa:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  4034ad:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  4034b3:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  4034b8:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  4034be:	f7 e2                	mul    %edx
  4034c0:	89 d0                	mov    %edx,%eax
  4034c2:	c1 e8 03             	shr    $0x3,%eax
  4034c5:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4034c8:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4034cc:	75 ae                	jne    40347c <cvt_u+0x66>
  4034ce:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4034d2:	48 83 c0 2b          	add    $0x2b,%rax
  4034d6:	89 c2                	mov    %eax,%edx
  4034d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4034dc:	89 d1                	mov    %edx,%ecx
  4034de:	29 c1                	sub    %eax,%ecx
  4034e0:	89 c8                	mov    %ecx,%eax
  4034e2:	89 c3                	mov    %eax,%ebx
  4034e4:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  4034e8:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  4034ec:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  4034f0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  4034f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4034f8:	8b 75 10             	mov    0x10(%rbp),%esi
  4034fb:	89 34 24             	mov    %esi,(%rsp)
  4034fe:	45 89 c1             	mov    %r8d,%r9d
  403501:	49 89 f8             	mov    %rdi,%r8
  403504:	89 de                	mov    %ebx,%esi
  403506:	48 89 c7             	mov    %rax,%rdi
  403509:	e8 cb 13 00 00       	callq  4048d9 <Fmt_putd>
  40350e:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  403515:	5b                   	pop    %rbx
  403516:	c9                   	leaveq 
  403517:	c3                   	retq   

0000000000403518 <cvt_o>:
  403518:	55                   	push   %rbp
  403519:	48 89 e5             	mov    %rsp,%rbp
  40351c:	53                   	push   %rbx
  40351d:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  403524:	89 7d ac             	mov    %edi,-0x54(%rbp)
  403527:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  40352b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  40352f:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403533:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403537:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  40353b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40353f:	8b 10                	mov    (%rax),%edx
  403541:	83 fa 30             	cmp    $0x30,%edx
  403544:	73 15                	jae    40355b <cvt_o+0x43>
  403546:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40354a:	8b 10                	mov    (%rax),%edx
  40354c:	89 d2                	mov    %edx,%edx
  40354e:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403552:	8b 08                	mov    (%rax),%ecx
  403554:	83 c1 08             	add    $0x8,%ecx
  403557:	89 08                	mov    %ecx,(%rax)
  403559:	eb 0f                	jmp    40356a <cvt_o+0x52>
  40355b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40355f:	48 89 ca             	mov    %rcx,%rdx
  403562:	48 83 c1 08          	add    $0x8,%rcx
  403566:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40356a:	48 89 d0             	mov    %rdx,%rax
  40356d:	8b 00                	mov    (%rax),%eax
  40356f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403572:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403576:	48 83 c0 2b          	add    $0x2b,%rax
  40357a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40357e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403583:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403586:	83 e0 07             	and    $0x7,%eax
  403589:	83 c0 30             	add    $0x30,%eax
  40358c:	89 c2                	mov    %eax,%edx
  40358e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403592:	88 10                	mov    %dl,(%rax)
  403594:	c1 6d ec 03          	shrl   $0x3,-0x14(%rbp)
  403598:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  40359c:	75 e0                	jne    40357e <cvt_o+0x66>
  40359e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4035a2:	48 83 c0 2b          	add    $0x2b,%rax
  4035a6:	89 c2                	mov    %eax,%edx
  4035a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4035ac:	89 d1                	mov    %edx,%ecx
  4035ae:	29 c1                	sub    %eax,%ecx
  4035b0:	89 c8                	mov    %ecx,%eax
  4035b2:	89 c3                	mov    %eax,%ebx
  4035b4:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  4035b8:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  4035bc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  4035c0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  4035c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4035c8:	8b 75 10             	mov    0x10(%rbp),%esi
  4035cb:	89 34 24             	mov    %esi,(%rsp)
  4035ce:	45 89 c1             	mov    %r8d,%r9d
  4035d1:	49 89 f8             	mov    %rdi,%r8
  4035d4:	89 de                	mov    %ebx,%esi
  4035d6:	48 89 c7             	mov    %rax,%rdi
  4035d9:	e8 fb 12 00 00       	callq  4048d9 <Fmt_putd>
  4035de:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  4035e5:	5b                   	pop    %rbx
  4035e6:	c9                   	leaveq 
  4035e7:	c3                   	retq   

00000000004035e8 <cvt_x>:
  4035e8:	55                   	push   %rbp
  4035e9:	48 89 e5             	mov    %rsp,%rbp
  4035ec:	53                   	push   %rbx
  4035ed:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  4035f4:	89 7d ac             	mov    %edi,-0x54(%rbp)
  4035f7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4035fb:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4035ff:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403603:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403607:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  40360b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40360f:	8b 10                	mov    (%rax),%edx
  403611:	83 fa 30             	cmp    $0x30,%edx
  403614:	73 15                	jae    40362b <cvt_x+0x43>
  403616:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40361a:	8b 10                	mov    (%rax),%edx
  40361c:	89 d2                	mov    %edx,%edx
  40361e:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403622:	8b 08                	mov    (%rax),%ecx
  403624:	83 c1 08             	add    $0x8,%ecx
  403627:	89 08                	mov    %ecx,(%rax)
  403629:	eb 0f                	jmp    40363a <cvt_x+0x52>
  40362b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40362f:	48 89 ca             	mov    %rcx,%rdx
  403632:	48 83 c1 08          	add    $0x8,%rcx
  403636:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40363a:	48 89 d0             	mov    %rdx,%rax
  40363d:	8b 00                	mov    (%rax),%eax
  40363f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403642:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403646:	48 83 c0 2b          	add    $0x2b,%rax
  40364a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40364e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403653:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403656:	83 e0 0f             	and    $0xf,%eax
  403659:	89 c2                	mov    %eax,%edx
  40365b:	48 8d 05 f0 1b 00 00 	lea    0x1bf0(%rip),%rax        # 405252 <_IO_stdin_used+0x3ca>
  403662:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  403666:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40366a:	88 10                	mov    %dl,(%rax)
  40366c:	c1 6d ec 04          	shrl   $0x4,-0x14(%rbp)
  403670:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  403674:	75 d8                	jne    40364e <cvt_x+0x66>
  403676:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40367a:	48 83 c0 2b          	add    $0x2b,%rax
  40367e:	89 c2                	mov    %eax,%edx
  403680:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403684:	89 d1                	mov    %edx,%ecx
  403686:	29 c1                	sub    %eax,%ecx
  403688:	89 c8                	mov    %ecx,%eax
  40368a:	89 c3                	mov    %eax,%ebx
  40368c:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403690:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403694:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  403698:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40369c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4036a0:	8b 75 10             	mov    0x10(%rbp),%esi
  4036a3:	89 34 24             	mov    %esi,(%rsp)
  4036a6:	45 89 c1             	mov    %r8d,%r9d
  4036a9:	49 89 f8             	mov    %rdi,%r8
  4036ac:	89 de                	mov    %ebx,%esi
  4036ae:	48 89 c7             	mov    %rax,%rdi
  4036b1:	e8 23 12 00 00       	callq  4048d9 <Fmt_putd>
  4036b6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  4036bd:	5b                   	pop    %rbx
  4036be:	c9                   	leaveq 
  4036bf:	c3                   	retq   

00000000004036c0 <cvt_p>:
  4036c0:	55                   	push   %rbp
  4036c1:	48 89 e5             	mov    %rsp,%rbp
  4036c4:	53                   	push   %rbx
  4036c5:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  4036cc:	89 7d ac             	mov    %edi,-0x54(%rbp)
  4036cf:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4036d3:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4036d7:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  4036db:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  4036df:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  4036e3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4036e7:	8b 10                	mov    (%rax),%edx
  4036e9:	83 fa 30             	cmp    $0x30,%edx
  4036ec:	73 15                	jae    403703 <cvt_p+0x43>
  4036ee:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4036f2:	8b 10                	mov    (%rax),%edx
  4036f4:	89 d2                	mov    %edx,%edx
  4036f6:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4036fa:	8b 08                	mov    (%rax),%ecx
  4036fc:	83 c1 08             	add    $0x8,%ecx
  4036ff:	89 08                	mov    %ecx,(%rax)
  403701:	eb 0f                	jmp    403712 <cvt_p+0x52>
  403703:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403707:	48 89 ca             	mov    %rcx,%rdx
  40370a:	48 83 c1 08          	add    $0x8,%rcx
  40370e:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403712:	48 89 d0             	mov    %rdx,%rax
  403715:	48 8b 00             	mov    (%rax),%rax
  403718:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40371c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403720:	48 83 c0 2b          	add    $0x2b,%rax
  403724:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403728:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%rbp)
  40372f:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403734:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403738:	48 89 c2             	mov    %rax,%rdx
  40373b:	83 e2 0f             	and    $0xf,%edx
  40373e:	48 8d 05 0d 1b 00 00 	lea    0x1b0d(%rip),%rax        # 405252 <_IO_stdin_used+0x3ca>
  403745:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  403749:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40374d:	88 10                	mov    %dl,(%rax)
  40374f:	48 c1 6d e8 04       	shrq   $0x4,-0x18(%rbp)
  403754:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403759:	75 d4                	jne    40372f <cvt_p+0x6f>
  40375b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40375f:	48 83 c0 2b          	add    $0x2b,%rax
  403763:	89 c2                	mov    %eax,%edx
  403765:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403769:	89 d1                	mov    %edx,%ecx
  40376b:	29 c1                	sub    %eax,%ecx
  40376d:	89 c8                	mov    %ecx,%eax
  40376f:	89 c3                	mov    %eax,%ebx
  403771:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403775:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403779:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  40377d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  403781:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403785:	8b 75 dc             	mov    -0x24(%rbp),%esi
  403788:	89 34 24             	mov    %esi,(%rsp)
  40378b:	45 89 c1             	mov    %r8d,%r9d
  40378e:	49 89 f8             	mov    %rdi,%r8
  403791:	89 de                	mov    %ebx,%esi
  403793:	48 89 c7             	mov    %rax,%rdi
  403796:	e8 3e 11 00 00       	callq  4048d9 <Fmt_putd>
  40379b:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  4037a2:	5b                   	pop    %rbx
  4037a3:	c9                   	leaveq 
  4037a4:	c3                   	retq   

00000000004037a5 <cvt_c>:
  4037a5:	55                   	push   %rbp
  4037a6:	48 89 e5             	mov    %rsp,%rbp
  4037a9:	48 83 ec 40          	sub    $0x40,%rsp
  4037ad:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4037b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4037b4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4037b8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4037bc:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  4037c0:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  4037c4:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  4037cb:	75 07                	jne    4037d4 <cvt_c+0x2f>
  4037cd:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  4037d4:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  4037d8:	79 0e                	jns    4037e8 <cvt_c+0x43>
  4037da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4037de:	48 83 c0 2d          	add    $0x2d,%rax
  4037e2:	c6 00 01             	movb   $0x1,(%rax)
  4037e5:	f7 5d c4             	negl   -0x3c(%rbp)
  4037e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4037ec:	48 83 c0 2d          	add    $0x2d,%rax
  4037f0:	0f b6 00             	movzbl (%rax),%eax
  4037f3:	84 c0                	test   %al,%al
  4037f5:	75 2c                	jne    403823 <cvt_c+0x7e>
  4037f7:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4037fa:	83 e8 01             	sub    $0x1,%eax
  4037fd:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403800:	eb 12                	jmp    403814 <cvt_c+0x6f>
  403802:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403806:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40380a:	48 89 c6             	mov    %rax,%rsi
  40380d:	bf 20 00 00 00       	mov    $0x20,%edi
  403812:	ff d2                	callq  *%rdx
  403814:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403818:	0f 9f c0             	setg   %al
  40381b:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  40381f:	84 c0                	test   %al,%al
  403821:	75 df                	jne    403802 <cvt_c+0x5d>
  403823:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403827:	8b 10                	mov    (%rax),%edx
  403829:	83 fa 30             	cmp    $0x30,%edx
  40382c:	73 15                	jae    403843 <cvt_c+0x9e>
  40382e:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403832:	8b 10                	mov    (%rax),%edx
  403834:	89 d2                	mov    %edx,%edx
  403836:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  40383a:	8b 08                	mov    (%rax),%ecx
  40383c:	83 c1 08             	add    $0x8,%ecx
  40383f:	89 08                	mov    %ecx,(%rax)
  403841:	eb 0f                	jmp    403852 <cvt_c+0xad>
  403843:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403847:	48 89 ca             	mov    %rcx,%rdx
  40384a:	48 83 c1 08          	add    $0x8,%rcx
  40384e:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403852:	48 89 d0             	mov    %rdx,%rax
  403855:	8b 00                	mov    (%rax),%eax
  403857:	0f b6 c0             	movzbl %al,%eax
  40385a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40385e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  403862:	48 89 d6             	mov    %rdx,%rsi
  403865:	89 c7                	mov    %eax,%edi
  403867:	ff d1                	callq  *%rcx
  403869:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40386d:	48 83 c0 2d          	add    $0x2d,%rax
  403871:	0f b6 00             	movzbl (%rax),%eax
  403874:	84 c0                	test   %al,%al
  403876:	74 2c                	je     4038a4 <cvt_c+0xff>
  403878:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40387b:	83 e8 01             	sub    $0x1,%eax
  40387e:	89 45 f8             	mov    %eax,-0x8(%rbp)
  403881:	eb 12                	jmp    403895 <cvt_c+0xf0>
  403883:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403887:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40388b:	48 89 c6             	mov    %rax,%rsi
  40388e:	bf 20 00 00 00       	mov    $0x20,%edi
  403893:	ff d2                	callq  *%rdx
  403895:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  403899:	0f 9f c0             	setg   %al
  40389c:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
  4038a0:	84 c0                	test   %al,%al
  4038a2:	75 df                	jne    403883 <cvt_c+0xde>
  4038a4:	c9                   	leaveq 
  4038a5:	c3                   	retq   

00000000004038a6 <cvt_f>:
  4038a6:	55                   	push   %rbp
  4038a7:	48 89 e5             	mov    %rsp,%rbp
  4038aa:	53                   	push   %rbx
  4038ab:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
  4038b2:	89 bd 4c fe ff ff    	mov    %edi,-0x1b4(%rbp)
  4038b8:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
  4038bf:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  4038c6:	48 89 8d 30 fe ff ff 	mov    %rcx,-0x1d0(%rbp)
  4038cd:	4c 89 85 28 fe ff ff 	mov    %r8,-0x1d8(%rbp)
  4038d4:	44 89 8d 24 fe ff ff 	mov    %r9d,-0x1dc(%rbp)
  4038db:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4038df:	79 07                	jns    4038e8 <cvt_f+0x42>
  4038e1:	c7 45 10 06 00 00 00 	movl   $0x6,0x10(%rbp)
  4038e8:	83 bd 4c fe ff ff 67 	cmpl   $0x67,-0x1b4(%rbp)
  4038ef:	75 0d                	jne    4038fe <cvt_f+0x58>
  4038f1:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4038f5:	75 07                	jne    4038fe <cvt_f+0x58>
  4038f7:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  4038fe:	83 7d 10 63          	cmpl   $0x63,0x10(%rbp)
  403902:	7e 1b                	jle    40391f <cvt_f+0x79>
  403904:	ba 7e 00 00 00       	mov    $0x7e,%edx
  403909:	48 8d 35 38 19 00 00 	lea    0x1938(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  403910:	48 8d 05 91 24 20 00 	lea    0x202491(%rip),%rax        # 605da8 <Assert_Failed>
  403917:	48 89 c7             	mov    %rax,%rdi
  40391a:	e8 f1 e2 ff ff       	callq  401c10 <Except_raise>
  40391f:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
  403925:	88 05 e6 27 20 00    	mov    %al,0x2027e6(%rip)        # 606111 <fmt.2280+0x4>
  40392b:	8b 4d 10             	mov    0x10(%rbp),%ecx
  40392e:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403933:	89 c8                	mov    %ecx,%eax
  403935:	f7 ea                	imul   %edx
  403937:	c1 fa 02             	sar    $0x2,%edx
  40393a:	89 c8                	mov    %ecx,%eax
  40393c:	c1 f8 1f             	sar    $0x1f,%eax
  40393f:	29 c2                	sub    %eax,%edx
  403941:	89 d0                	mov    %edx,%eax
  403943:	c1 e0 02             	shl    $0x2,%eax
  403946:	01 d0                	add    %edx,%eax
  403948:	01 c0                	add    %eax,%eax
  40394a:	89 ca                	mov    %ecx,%edx
  40394c:	29 c2                	sub    %eax,%edx
  40394e:	89 d0                	mov    %edx,%eax
  403950:	83 c0 30             	add    $0x30,%eax
  403953:	88 05 b7 27 20 00    	mov    %al,0x2027b7(%rip)        # 606110 <fmt.2280+0x3>
  403959:	8b 4d 10             	mov    0x10(%rbp),%ecx
  40395c:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403961:	89 c8                	mov    %ecx,%eax
  403963:	f7 ea                	imul   %edx
  403965:	c1 fa 02             	sar    $0x2,%edx
  403968:	89 c8                	mov    %ecx,%eax
  40396a:	c1 f8 1f             	sar    $0x1f,%eax
  40396d:	89 d1                	mov    %edx,%ecx
  40396f:	29 c1                	sub    %eax,%ecx
  403971:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403976:	89 c8                	mov    %ecx,%eax
  403978:	f7 ea                	imul   %edx
  40397a:	c1 fa 02             	sar    $0x2,%edx
  40397d:	89 c8                	mov    %ecx,%eax
  40397f:	c1 f8 1f             	sar    $0x1f,%eax
  403982:	29 c2                	sub    %eax,%edx
  403984:	89 d0                	mov    %edx,%eax
  403986:	c1 e0 02             	shl    $0x2,%eax
  403989:	01 d0                	add    %edx,%eax
  40398b:	01 c0                	add    %eax,%eax
  40398d:	89 ca                	mov    %ecx,%edx
  40398f:	29 c2                	sub    %eax,%edx
  403991:	89 d0                	mov    %edx,%eax
  403993:	83 c0 30             	add    $0x30,%eax
  403996:	88 05 73 27 20 00    	mov    %al,0x202773(%rip)        # 60610f <fmt.2280+0x2>
  40399c:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  4039a3:	8b 50 04             	mov    0x4(%rax),%edx
  4039a6:	81 fa b0 00 00 00    	cmp    $0xb0,%edx
  4039ac:	73 18                	jae    4039c6 <cvt_f+0x120>
  4039ae:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4039b2:	8b 50 04             	mov    0x4(%rax),%edx
  4039b5:	89 d2                	mov    %edx,%edx
  4039b7:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4039bb:	8b 48 04             	mov    0x4(%rax),%ecx
  4039be:	83 c1 10             	add    $0x10,%ecx
  4039c1:	89 48 04             	mov    %ecx,0x4(%rax)
  4039c4:	eb 0f                	jmp    4039d5 <cvt_f+0x12f>
  4039c6:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4039ca:	48 89 ca             	mov    %rcx,%rdx
  4039cd:	48 83 c1 08          	add    $0x8,%rcx
  4039d1:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4039d5:	48 89 d0             	mov    %rdx,%rax
  4039d8:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4039dc:	48 8d 15 2a 27 20 00 	lea    0x20272a(%rip),%rdx        # 60610d <fmt.2280>
  4039e3:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4039ea:	48 89 d6             	mov    %rdx,%rsi
  4039ed:	48 89 c7             	mov    %rax,%rdi
  4039f0:	b8 01 00 00 00       	mov    $0x1,%eax
  4039f5:	e8 f6 d2 ff ff       	callq  400cf0 <sprintf@plt>
  4039fa:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  403a01:	48 89 c7             	mov    %rax,%rdi
  403a04:	e8 e7 d1 ff ff       	callq  400bf0 <strlen@plt>
  403a09:	89 c3                	mov    %eax,%ebx
  403a0b:	44 8b 85 24 fe ff ff 	mov    -0x1dc(%rbp),%r8d
  403a12:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  403a19:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
  403a20:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
  403a27:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  403a2e:	8b 75 10             	mov    0x10(%rbp),%esi
  403a31:	89 34 24             	mov    %esi,(%rsp)
  403a34:	45 89 c1             	mov    %r8d,%r9d
  403a37:	49 89 f8             	mov    %rdi,%r8
  403a3a:	89 de                	mov    %ebx,%esi
  403a3c:	48 89 c7             	mov    %rax,%rdi
  403a3f:	e8 95 0e 00 00       	callq  4048d9 <Fmt_putd>
  403a44:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
  403a4b:	5b                   	pop    %rbx
  403a4c:	c9                   	leaveq 
  403a4d:	c3                   	retq   

0000000000403a4e <outc>:
  403a4e:	55                   	push   %rbp
  403a4f:	48 89 e5             	mov    %rsp,%rbp
  403a52:	48 83 ec 20          	sub    $0x20,%rsp
  403a56:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403a59:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403a5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403a61:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403a65:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403a69:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403a6c:	48 89 d6             	mov    %rdx,%rsi
  403a6f:	89 c7                	mov    %eax,%edi
  403a71:	e8 ba d1 ff ff       	callq  400c30 <_IO_putc@plt>
  403a76:	c9                   	leaveq 
  403a77:	c3                   	retq   

0000000000403a78 <insert>:
  403a78:	55                   	push   %rbp
  403a79:	48 89 e5             	mov    %rsp,%rbp
  403a7c:	48 83 ec 20          	sub    $0x20,%rsp
  403a80:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403a83:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403a87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403a8b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403a93:	48 8b 50 08          	mov    0x8(%rax),%rdx
  403a97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403a9b:	48 8b 08             	mov    (%rax),%rcx
  403a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403aa2:	8b 40 10             	mov    0x10(%rax),%eax
  403aa5:	48 98                	cltq   
  403aa7:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  403aab:	48 39 c2             	cmp    %rax,%rdx
  403aae:	72 1b                	jb     403acb <insert+0x53>
  403ab0:	ba a2 00 00 00       	mov    $0xa2,%edx
  403ab5:	48 8d 35 8c 17 00 00 	lea    0x178c(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  403abc:	48 8d 05 ed 22 20 00 	lea    0x2022ed(%rip),%rax        # 605db0 <Fmt_Overflow>
  403ac3:	48 89 c7             	mov    %rax,%rdi
  403ac6:	e8 45 e1 ff ff       	callq  401c10 <Except_raise>
  403acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403acf:	48 8b 40 08          	mov    0x8(%rax),%rax
  403ad3:	8b 55 ec             	mov    -0x14(%rbp),%edx
  403ad6:	88 10                	mov    %dl,(%rax)
  403ad8:	48 8d 50 01          	lea    0x1(%rax),%rdx
  403adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ae0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403ae4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403ae7:	c9                   	leaveq 
  403ae8:	c3                   	retq   

0000000000403ae9 <append>:
  403ae9:	55                   	push   %rbp
  403aea:	48 89 e5             	mov    %rsp,%rbp
  403aed:	53                   	push   %rbx
  403aee:	48 83 ec 28          	sub    $0x28,%rsp
  403af2:	89 7d dc             	mov    %edi,-0x24(%rbp)
  403af5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  403af9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403afd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403b01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b05:	48 8b 50 08          	mov    0x8(%rax),%rdx
  403b09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b0d:	48 8b 08             	mov    (%rax),%rcx
  403b10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b14:	8b 40 10             	mov    0x10(%rax),%eax
  403b17:	48 98                	cltq   
  403b19:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  403b1d:	48 39 c2             	cmp    %rax,%rdx
  403b20:	72 60                	jb     403b82 <append+0x99>
  403b22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b26:	8b 40 10             	mov    0x10(%rax),%eax
  403b29:	01 c0                	add    %eax,%eax
  403b2b:	48 63 d8             	movslq %eax,%rbx
  403b2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b32:	48 8b 00             	mov    (%rax),%rax
  403b35:	b9 a9 00 00 00       	mov    $0xa9,%ecx
  403b3a:	48 8d 15 07 17 00 00 	lea    0x1707(%rip),%rdx        # 405248 <_IO_stdin_used+0x3c0>
  403b41:	48 89 de             	mov    %rbx,%rsi
  403b44:	48 89 c7             	mov    %rax,%rdi
  403b47:	e8 ef 11 00 00       	callq  404d3b <Mem_resize>
  403b4c:	48 89 c2             	mov    %rax,%rdx
  403b4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b53:	48 89 10             	mov    %rdx,(%rax)
  403b56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b5a:	48 8b 10             	mov    (%rax),%rdx
  403b5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b61:	8b 40 10             	mov    0x10(%rax),%eax
  403b64:	48 98                	cltq   
  403b66:	48 01 c2             	add    %rax,%rdx
  403b69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b6d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403b71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b75:	8b 40 10             	mov    0x10(%rax),%eax
  403b78:	8d 14 00             	lea    (%rax,%rax,1),%edx
  403b7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b7f:	89 50 10             	mov    %edx,0x10(%rax)
  403b82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b86:	48 8b 40 08          	mov    0x8(%rax),%rax
  403b8a:	8b 55 dc             	mov    -0x24(%rbp),%edx
  403b8d:	88 10                	mov    %dl,(%rax)
  403b8f:	48 8d 50 01          	lea    0x1(%rax),%rdx
  403b93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403b97:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403b9b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  403b9e:	48 83 c4 28          	add    $0x28,%rsp
  403ba2:	5b                   	pop    %rbx
  403ba3:	c9                   	leaveq 
  403ba4:	c3                   	retq   

0000000000403ba5 <Fmt_puts>:
  403ba5:	55                   	push   %rbp
  403ba6:	48 89 e5             	mov    %rsp,%rbp
  403ba9:	48 83 ec 40          	sub    $0x40,%rsp
  403bad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403bb1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  403bb4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  403bb8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  403bbc:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  403bc0:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  403bc4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403bc9:	75 1b                	jne    403be6 <Fmt_puts+0x41>
  403bcb:	ba b3 00 00 00       	mov    $0xb3,%edx
  403bd0:	48 8d 35 71 16 00 00 	lea    0x1671(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  403bd7:	48 8d 05 ca 21 20 00 	lea    0x2021ca(%rip),%rax        # 605da8 <Assert_Failed>
  403bde:	48 89 c7             	mov    %rax,%rdi
  403be1:	e8 2a e0 ff ff       	callq  401c10 <Except_raise>
  403be6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  403bea:	79 1b                	jns    403c07 <Fmt_puts+0x62>
  403bec:	ba b4 00 00 00       	mov    $0xb4,%edx
  403bf1:	48 8d 35 50 16 00 00 	lea    0x1650(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  403bf8:	48 8d 05 a9 21 20 00 	lea    0x2021a9(%rip),%rax        # 605da8 <Assert_Failed>
  403bff:	48 89 c7             	mov    %rax,%rdi
  403c02:	e8 09 e0 ff ff       	callq  401c10 <Except_raise>
  403c07:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  403c0c:	75 1b                	jne    403c29 <Fmt_puts+0x84>
  403c0e:	ba b5 00 00 00       	mov    $0xb5,%edx
  403c13:	48 8d 35 2e 16 00 00 	lea    0x162e(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  403c1a:	48 8d 05 87 21 20 00 	lea    0x202187(%rip),%rax        # 605da8 <Assert_Failed>
  403c21:	48 89 c7             	mov    %rax,%rdi
  403c24:	e8 e7 df ff ff       	callq  401c10 <Except_raise>
  403c29:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  403c30:	75 07                	jne    403c39 <Fmt_puts+0x94>
  403c32:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  403c39:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  403c3d:	79 0e                	jns    403c4d <Fmt_puts+0xa8>
  403c3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403c43:	48 83 c0 2d          	add    $0x2d,%rax
  403c47:	c6 00 01             	movb   $0x1,(%rax)
  403c4a:	f7 5d c4             	negl   -0x3c(%rbp)
  403c4d:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  403c51:	78 0b                	js     403c5e <Fmt_puts+0xb9>
  403c53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403c57:	48 83 c0 30          	add    $0x30,%rax
  403c5b:	c6 00 00             	movb   $0x0,(%rax)
  403c5e:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  403c62:	78 0e                	js     403c72 <Fmt_puts+0xcd>
  403c64:	8b 45 10             	mov    0x10(%rbp),%eax
  403c67:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  403c6a:	7d 06                	jge    403c72 <Fmt_puts+0xcd>
  403c6c:	8b 45 10             	mov    0x10(%rbp),%eax
  403c6f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  403c72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403c76:	48 83 c0 2d          	add    $0x2d,%rax
  403c7a:	0f b6 00             	movzbl (%rax),%eax
  403c7d:	84 c0                	test   %al,%al
  403c7f:	75 32                	jne    403cb3 <Fmt_puts+0x10e>
  403c81:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  403c84:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  403c87:	89 d1                	mov    %edx,%ecx
  403c89:	29 c1                	sub    %eax,%ecx
  403c8b:	89 c8                	mov    %ecx,%eax
  403c8d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403c90:	eb 12                	jmp    403ca4 <Fmt_puts+0xff>
  403c92:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403c96:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  403c9a:	48 89 c6             	mov    %rax,%rsi
  403c9d:	bf 20 00 00 00       	mov    $0x20,%edi
  403ca2:	ff d2                	callq  *%rdx
  403ca4:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403ca8:	0f 9f c0             	setg   %al
  403cab:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  403caf:	84 c0                	test   %al,%al
  403cb1:	75 df                	jne    403c92 <Fmt_puts+0xed>
  403cb3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  403cba:	eb 22                	jmp    403cde <Fmt_puts+0x139>
  403cbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403cc0:	0f b6 00             	movzbl (%rax),%eax
  403cc3:	0f b6 c0             	movzbl %al,%eax
  403cc6:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  403ccb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  403ccf:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  403cd3:	48 89 d6             	mov    %rdx,%rsi
  403cd6:	89 c7                	mov    %eax,%edi
  403cd8:	ff d1                	callq  *%rcx
  403cda:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  403cde:	8b 45 f8             	mov    -0x8(%rbp),%eax
  403ce1:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  403ce4:	7c d6                	jl     403cbc <Fmt_puts+0x117>
  403ce6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403cea:	48 83 c0 2d          	add    $0x2d,%rax
  403cee:	0f b6 00             	movzbl (%rax),%eax
  403cf1:	84 c0                	test   %al,%al
  403cf3:	74 32                	je     403d27 <Fmt_puts+0x182>
  403cf5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  403cf8:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  403cfb:	89 d1                	mov    %edx,%ecx
  403cfd:	29 c1                	sub    %eax,%ecx
  403cff:	89 c8                	mov    %ecx,%eax
  403d01:	89 45 f4             	mov    %eax,-0xc(%rbp)
  403d04:	eb 12                	jmp    403d18 <Fmt_puts+0x173>
  403d06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403d0a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  403d0e:	48 89 c6             	mov    %rax,%rsi
  403d11:	bf 20 00 00 00       	mov    $0x20,%edi
  403d16:	ff d2                	callq  *%rdx
  403d18:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  403d1c:	0f 9f c0             	setg   %al
  403d1f:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  403d23:	84 c0                	test   %al,%al
  403d25:	75 df                	jne    403d06 <Fmt_puts+0x161>
  403d27:	c9                   	leaveq 
  403d28:	c3                   	retq   

0000000000403d29 <Fmt_fmt>:
  403d29:	55                   	push   %rbp
  403d2a:	48 89 e5             	mov    %rsp,%rbp
  403d2d:	53                   	push   %rbx
  403d2e:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  403d35:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  403d3c:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  403d43:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  403d4a:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  403d51:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  403d58:	0f b6 c0             	movzbl %al,%eax
  403d5b:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  403d62:	00 
  403d63:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403d93 <Fmt_fmt+0x6a>
  403d6a:	48 29 c8             	sub    %rcx,%rax
  403d6d:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  403d71:	ff e0                	jmpq   *%rax
  403d73:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  403d77:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  403d7b:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  403d7f:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  403d83:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  403d87:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  403d8b:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  403d8f:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  403d93:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  403d9a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403da1:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  403da7:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403dae:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403db5:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403dbc:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403dc0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403dc4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403dcb:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  403dd2:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403dd6:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  403ddd:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  403de4:	48 8b 9d 10 ff ff ff 	mov    -0xf0(%rbp),%rbx
  403deb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  403df2:	48 89 de             	mov    %rbx,%rsi
  403df5:	48 89 c7             	mov    %rax,%rdi
  403df8:	e8 2b 05 00 00       	callq  404328 <Fmt_vfmt>
  403dfd:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  403e04:	5b                   	pop    %rbx
  403e05:	c9                   	leaveq 
  403e06:	c3                   	retq   

0000000000403e07 <Fmt_print>:
  403e07:	55                   	push   %rbp
  403e08:	48 89 e5             	mov    %rsp,%rbp
  403e0b:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  403e12:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  403e19:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  403e20:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  403e27:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  403e2e:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  403e35:	0f b6 c0             	movzbl %al,%eax
  403e38:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  403e3f:	00 
  403e40:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403e70 <Fmt_print+0x69>
  403e47:	48 29 d0             	sub    %rdx,%rax
  403e4a:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  403e4e:	ff e0                	jmpq   *%rax
  403e50:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403e54:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403e58:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  403e5c:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403e60:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403e64:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403e68:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  403e6c:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403e70:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  403e77:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403e7e:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  403e84:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403e8b:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403e92:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403e99:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403e9d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403ea1:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403ea8:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  403eaf:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403eb3:	48 8b 05 1e 21 20 00 	mov    0x20211e(%rip),%rax        # 605fd8 <stdout@GLIBC_2.2.5>
  403eba:	48 8b 00             	mov    (%rax),%rax
  403ebd:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  403ec4:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  403ecb:	48 89 c6             	mov    %rax,%rsi
  403ece:	48 8d 3d 79 fb ff ff 	lea    -0x487(%rip),%rdi        # 403a4e <outc>
  403ed5:	e8 4e 04 00 00       	callq  404328 <Fmt_vfmt>
  403eda:	c9                   	leaveq 
  403edb:	c3                   	retq   

0000000000403edc <Fmt_fprint>:
  403edc:	55                   	push   %rbp
  403edd:	48 89 e5             	mov    %rsp,%rbp
  403ee0:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  403ee7:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  403eee:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  403ef5:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  403efc:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  403f03:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  403f0a:	0f b6 c0             	movzbl %al,%eax
  403f0d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  403f14:	00 
  403f15:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403f45 <Fmt_fprint+0x69>
  403f1c:	48 29 d0             	sub    %rdx,%rax
  403f1f:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  403f23:	ff e0                	jmpq   *%rax
  403f25:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403f29:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403f2d:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  403f31:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403f35:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403f39:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403f3d:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  403f41:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403f45:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  403f4c:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403f53:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
  403f59:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403f60:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403f67:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403f6e:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403f72:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403f76:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403f7d:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  403f84:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403f88:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  403f8f:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  403f96:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  403f9d:	48 89 c6             	mov    %rax,%rsi
  403fa0:	48 8d 3d a7 fa ff ff 	lea    -0x559(%rip),%rdi        # 403a4e <outc>
  403fa7:	e8 7c 03 00 00       	callq  404328 <Fmt_vfmt>
  403fac:	c9                   	leaveq 
  403fad:	c3                   	retq   

0000000000403fae <Fmt_sfmt>:
  403fae:	55                   	push   %rbp
  403faf:	48 89 e5             	mov    %rsp,%rbp
  403fb2:	53                   	push   %rbx
  403fb3:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  403fba:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  403fc1:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)
  403fc7:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  403fce:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  403fd5:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  403fdc:	0f b6 c0             	movzbl %al,%eax
  403fdf:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  403fe6:	00 
  403fe7:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 404017 <Fmt_sfmt+0x69>
  403fee:	48 29 c8             	sub    %rcx,%rax
  403ff1:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  403ff5:	ff e0                	jmpq   *%rax
  403ff7:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  403ffb:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  403fff:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  404003:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  404007:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  40400b:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  40400f:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  404013:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  404017:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  40401e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  404025:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  40402b:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  404032:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  404039:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  404040:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  404044:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404048:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40404f:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  404056:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40405a:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  404061:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  404068:	8b 9d 14 ff ff ff    	mov    -0xec(%rbp),%ebx
  40406e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  404075:	89 de                	mov    %ebx,%esi
  404077:	48 89 c7             	mov    %rax,%rdi
  40407a:	e8 16 00 00 00       	callq  404095 <Fmt_vsfmt>
  40407f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  404085:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  40408b:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  404092:	5b                   	pop    %rbx
  404093:	c9                   	leaveq 
  404094:	c3                   	retq   

0000000000404095 <Fmt_vsfmt>:
  404095:	55                   	push   %rbp
  404096:	48 89 e5             	mov    %rsp,%rbp
  404099:	48 83 ec 40          	sub    $0x40,%rsp
  40409d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4040a1:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4040a4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4040a8:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  4040ac:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4040b1:	75 1b                	jne    4040ce <Fmt_vsfmt+0x39>
  4040b3:	ba e8 00 00 00       	mov    $0xe8,%edx
  4040b8:	48 8d 35 89 11 00 00 	lea    0x1189(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  4040bf:	48 8d 05 e2 1c 20 00 	lea    0x201ce2(%rip),%rax        # 605da8 <Assert_Failed>
  4040c6:	48 89 c7             	mov    %rax,%rdi
  4040c9:	e8 42 db ff ff       	callq  401c10 <Except_raise>
  4040ce:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  4040d2:	7f 1b                	jg     4040ef <Fmt_vsfmt+0x5a>
  4040d4:	ba e9 00 00 00       	mov    $0xe9,%edx
  4040d9:	48 8d 35 68 11 00 00 	lea    0x1168(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  4040e0:	48 8d 05 c1 1c 20 00 	lea    0x201cc1(%rip),%rax        # 605da8 <Assert_Failed>
  4040e7:	48 89 c7             	mov    %rax,%rdi
  4040ea:	e8 21 db ff ff       	callq  401c10 <Except_raise>
  4040ef:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  4040f4:	75 1b                	jne    404111 <Fmt_vsfmt+0x7c>
  4040f6:	ba ea 00 00 00       	mov    $0xea,%edx
  4040fb:	48 8d 35 46 11 00 00 	lea    0x1146(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  404102:	48 8d 05 9f 1c 20 00 	lea    0x201c9f(%rip),%rax        # 605da8 <Assert_Failed>
  404109:	48 89 c7             	mov    %rax,%rdi
  40410c:	e8 ff da ff ff       	callq  401c10 <Except_raise>
  404111:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404115:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  404119:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40411d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  404121:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  404124:	89 45 f0             	mov    %eax,-0x10(%rbp)
  404127:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40412b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40412f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  404133:	48 89 c6             	mov    %rax,%rsi
  404136:	48 8d 3d 3b f9 ff ff 	lea    -0x6c5(%rip),%rdi        # 403a78 <insert>
  40413d:	e8 e6 01 00 00       	callq  404328 <Fmt_vfmt>
  404142:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  404146:	48 89 c6             	mov    %rax,%rsi
  404149:	bf 00 00 00 00       	mov    $0x0,%edi
  40414e:	e8 25 f9 ff ff       	callq  403a78 <insert>
  404153:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404157:	89 c2                	mov    %eax,%edx
  404159:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40415d:	89 d1                	mov    %edx,%ecx
  40415f:	29 c1                	sub    %eax,%ecx
  404161:	89 c8                	mov    %ecx,%eax
  404163:	83 e8 01             	sub    $0x1,%eax
  404166:	c9                   	leaveq 
  404167:	c3                   	retq   

0000000000404168 <Fmt_string>:
  404168:	55                   	push   %rbp
  404169:	48 89 e5             	mov    %rsp,%rbp
  40416c:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  404173:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  40417a:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  404181:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  404188:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  40418f:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  404196:	0f b6 c0             	movzbl %al,%eax
  404199:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4041a0:	00 
  4041a1:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 4041d1 <Fmt_string+0x69>
  4041a8:	48 29 d0             	sub    %rdx,%rax
  4041ab:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  4041af:	ff e0                	jmpq   *%rax
  4041b1:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  4041b5:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  4041b9:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  4041bd:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  4041c1:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  4041c5:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  4041c9:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  4041cd:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  4041d1:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  4041d8:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  4041df:	00 
  4041e0:	75 1b                	jne    4041fd <Fmt_string+0x95>
  4041e2:	ba f4 00 00 00       	mov    $0xf4,%edx
  4041e7:	48 8d 35 5a 10 00 00 	lea    0x105a(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  4041ee:	48 8d 05 b3 1b 20 00 	lea    0x201bb3(%rip),%rax        # 605da8 <Assert_Failed>
  4041f5:	48 89 c7             	mov    %rax,%rdi
  4041f8:	e8 13 da ff ff       	callq  401c10 <Except_raise>
  4041fd:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404204:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  40420a:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404211:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  404218:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40421f:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  404223:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404227:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40422e:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  404235:	48 89 50 10          	mov    %rdx,0x10(%rax)
  404239:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  404240:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  404247:	48 89 d6             	mov    %rdx,%rsi
  40424a:	48 89 c7             	mov    %rax,%rdi
  40424d:	e8 10 00 00 00       	callq  404262 <Fmt_vstring>
  404252:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  404259:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  404260:	c9                   	leaveq 
  404261:	c3                   	retq   

0000000000404262 <Fmt_vstring>:
  404262:	55                   	push   %rbp
  404263:	48 89 e5             	mov    %rsp,%rbp
  404266:	53                   	push   %rbx
  404267:	48 83 ec 38          	sub    $0x38,%rsp
  40426b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40426f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  404273:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  404278:	75 1b                	jne    404295 <Fmt_vstring+0x33>
  40427a:	ba fc 00 00 00       	mov    $0xfc,%edx
  40427f:	48 8d 35 c2 0f 00 00 	lea    0xfc2(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  404286:	48 8d 05 1b 1b 20 00 	lea    0x201b1b(%rip),%rax        # 605da8 <Assert_Failed>
  40428d:	48 89 c7             	mov    %rax,%rdi
  404290:	e8 7b d9 ff ff       	callq  401c10 <Except_raise>
  404295:	c7 45 e0 00 01 00 00 	movl   $0x100,-0x20(%rbp)
  40429c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40429f:	48 98                	cltq   
  4042a1:	ba fe 00 00 00       	mov    $0xfe,%edx
  4042a6:	48 8d 35 9b 0f 00 00 	lea    0xf9b(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  4042ad:	48 89 c7             	mov    %rax,%rdi
  4042b0:	e8 13 09 00 00       	callq  404bc8 <Mem_alloc>
  4042b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4042b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4042bd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4042c1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  4042c5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4042c9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  4042cd:	48 89 c6             	mov    %rax,%rsi
  4042d0:	48 8d 3d 12 f8 ff ff 	lea    -0x7ee(%rip),%rdi        # 403ae9 <append>
  4042d7:	e8 4c 00 00 00       	callq  404328 <Fmt_vfmt>
  4042dc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  4042e0:	48 89 c6             	mov    %rax,%rsi
  4042e3:	bf 00 00 00 00       	mov    $0x0,%edi
  4042e8:	e8 fc f7 ff ff       	callq  403ae9 <append>
  4042ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4042f1:	48 89 c2             	mov    %rax,%rdx
  4042f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4042f8:	48 89 d3             	mov    %rdx,%rbx
  4042fb:	48 29 c3             	sub    %rax,%rbx
  4042fe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404302:	b9 01 01 00 00       	mov    $0x101,%ecx
  404307:	48 8d 15 3a 0f 00 00 	lea    0xf3a(%rip),%rdx        # 405248 <_IO_stdin_used+0x3c0>
  40430e:	48 89 de             	mov    %rbx,%rsi
  404311:	48 89 c7             	mov    %rax,%rdi
  404314:	e8 22 0a 00 00       	callq  404d3b <Mem_resize>
  404319:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40431d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404321:	48 83 c4 38          	add    $0x38,%rsp
  404325:	5b                   	pop    %rbx
  404326:	c9                   	leaveq 
  404327:	c3                   	retq   

0000000000404328 <Fmt_vfmt>:
  404328:	55                   	push   %rbp
  404329:	48 89 e5             	mov    %rsp,%rbp
  40432c:	53                   	push   %rbx
  40432d:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
  404334:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  40433b:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  404342:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
  404349:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  404350:	48 83 bd c8 fe ff ff 	cmpq   $0x0,-0x138(%rbp)
  404357:	00 
  404358:	75 1b                	jne    404375 <Fmt_vfmt+0x4d>
  40435a:	ba 05 01 00 00       	mov    $0x105,%edx
  40435f:	48 8d 35 e2 0e 00 00 	lea    0xee2(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  404366:	48 8d 05 3b 1a 20 00 	lea    0x201a3b(%rip),%rax        # 605da8 <Assert_Failed>
  40436d:	48 89 c7             	mov    %rax,%rdi
  404370:	e8 9b d8 ff ff       	callq  401c10 <Except_raise>
  404375:	48 83 bd b8 fe ff ff 	cmpq   $0x0,-0x148(%rbp)
  40437c:	00 
  40437d:	0f 85 bf 04 00 00    	jne    404842 <Fmt_vfmt+0x51a>
  404383:	ba 06 01 00 00       	mov    $0x106,%edx
  404388:	48 8d 35 b9 0e 00 00 	lea    0xeb9(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  40438f:	48 8d 05 12 1a 20 00 	lea    0x201a12(%rip),%rax        # 605da8 <Assert_Failed>
  404396:	48 89 c7             	mov    %rax,%rdi
  404399:	e8 72 d8 ff ff       	callq  401c10 <Except_raise>
  40439e:	e9 a0 04 00 00       	jmpq   404843 <Fmt_vfmt+0x51b>
  4043a3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4043aa:	0f b6 00             	movzbl (%rax),%eax
  4043ad:	3c 25                	cmp    $0x25,%al
  4043af:	75 16                	jne    4043c7 <Fmt_vfmt+0x9f>
  4043b1:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4043b8:	01 
  4043b9:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4043c0:	0f b6 00             	movzbl (%rax),%eax
  4043c3:	3c 25                	cmp    $0x25,%al
  4043c5:	75 2f                	jne    4043f6 <Fmt_vfmt+0xce>
  4043c7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4043ce:	0f b6 00             	movzbl (%rax),%eax
  4043d1:	0f b6 c0             	movzbl %al,%eax
  4043d4:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4043db:	01 
  4043dc:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  4043e3:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  4043ea:	48 89 d6             	mov    %rdx,%rsi
  4043ed:	89 c7                	mov    %eax,%edi
  4043ef:	ff d1                	callq  *%rcx
  4043f1:	e9 4d 04 00 00       	jmpq   404843 <Fmt_vfmt+0x51b>
  4043f6:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  4043fd:	c7 45 e8 00 00 00 80 	movl   $0x80000000,-0x18(%rbp)
  404404:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
  40440b:	ba 00 01 00 00       	mov    $0x100,%edx
  404410:	be 00 00 00 00       	mov    $0x0,%esi
  404415:	48 89 c7             	mov    %rax,%rdi
  404418:	e8 23 c8 ff ff       	callq  400c40 <memset@plt>
  40441d:	48 8d 05 fc 24 20 00 	lea    0x2024fc(%rip),%rax        # 606920 <Fmt_flags>
  404424:	48 8b 00             	mov    (%rax),%rax
  404427:	48 85 c0             	test   %rax,%rax
  40442a:	0f 84 8f 00 00 00    	je     4044bf <Fmt_vfmt+0x197>
  404430:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404437:	0f b6 00             	movzbl (%rax),%eax
  40443a:	88 45 e7             	mov    %al,-0x19(%rbp)
  40443d:	eb 5d                	jmp    40449c <Fmt_vfmt+0x174>
  40443f:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  404443:	48 98                	cltq   
  404445:	0f b6 84 05 d0 fe ff 	movzbl -0x130(%rbp,%rax,1),%eax
  40444c:	ff 
  40444d:	3c ff                	cmp    $0xff,%al
  40444f:	75 1b                	jne    40446c <Fmt_vfmt+0x144>
  404451:	ba 12 01 00 00       	mov    $0x112,%edx
  404456:	48 8d 35 eb 0d 00 00 	lea    0xdeb(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  40445d:	48 8d 05 44 19 20 00 	lea    0x201944(%rip),%rax        # 605da8 <Assert_Failed>
  404464:	48 89 c7             	mov    %rax,%rdi
  404467:	e8 a4 d7 ff ff       	callq  401c10 <Except_raise>
  40446c:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  404470:	48 63 d0             	movslq %eax,%rdx
  404473:	0f b6 94 15 d0 fe ff 	movzbl -0x130(%rbp,%rdx,1),%edx
  40447a:	ff 
  40447b:	83 c2 01             	add    $0x1,%edx
  40447e:	48 98                	cltq   
  404480:	88 94 05 d0 fe ff ff 	mov    %dl,-0x130(%rbp,%rax,1)
  404487:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40448e:	01 
  40448f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404496:	0f b6 00             	movzbl (%rax),%eax
  404499:	88 45 e7             	mov    %al,-0x19(%rbp)
  40449c:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
  4044a0:	74 1d                	je     4044bf <Fmt_vfmt+0x197>
  4044a2:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  4044a6:	48 8d 05 73 24 20 00 	lea    0x202473(%rip),%rax        # 606920 <Fmt_flags>
  4044ad:	48 8b 00             	mov    (%rax),%rax
  4044b0:	89 d6                	mov    %edx,%esi
  4044b2:	48 89 c7             	mov    %rax,%rdi
  4044b5:	e8 46 c7 ff ff       	callq  400c00 <strchr@plt>
  4044ba:	48 85 c0             	test   %rax,%rax
  4044bd:	75 80                	jne    40443f <Fmt_vfmt+0x117>
  4044bf:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4044c6:	0f b6 00             	movzbl (%rax),%eax
  4044c9:	3c 2a                	cmp    $0x2a,%al
  4044cb:	74 30                	je     4044fd <Fmt_vfmt+0x1d5>
  4044cd:	e8 5e c8 ff ff       	callq  400d30 <__ctype_b_loc@plt>
  4044d2:	48 8b 10             	mov    (%rax),%rdx
  4044d5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4044dc:	0f b6 00             	movzbl (%rax),%eax
  4044df:	48 0f be c0          	movsbq %al,%rax
  4044e3:	48 01 c0             	add    %rax,%rax
  4044e6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  4044ea:	0f b7 00             	movzwl (%rax),%eax
  4044ed:	0f b7 c0             	movzwl %ax,%eax
  4044f0:	25 00 08 00 00       	and    $0x800,%eax
  4044f5:	85 c0                	test   %eax,%eax
  4044f7:	0f 84 26 01 00 00    	je     404623 <Fmt_vfmt+0x2fb>
  4044fd:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404504:	0f b6 00             	movzbl (%rax),%eax
  404507:	3c 2a                	cmp    $0x2a,%al
  404509:	75 6b                	jne    404576 <Fmt_vfmt+0x24e>
  40450b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  404512:	8b 10                	mov    (%rax),%edx
  404514:	83 fa 30             	cmp    $0x30,%edx
  404517:	73 15                	jae    40452e <Fmt_vfmt+0x206>
  404519:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40451d:	8b 10                	mov    (%rax),%edx
  40451f:	89 d2                	mov    %edx,%edx
  404521:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  404525:	8b 08                	mov    (%rax),%ecx
  404527:	83 c1 08             	add    $0x8,%ecx
  40452a:	89 08                	mov    %ecx,(%rax)
  40452c:	eb 0f                	jmp    40453d <Fmt_vfmt+0x215>
  40452e:	48 8b 48 08          	mov    0x8(%rax),%rcx
  404532:	48 89 ca             	mov    %rcx,%rdx
  404535:	48 83 c1 08          	add    $0x8,%rcx
  404539:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40453d:	48 89 d0             	mov    %rdx,%rax
  404540:	8b 00                	mov    (%rax),%eax
  404542:	89 45 e0             	mov    %eax,-0x20(%rbp)
  404545:	81 7d e0 00 00 00 80 	cmpl   $0x80000000,-0x20(%rbp)
  40454c:	75 1b                	jne    404569 <Fmt_vfmt+0x241>
  40454e:	ba 1a 01 00 00       	mov    $0x11a,%edx
  404553:	48 8d 35 ee 0c 00 00 	lea    0xcee(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  40455a:	48 8d 05 47 18 20 00 	lea    0x201847(%rip),%rax        # 605da8 <Assert_Failed>
  404561:	48 89 c7             	mov    %rax,%rdi
  404564:	e8 a7 d6 ff ff       	callq  401c10 <Except_raise>
  404569:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  404570:	01 
  404571:	e9 a7 00 00 00       	jmpq   40461d <Fmt_vfmt+0x2f5>
  404576:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  40457d:	eb 6e                	jmp    4045ed <Fmt_vfmt+0x2c5>
  40457f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404586:	0f b6 00             	movzbl (%rax),%eax
  404589:	0f be c0             	movsbl %al,%eax
  40458c:	83 e8 30             	sub    $0x30,%eax
  40458f:	89 45 d8             	mov    %eax,-0x28(%rbp)
  404592:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  404597:	89 c1                	mov    %eax,%ecx
  404599:	2b 4d d8             	sub    -0x28(%rbp),%ecx
  40459c:	ba 67 66 66 66       	mov    $0x66666667,%edx
  4045a1:	89 c8                	mov    %ecx,%eax
  4045a3:	f7 ea                	imul   %edx
  4045a5:	c1 fa 02             	sar    $0x2,%edx
  4045a8:	89 c8                	mov    %ecx,%eax
  4045aa:	c1 f8 1f             	sar    $0x1f,%eax
  4045ad:	89 d1                	mov    %edx,%ecx
  4045af:	29 c1                	sub    %eax,%ecx
  4045b1:	89 c8                	mov    %ecx,%eax
  4045b3:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  4045b6:	7d 1b                	jge    4045d3 <Fmt_vfmt+0x2ab>
  4045b8:	ba 1f 01 00 00       	mov    $0x11f,%edx
  4045bd:	48 8d 35 84 0c 00 00 	lea    0xc84(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  4045c4:	48 8d 05 dd 17 20 00 	lea    0x2017dd(%rip),%rax        # 605da8 <Assert_Failed>
  4045cb:	48 89 c7             	mov    %rax,%rdi
  4045ce:	e8 3d d6 ff ff       	callq  401c10 <Except_raise>
  4045d3:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4045d6:	89 d0                	mov    %edx,%eax
  4045d8:	c1 e0 02             	shl    $0x2,%eax
  4045db:	01 d0                	add    %edx,%eax
  4045dd:	01 c0                	add    %eax,%eax
  4045df:	03 45 d8             	add    -0x28(%rbp),%eax
  4045e2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4045e5:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4045ec:	01 
  4045ed:	e8 3e c7 ff ff       	callq  400d30 <__ctype_b_loc@plt>
  4045f2:	48 8b 10             	mov    (%rax),%rdx
  4045f5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4045fc:	0f b6 00             	movzbl (%rax),%eax
  4045ff:	48 0f be c0          	movsbq %al,%rax
  404603:	48 01 c0             	add    %rax,%rax
  404606:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  40460a:	0f b7 00             	movzwl (%rax),%eax
  40460d:	0f b7 c0             	movzwl %ax,%eax
  404610:	25 00 08 00 00       	and    $0x800,%eax
  404615:	85 c0                	test   %eax,%eax
  404617:	0f 85 62 ff ff ff    	jne    40457f <Fmt_vfmt+0x257>
  40461d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  404620:	89 45 ec             	mov    %eax,-0x14(%rbp)
  404623:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40462a:	0f b6 00             	movzbl (%rax),%eax
  40462d:	3c 2e                	cmp    $0x2e,%al
  40462f:	0f 85 6c 01 00 00    	jne    4047a1 <Fmt_vfmt+0x479>
  404635:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40463c:	01 
  40463d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404644:	0f b6 00             	movzbl (%rax),%eax
  404647:	3c 2a                	cmp    $0x2a,%al
  404649:	74 30                	je     40467b <Fmt_vfmt+0x353>
  40464b:	e8 e0 c6 ff ff       	callq  400d30 <__ctype_b_loc@plt>
  404650:	48 8b 10             	mov    (%rax),%rdx
  404653:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40465a:	0f b6 00             	movzbl (%rax),%eax
  40465d:	48 0f be c0          	movsbq %al,%rax
  404661:	48 01 c0             	add    %rax,%rax
  404664:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404668:	0f b7 00             	movzwl (%rax),%eax
  40466b:	0f b7 c0             	movzwl %ax,%eax
  40466e:	25 00 08 00 00       	and    $0x800,%eax
  404673:	85 c0                	test   %eax,%eax
  404675:	0f 84 26 01 00 00    	je     4047a1 <Fmt_vfmt+0x479>
  40467b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404682:	0f b6 00             	movzbl (%rax),%eax
  404685:	3c 2a                	cmp    $0x2a,%al
  404687:	75 6b                	jne    4046f4 <Fmt_vfmt+0x3cc>
  404689:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  404690:	8b 10                	mov    (%rax),%edx
  404692:	83 fa 30             	cmp    $0x30,%edx
  404695:	73 15                	jae    4046ac <Fmt_vfmt+0x384>
  404697:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40469b:	8b 10                	mov    (%rax),%edx
  40469d:	89 d2                	mov    %edx,%edx
  40469f:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4046a3:	8b 08                	mov    (%rax),%ecx
  4046a5:	83 c1 08             	add    $0x8,%ecx
  4046a8:	89 08                	mov    %ecx,(%rax)
  4046aa:	eb 0f                	jmp    4046bb <Fmt_vfmt+0x393>
  4046ac:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4046b0:	48 89 ca             	mov    %rcx,%rdx
  4046b3:	48 83 c1 08          	add    $0x8,%rcx
  4046b7:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4046bb:	48 89 d0             	mov    %rdx,%rax
  4046be:	8b 00                	mov    (%rax),%eax
  4046c0:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4046c3:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  4046ca:	75 1b                	jne    4046e7 <Fmt_vfmt+0x3bf>
  4046cc:	ba 28 01 00 00       	mov    $0x128,%edx
  4046d1:	48 8d 35 70 0b 00 00 	lea    0xb70(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  4046d8:	48 8d 05 c9 16 20 00 	lea    0x2016c9(%rip),%rax        # 605da8 <Assert_Failed>
  4046df:	48 89 c7             	mov    %rax,%rdi
  4046e2:	e8 29 d5 ff ff       	callq  401c10 <Except_raise>
  4046e7:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4046ee:	01 
  4046ef:	e9 a7 00 00 00       	jmpq   40479b <Fmt_vfmt+0x473>
  4046f4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  4046fb:	eb 6e                	jmp    40476b <Fmt_vfmt+0x443>
  4046fd:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404704:	0f b6 00             	movzbl (%rax),%eax
  404707:	0f be c0             	movsbl %al,%eax
  40470a:	83 e8 30             	sub    $0x30,%eax
  40470d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  404710:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  404715:	89 c1                	mov    %eax,%ecx
  404717:	2b 4d d4             	sub    -0x2c(%rbp),%ecx
  40471a:	ba 67 66 66 66       	mov    $0x66666667,%edx
  40471f:	89 c8                	mov    %ecx,%eax
  404721:	f7 ea                	imul   %edx
  404723:	c1 fa 02             	sar    $0x2,%edx
  404726:	89 c8                	mov    %ecx,%eax
  404728:	c1 f8 1f             	sar    $0x1f,%eax
  40472b:	89 d1                	mov    %edx,%ecx
  40472d:	29 c1                	sub    %eax,%ecx
  40472f:	89 c8                	mov    %ecx,%eax
  404731:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  404734:	7d 1b                	jge    404751 <Fmt_vfmt+0x429>
  404736:	ba 2d 01 00 00       	mov    $0x12d,%edx
  40473b:	48 8d 35 06 0b 00 00 	lea    0xb06(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  404742:	48 8d 05 5f 16 20 00 	lea    0x20165f(%rip),%rax        # 605da8 <Assert_Failed>
  404749:	48 89 c7             	mov    %rax,%rdi
  40474c:	e8 bf d4 ff ff       	callq  401c10 <Except_raise>
  404751:	8b 55 dc             	mov    -0x24(%rbp),%edx
  404754:	89 d0                	mov    %edx,%eax
  404756:	c1 e0 02             	shl    $0x2,%eax
  404759:	01 d0                	add    %edx,%eax
  40475b:	01 c0                	add    %eax,%eax
  40475d:	03 45 d4             	add    -0x2c(%rbp),%eax
  404760:	89 45 dc             	mov    %eax,-0x24(%rbp)
  404763:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40476a:	01 
  40476b:	e8 c0 c5 ff ff       	callq  400d30 <__ctype_b_loc@plt>
  404770:	48 8b 10             	mov    (%rax),%rdx
  404773:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40477a:	0f b6 00             	movzbl (%rax),%eax
  40477d:	48 0f be c0          	movsbq %al,%rax
  404781:	48 01 c0             	add    %rax,%rax
  404784:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404788:	0f b7 00             	movzwl (%rax),%eax
  40478b:	0f b7 c0             	movzwl %ax,%eax
  40478e:	25 00 08 00 00       	and    $0x800,%eax
  404793:	85 c0                	test   %eax,%eax
  404795:	0f 85 62 ff ff ff    	jne    4046fd <Fmt_vfmt+0x3d5>
  40479b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40479e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4047a1:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4047a8:	0f b6 00             	movzbl (%rax),%eax
  4047ab:	88 45 d3             	mov    %al,-0x2d(%rbp)
  4047ae:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4047b5:	01 
  4047b6:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  4047ba:	48 98                	cltq   
  4047bc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4047c3:	00 
  4047c4:	48 8d 05 55 19 20 00 	lea    0x201955(%rip),%rax        # 606120 <cvt>
  4047cb:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  4047cf:	48 85 c0             	test   %rax,%rax
  4047d2:	75 1b                	jne    4047ef <Fmt_vfmt+0x4c7>
  4047d4:	ba 33 01 00 00       	mov    $0x133,%edx
  4047d9:	48 8d 35 68 0a 00 00 	lea    0xa68(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  4047e0:	48 8d 05 c1 15 20 00 	lea    0x2015c1(%rip),%rax        # 605da8 <Assert_Failed>
  4047e7:	48 89 c7             	mov    %rax,%rdi
  4047ea:	e8 21 d4 ff ff       	callq  401c10 <Except_raise>
  4047ef:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  4047f3:	48 98                	cltq   
  4047f5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4047fc:	00 
  4047fd:	48 8d 05 1c 19 20 00 	lea    0x20191c(%rip),%rax        # 606120 <cvt>
  404804:	4c 8b 14 02          	mov    (%rdx,%rax,1),%r10
  404808:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  40480c:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
  404810:	48 8d bd d0 fe ff ff 	lea    -0x130(%rbp),%rdi
  404817:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40481e:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  404825:	48 8b 9d b0 fe ff ff 	mov    -0x150(%rbp),%rbx
  40482c:	8b 75 e8             	mov    -0x18(%rbp),%esi
  40482f:	89 34 24             	mov    %esi,(%rsp)
  404832:	45 89 c1             	mov    %r8d,%r9d
  404835:	49 89 f8             	mov    %rdi,%r8
  404838:	48 89 de             	mov    %rbx,%rsi
  40483b:	89 c7                	mov    %eax,%edi
  40483d:	41 ff d2             	callq  *%r10
  404840:	eb 01                	jmp    404843 <Fmt_vfmt+0x51b>
  404842:	90                   	nop
  404843:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40484a:	0f b6 00             	movzbl (%rax),%eax
  40484d:	84 c0                	test   %al,%al
  40484f:	0f 85 4e fb ff ff    	jne    4043a3 <Fmt_vfmt+0x7b>
  404855:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
  40485c:	5b                   	pop    %rbx
  40485d:	c9                   	leaveq 
  40485e:	c3                   	retq   

000000000040485f <Fmt_register>:
  40485f:	55                   	push   %rbp
  404860:	48 89 e5             	mov    %rsp,%rbp
  404863:	48 83 ec 20          	sub    $0x20,%rsp
  404867:	89 7d ec             	mov    %edi,-0x14(%rbp)
  40486a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40486e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  404872:	7e 09                	jle    40487d <Fmt_register+0x1e>
  404874:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
  40487b:	7e 1d                	jle    40489a <Fmt_register+0x3b>
  40487d:	ba 3a 01 00 00       	mov    $0x13a,%edx
  404882:	48 8d 35 bf 09 00 00 	lea    0x9bf(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  404889:	48 8d 05 18 15 20 00 	lea    0x201518(%rip),%rax        # 605da8 <Assert_Failed>
  404890:	48 89 c7             	mov    %rax,%rdi
  404893:	e8 78 d3 ff ff       	callq  401c10 <Except_raise>
  404898:	eb 01                	jmp    40489b <Fmt_register+0x3c>
  40489a:	90                   	nop
  40489b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40489e:	48 98                	cltq   
  4048a0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4048a7:	00 
  4048a8:	48 8d 05 71 18 20 00 	lea    0x201871(%rip),%rax        # 606120 <cvt>
  4048af:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  4048b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4048b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4048ba:	48 98                	cltq   
  4048bc:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  4048c3:	00 
  4048c4:	48 8d 05 55 18 20 00 	lea    0x201855(%rip),%rax        # 606120 <cvt>
  4048cb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4048cf:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
  4048d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4048d7:	c9                   	leaveq 
  4048d8:	c3                   	retq   

00000000004048d9 <Fmt_putd>:
  4048d9:	55                   	push   %rbp
  4048da:	48 89 e5             	mov    %rsp,%rbp
  4048dd:	48 83 ec 50          	sub    $0x50,%rsp
  4048e1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4048e5:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4048e8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4048ec:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  4048f0:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  4048f4:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  4048f8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4048fd:	75 1b                	jne    40491a <Fmt_putd+0x41>
  4048ff:	ba 43 01 00 00       	mov    $0x143,%edx
  404904:	48 8d 35 3d 09 00 00 	lea    0x93d(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  40490b:	48 8d 05 96 14 20 00 	lea    0x201496(%rip),%rax        # 605da8 <Assert_Failed>
  404912:	48 89 c7             	mov    %rax,%rdi
  404915:	e8 f6 d2 ff ff       	callq  401c10 <Except_raise>
  40491a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  40491e:	79 1b                	jns    40493b <Fmt_putd+0x62>
  404920:	ba 44 01 00 00       	mov    $0x144,%edx
  404925:	48 8d 35 1c 09 00 00 	lea    0x91c(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  40492c:	48 8d 05 75 14 20 00 	lea    0x201475(%rip),%rax        # 605da8 <Assert_Failed>
  404933:	48 89 c7             	mov    %rax,%rdi
  404936:	e8 d5 d2 ff ff       	callq  401c10 <Except_raise>
  40493b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  404940:	75 1b                	jne    40495d <Fmt_putd+0x84>
  404942:	ba 45 01 00 00       	mov    $0x145,%edx
  404947:	48 8d 35 fa 08 00 00 	lea    0x8fa(%rip),%rsi        # 405248 <_IO_stdin_used+0x3c0>
  40494e:	48 8d 05 53 14 20 00 	lea    0x201453(%rip),%rax        # 605da8 <Assert_Failed>
  404955:	48 89 c7             	mov    %rax,%rdi
  404958:	e8 b3 d2 ff ff       	callq  401c10 <Except_raise>
  40495d:	81 7d b4 00 00 00 80 	cmpl   $0x80000000,-0x4c(%rbp)
  404964:	75 07                	jne    40496d <Fmt_putd+0x94>
  404966:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  40496d:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
  404971:	79 0e                	jns    404981 <Fmt_putd+0xa8>
  404973:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404977:	48 83 c0 2d          	add    $0x2d,%rax
  40497b:	c6 00 01             	movb   $0x1,(%rax)
  40497e:	f7 5d b4             	negl   -0x4c(%rbp)
  404981:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  404985:	78 0b                	js     404992 <Fmt_putd+0xb9>
  404987:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40498b:	48 83 c0 30          	add    $0x30,%rax
  40498f:	c6 00 00             	movb   $0x0,(%rax)
  404992:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  404996:	7e 2e                	jle    4049c6 <Fmt_putd+0xed>
  404998:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40499c:	0f b6 00             	movzbl (%rax),%eax
  40499f:	3c 2d                	cmp    $0x2d,%al
  4049a1:	74 0b                	je     4049ae <Fmt_putd+0xd5>
  4049a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4049a7:	0f b6 00             	movzbl (%rax),%eax
  4049aa:	3c 2b                	cmp    $0x2b,%al
  4049ac:	75 18                	jne    4049c6 <Fmt_putd+0xed>
  4049ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4049b2:	0f b6 00             	movzbl (%rax),%eax
  4049b5:	0f be c0             	movsbl %al,%eax
  4049b8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4049bb:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  4049c0:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
  4049c4:	eb 37                	jmp    4049fd <Fmt_putd+0x124>
  4049c6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4049ca:	48 83 c0 2b          	add    $0x2b,%rax
  4049ce:	0f b6 00             	movzbl (%rax),%eax
  4049d1:	84 c0                	test   %al,%al
  4049d3:	74 09                	je     4049de <Fmt_putd+0x105>
  4049d5:	c7 45 fc 2b 00 00 00 	movl   $0x2b,-0x4(%rbp)
  4049dc:	eb 1f                	jmp    4049fd <Fmt_putd+0x124>
  4049de:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4049e2:	48 83 c0 20          	add    $0x20,%rax
  4049e6:	0f b6 00             	movzbl (%rax),%eax
  4049e9:	84 c0                	test   %al,%al
  4049eb:	74 09                	je     4049f6 <Fmt_putd+0x11d>
  4049ed:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)
  4049f4:	eb 07                	jmp    4049fd <Fmt_putd+0x124>
  4049f6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4049fd:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  404a01:	79 07                	jns    404a0a <Fmt_putd+0x131>
  404a03:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  404a0a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  404a0d:	3b 45 10             	cmp    0x10(%rbp),%eax
  404a10:	7d 08                	jge    404a1a <Fmt_putd+0x141>
  404a12:	8b 45 10             	mov    0x10(%rbp),%eax
  404a15:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404a18:	eb 26                	jmp    404a40 <Fmt_putd+0x167>
  404a1a:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  404a1e:	75 1a                	jne    404a3a <Fmt_putd+0x161>
  404a20:	83 7d d4 01          	cmpl   $0x1,-0x2c(%rbp)
  404a24:	75 14                	jne    404a3a <Fmt_putd+0x161>
  404a26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404a2a:	0f b6 00             	movzbl (%rax),%eax
  404a2d:	3c 30                	cmp    $0x30,%al
  404a2f:	75 09                	jne    404a3a <Fmt_putd+0x161>
  404a31:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  404a38:	eb 06                	jmp    404a40 <Fmt_putd+0x167>
  404a3a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  404a3d:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404a40:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404a44:	74 04                	je     404a4a <Fmt_putd+0x171>
  404a46:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  404a4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404a4e:	48 83 c0 2d          	add    $0x2d,%rax
  404a52:	0f b6 00             	movzbl (%rax),%eax
  404a55:	84 c0                	test   %al,%al
  404a57:	74 21                	je     404a7a <Fmt_putd+0x1a1>
  404a59:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404a5d:	0f 84 bc 00 00 00    	je     404b1f <Fmt_putd+0x246>
  404a63:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404a67:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404a6a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404a6e:	48 89 d6             	mov    %rdx,%rsi
  404a71:	89 c7                	mov    %eax,%edi
  404a73:	ff d1                	callq  *%rcx
  404a75:	e9 a5 00 00 00       	jmpq   404b1f <Fmt_putd+0x246>
  404a7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404a7e:	48 83 c0 30          	add    $0x30,%rax
  404a82:	0f b6 00             	movzbl (%rax),%eax
  404a85:	84 c0                	test   %al,%al
  404a87:	74 4c                	je     404ad5 <Fmt_putd+0x1fc>
  404a89:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404a8d:	74 12                	je     404aa1 <Fmt_putd+0x1c8>
  404a8f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404a93:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404a96:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404a9a:	48 89 d6             	mov    %rdx,%rsi
  404a9d:	89 c7                	mov    %eax,%edi
  404a9f:	ff d1                	callq  *%rcx
  404aa1:	8b 45 f8             	mov    -0x8(%rbp),%eax
  404aa4:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  404aa7:	89 d1                	mov    %edx,%ecx
  404aa9:	29 c1                	sub    %eax,%ecx
  404aab:	89 c8                	mov    %ecx,%eax
  404aad:	89 45 f4             	mov    %eax,-0xc(%rbp)
  404ab0:	eb 12                	jmp    404ac4 <Fmt_putd+0x1eb>
  404ab2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404ab6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404aba:	48 89 c6             	mov    %rax,%rsi
  404abd:	bf 30 00 00 00       	mov    $0x30,%edi
  404ac2:	ff d2                	callq  *%rdx
  404ac4:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  404ac8:	0f 9f c0             	setg   %al
  404acb:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  404acf:	84 c0                	test   %al,%al
  404ad1:	75 df                	jne    404ab2 <Fmt_putd+0x1d9>
  404ad3:	eb 4a                	jmp    404b1f <Fmt_putd+0x246>
  404ad5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  404ad8:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  404adb:	89 d1                	mov    %edx,%ecx
  404add:	29 c1                	sub    %eax,%ecx
  404adf:	89 c8                	mov    %ecx,%eax
  404ae1:	89 45 f0             	mov    %eax,-0x10(%rbp)
  404ae4:	eb 12                	jmp    404af8 <Fmt_putd+0x21f>
  404ae6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404aea:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404aee:	48 89 c6             	mov    %rax,%rsi
  404af1:	bf 20 00 00 00       	mov    $0x20,%edi
  404af6:	ff d2                	callq  *%rdx
  404af8:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  404afc:	0f 9f c0             	setg   %al
  404aff:	83 6d f0 01          	subl   $0x1,-0x10(%rbp)
  404b03:	84 c0                	test   %al,%al
  404b05:	75 df                	jne    404ae6 <Fmt_putd+0x20d>
  404b07:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404b0b:	74 12                	je     404b1f <Fmt_putd+0x246>
  404b0d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404b11:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404b14:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404b18:	48 89 d6             	mov    %rdx,%rsi
  404b1b:	89 c7                	mov    %eax,%edi
  404b1d:	ff d1                	callq  *%rcx
  404b1f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  404b22:	8b 55 10             	mov    0x10(%rbp),%edx
  404b25:	89 d1                	mov    %edx,%ecx
  404b27:	29 c1                	sub    %eax,%ecx
  404b29:	89 c8                	mov    %ecx,%eax
  404b2b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  404b2e:	eb 12                	jmp    404b42 <Fmt_putd+0x269>
  404b30:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404b34:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404b38:	48 89 c6             	mov    %rax,%rsi
  404b3b:	bf 30 00 00 00       	mov    $0x30,%edi
  404b40:	ff d2                	callq  *%rdx
  404b42:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  404b46:	0f 9f c0             	setg   %al
  404b49:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
  404b4d:	84 c0                	test   %al,%al
  404b4f:	75 df                	jne    404b30 <Fmt_putd+0x257>
  404b51:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  404b58:	eb 22                	jmp    404b7c <Fmt_putd+0x2a3>
  404b5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404b5e:	0f b6 00             	movzbl (%rax),%eax
  404b61:	0f b6 c0             	movzbl %al,%eax
  404b64:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  404b69:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404b6d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404b71:	48 89 d6             	mov    %rdx,%rsi
  404b74:	89 c7                	mov    %eax,%edi
  404b76:	ff d1                	callq  *%rcx
  404b78:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  404b7c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  404b7f:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  404b82:	7c d6                	jl     404b5a <Fmt_putd+0x281>
  404b84:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404b88:	48 83 c0 2d          	add    $0x2d,%rax
  404b8c:	0f b6 00             	movzbl (%rax),%eax
  404b8f:	84 c0                	test   %al,%al
  404b91:	74 32                	je     404bc5 <Fmt_putd+0x2ec>
  404b93:	8b 45 f8             	mov    -0x8(%rbp),%eax
  404b96:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  404b99:	89 d1                	mov    %edx,%ecx
  404b9b:	29 c1                	sub    %eax,%ecx
  404b9d:	89 c8                	mov    %ecx,%eax
  404b9f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  404ba2:	eb 12                	jmp    404bb6 <Fmt_putd+0x2dd>
  404ba4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404ba8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404bac:	48 89 c6             	mov    %rax,%rsi
  404baf:	bf 20 00 00 00       	mov    $0x20,%edi
  404bb4:	ff d2                	callq  *%rdx
  404bb6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  404bba:	0f 9f c0             	setg   %al
  404bbd:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  404bc1:	84 c0                	test   %al,%al
  404bc3:	75 df                	jne    404ba4 <Fmt_putd+0x2cb>
  404bc5:	c9                   	leaveq 
  404bc6:	c3                   	retq   
  404bc7:	90                   	nop

0000000000404bc8 <Mem_alloc>:
  404bc8:	55                   	push   %rbp
  404bc9:	48 89 e5             	mov    %rsp,%rbp
  404bcc:	48 83 ec 30          	sub    $0x30,%rsp
  404bd0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404bd4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  404bd8:	89 55 dc             	mov    %edx,-0x24(%rbp)
  404bdb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404be0:	7f 1b                	jg     404bfd <Mem_alloc+0x35>
  404be2:	ba 0a 00 00 00       	mov    $0xa,%edx
  404be7:	48 8d 35 a0 06 00 00 	lea    0x6a0(%rip),%rsi        # 40528e <_IO_stdin_used+0x406>
  404bee:	48 8d 05 b3 11 20 00 	lea    0x2011b3(%rip),%rax        # 605da8 <Assert_Failed>
  404bf5:	48 89 c7             	mov    %rax,%rdi
  404bf8:	e8 13 d0 ff ff       	callq  401c10 <Except_raise>
  404bfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404c01:	48 89 c7             	mov    %rax,%rdi
  404c04:	e8 87 c0 ff ff       	callq  400c90 <malloc@plt>
  404c09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404c0d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404c12:	75 3d                	jne    404c51 <Mem_alloc+0x89>
  404c14:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  404c19:	75 1d                	jne    404c38 <Mem_alloc+0x70>
  404c1b:	ba 0f 00 00 00       	mov    $0xf,%edx
  404c20:	48 8d 35 67 06 00 00 	lea    0x667(%rip),%rsi        # 40528e <_IO_stdin_used+0x406>
  404c27:	48 8d 05 8a 11 20 00 	lea    0x20118a(%rip),%rax        # 605db8 <Mem_Failed>
  404c2e:	48 89 c7             	mov    %rax,%rdi
  404c31:	e8 da cf ff ff       	callq  401c10 <Except_raise>
  404c36:	eb 19                	jmp    404c51 <Mem_alloc+0x89>
  404c38:	8b 55 dc             	mov    -0x24(%rbp),%edx
  404c3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404c3f:	48 89 c6             	mov    %rax,%rsi
  404c42:	48 8d 05 6f 11 20 00 	lea    0x20116f(%rip),%rax        # 605db8 <Mem_Failed>
  404c49:	48 89 c7             	mov    %rax,%rdi
  404c4c:	e8 bf cf ff ff       	callq  401c10 <Except_raise>
  404c51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404c55:	c9                   	leaveq 
  404c56:	c3                   	retq   

0000000000404c57 <Mem_calloc>:
  404c57:	55                   	push   %rbp
  404c58:	48 89 e5             	mov    %rsp,%rbp
  404c5b:	48 83 ec 30          	sub    $0x30,%rsp
  404c5f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404c63:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  404c67:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  404c6b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  404c6e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404c73:	7f 1b                	jg     404c90 <Mem_calloc+0x39>
  404c75:	ba 18 00 00 00       	mov    $0x18,%edx
  404c7a:	48 8d 35 0d 06 00 00 	lea    0x60d(%rip),%rsi        # 40528e <_IO_stdin_used+0x406>
  404c81:	48 8d 05 20 11 20 00 	lea    0x201120(%rip),%rax        # 605da8 <Assert_Failed>
  404c88:	48 89 c7             	mov    %rax,%rdi
  404c8b:	e8 80 cf ff ff       	callq  401c10 <Except_raise>
  404c90:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  404c95:	7f 1b                	jg     404cb2 <Mem_calloc+0x5b>
  404c97:	ba 19 00 00 00       	mov    $0x19,%edx
  404c9c:	48 8d 35 eb 05 00 00 	lea    0x5eb(%rip),%rsi        # 40528e <_IO_stdin_used+0x406>
  404ca3:	48 8d 05 fe 10 20 00 	lea    0x2010fe(%rip),%rax        # 605da8 <Assert_Failed>
  404caa:	48 89 c7             	mov    %rax,%rdi
  404cad:	e8 5e cf ff ff       	callq  401c10 <Except_raise>
  404cb2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  404cb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404cba:	48 89 d6             	mov    %rdx,%rsi
  404cbd:	48 89 c7             	mov    %rax,%rdi
  404cc0:	e8 9b bf ff ff       	callq  400c60 <calloc@plt>
  404cc5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404cc9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404cce:	75 3d                	jne    404d0d <Mem_calloc+0xb6>
  404cd0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  404cd5:	75 1d                	jne    404cf4 <Mem_calloc+0x9d>
  404cd7:	ba 1e 00 00 00       	mov    $0x1e,%edx
  404cdc:	48 8d 35 ab 05 00 00 	lea    0x5ab(%rip),%rsi        # 40528e <_IO_stdin_used+0x406>
  404ce3:	48 8d 05 ce 10 20 00 	lea    0x2010ce(%rip),%rax        # 605db8 <Mem_Failed>
  404cea:	48 89 c7             	mov    %rax,%rdi
  404ced:	e8 1e cf ff ff       	callq  401c10 <Except_raise>
  404cf2:	eb 19                	jmp    404d0d <Mem_calloc+0xb6>
  404cf4:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  404cf7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404cfb:	48 89 c6             	mov    %rax,%rsi
  404cfe:	48 8d 05 b3 10 20 00 	lea    0x2010b3(%rip),%rax        # 605db8 <Mem_Failed>
  404d05:	48 89 c7             	mov    %rax,%rdi
  404d08:	e8 03 cf ff ff       	callq  401c10 <Except_raise>
  404d0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404d11:	c9                   	leaveq 
  404d12:	c3                   	retq   

0000000000404d13 <Mem_free>:
  404d13:	55                   	push   %rbp
  404d14:	48 89 e5             	mov    %rsp,%rbp
  404d17:	48 83 ec 20          	sub    $0x20,%rsp
  404d1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404d1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  404d23:	89 55 ec             	mov    %edx,-0x14(%rbp)
  404d26:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404d2b:	74 0c                	je     404d39 <Mem_free+0x26>
  404d2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404d31:	48 89 c7             	mov    %rax,%rdi
  404d34:	e8 77 be ff ff       	callq  400bb0 <free@plt>
  404d39:	c9                   	leaveq 
  404d3a:	c3                   	retq   

0000000000404d3b <Mem_resize>:
  404d3b:	55                   	push   %rbp
  404d3c:	48 89 e5             	mov    %rsp,%rbp
  404d3f:	48 83 ec 20          	sub    $0x20,%rsp
  404d43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404d47:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  404d4b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  404d4f:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  404d52:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404d57:	75 1b                	jne    404d74 <Mem_resize+0x39>
  404d59:	ba 2a 00 00 00       	mov    $0x2a,%edx
  404d5e:	48 8d 35 29 05 00 00 	lea    0x529(%rip),%rsi        # 40528e <_IO_stdin_used+0x406>
  404d65:	48 8d 05 3c 10 20 00 	lea    0x20103c(%rip),%rax        # 605da8 <Assert_Failed>
  404d6c:	48 89 c7             	mov    %rax,%rdi
  404d6f:	e8 9c ce ff ff       	callq  401c10 <Except_raise>
  404d74:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  404d79:	7f 1b                	jg     404d96 <Mem_resize+0x5b>
  404d7b:	ba 2b 00 00 00       	mov    $0x2b,%edx
  404d80:	48 8d 35 07 05 00 00 	lea    0x507(%rip),%rsi        # 40528e <_IO_stdin_used+0x406>
  404d87:	48 8d 05 1a 10 20 00 	lea    0x20101a(%rip),%rax        # 605da8 <Assert_Failed>
  404d8e:	48 89 c7             	mov    %rax,%rdi
  404d91:	e8 7a ce ff ff       	callq  401c10 <Except_raise>
  404d96:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  404d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404d9e:	48 89 d6             	mov    %rdx,%rsi
  404da1:	48 89 c7             	mov    %rax,%rdi
  404da4:	e8 17 bf ff ff       	callq  400cc0 <realloc@plt>
  404da9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404dad:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404db2:	75 3d                	jne    404df1 <Mem_resize+0xb6>
  404db4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404db9:	75 1d                	jne    404dd8 <Mem_resize+0x9d>
  404dbb:	ba 30 00 00 00       	mov    $0x30,%edx
  404dc0:	48 8d 35 c7 04 00 00 	lea    0x4c7(%rip),%rsi        # 40528e <_IO_stdin_used+0x406>
  404dc7:	48 8d 05 ea 0f 20 00 	lea    0x200fea(%rip),%rax        # 605db8 <Mem_Failed>
  404dce:	48 89 c7             	mov    %rax,%rdi
  404dd1:	e8 3a ce ff ff       	callq  401c10 <Except_raise>
  404dd6:	eb 19                	jmp    404df1 <Mem_resize+0xb6>
  404dd8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  404ddb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404ddf:	48 89 c6             	mov    %rax,%rsi
  404de2:	48 8d 05 cf 0f 20 00 	lea    0x200fcf(%rip),%rax        # 605db8 <Mem_Failed>
  404de9:	48 89 c7             	mov    %rax,%rdi
  404dec:	e8 1f ce ff ff       	callq  401c10 <Except_raise>
  404df1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404df5:	c9                   	leaveq 
  404df6:	c3                   	retq   
  404df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  404dfe:	00 00 

0000000000404e00 <__libc_csu_init>:
  404e00:	f3 0f 1e fa          	endbr64 
  404e04:	41 57                	push   %r15
  404e06:	49 89 d7             	mov    %rdx,%r15
  404e09:	41 56                	push   %r14
  404e0b:	49 89 f6             	mov    %rsi,%r14
  404e0e:	41 55                	push   %r13
  404e10:	41 89 fd             	mov    %edi,%r13d
  404e13:	41 54                	push   %r12
  404e15:	4c 8d 25 74 0f 20 00 	lea    0x200f74(%rip),%r12        # 605d90 <__frame_dummy_init_array_entry>
  404e1c:	55                   	push   %rbp
  404e1d:	48 8d 2d 7c 0f 20 00 	lea    0x200f7c(%rip),%rbp        # 605da0 <__init_array_end>
  404e24:	53                   	push   %rbx
  404e25:	4c 29 e5             	sub    %r12,%rbp
  404e28:	48 83 ec 08          	sub    $0x8,%rsp
  404e2c:	e8 4f bd ff ff       	callq  400b80 <_init>
  404e31:	48 c1 fd 03          	sar    $0x3,%rbp
  404e35:	74 1f                	je     404e56 <__libc_csu_init+0x56>
  404e37:	31 db                	xor    %ebx,%ebx
  404e39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  404e40:	4c 89 fa             	mov    %r15,%rdx
  404e43:	4c 89 f6             	mov    %r14,%rsi
  404e46:	44 89 ef             	mov    %r13d,%edi
  404e49:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  404e4d:	48 83 c3 01          	add    $0x1,%rbx
  404e51:	48 39 dd             	cmp    %rbx,%rbp
  404e54:	75 ea                	jne    404e40 <__libc_csu_init+0x40>
  404e56:	48 83 c4 08          	add    $0x8,%rsp
  404e5a:	5b                   	pop    %rbx
  404e5b:	5d                   	pop    %rbp
  404e5c:	41 5c                	pop    %r12
  404e5e:	41 5d                	pop    %r13
  404e60:	41 5e                	pop    %r14
  404e62:	41 5f                	pop    %r15
  404e64:	c3                   	retq   

0000000000404e65 <.annobin___libc_csu_fini.start>:
  404e65:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  404e6c:	00 00 00 00 

0000000000404e70 <__libc_csu_fini>:
  404e70:	f3 0f 1e fa          	endbr64 
  404e74:	c3                   	retq   

Disassembly of section .fini:

0000000000404e78 <_fini>:
  404e78:	f3 0f 1e fa          	endbr64 
  404e7c:	48 83 ec 08          	sub    $0x8,%rsp
  404e80:	48 83 c4 08          	add    $0x8,%rsp
  404e84:	c3                   	retq   
