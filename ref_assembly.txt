
um:     file format elf64-x86-64


Disassembly of section .init:

0000000000400b80 <_init>:
  400b80:	f3 0f 1e fa          	endbr64 
  400b84:	48 83 ec 08          	sub    $0x8,%rsp
  400b88:	48 8b 05 59 54 20 00 	mov    0x205459(%rip),%rax        # 605fe8 <__gmon_start__@Base>
  400b8f:	48 85 c0             	test   %rax,%rax
  400b92:	74 02                	je     400b96 <_init+0x16>
  400b94:	ff d0                	callq  *%rax
  400b96:	48 83 c4 08          	add    $0x8,%rsp
  400b9a:	c3                   	retq   

Disassembly of section .plt:

0000000000400ba0 <.plt>:
  400ba0:	ff 35 62 54 20 00    	pushq  0x205462(%rip)        # 606008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400ba6:	ff 25 64 54 20 00    	jmpq   *0x205464(%rip)        # 606010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400bac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bb0 <free@plt>:
  400bb0:	ff 25 62 54 20 00    	jmpq   *0x205462(%rip)        # 606018 <free@GLIBC_2.2.5>
  400bb6:	68 00 00 00 00       	pushq  $0x0
  400bbb:	e9 e0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400bc0 <putchar@plt>:
  400bc0:	ff 25 5a 54 20 00    	jmpq   *0x20545a(%rip)        # 606020 <putchar@GLIBC_2.2.5>
  400bc6:	68 01 00 00 00       	pushq  $0x1
  400bcb:	e9 d0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400bd0 <abort@plt>:
  400bd0:	ff 25 52 54 20 00    	jmpq   *0x205452(%rip)        # 606028 <abort@GLIBC_2.2.5>
  400bd6:	68 02 00 00 00       	pushq  $0x2
  400bdb:	e9 c0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400be0 <fclose@plt>:
  400be0:	ff 25 4a 54 20 00    	jmpq   *0x20544a(%rip)        # 606030 <fclose@GLIBC_2.2.5>
  400be6:	68 03 00 00 00       	pushq  $0x3
  400beb:	e9 b0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400bf0 <strlen@plt>:
  400bf0:	ff 25 42 54 20 00    	jmpq   *0x205442(%rip)        # 606038 <strlen@GLIBC_2.2.5>
  400bf6:	68 04 00 00 00       	pushq  $0x4
  400bfb:	e9 a0 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c00 <strchr@plt>:
  400c00:	ff 25 3a 54 20 00    	jmpq   *0x20543a(%rip)        # 606040 <strchr@GLIBC_2.2.5>
  400c06:	68 05 00 00 00       	pushq  $0x5
  400c0b:	e9 90 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c10 <printf@plt>:
  400c10:	ff 25 32 54 20 00    	jmpq   *0x205432(%rip)        # 606048 <printf@GLIBC_2.2.5>
  400c16:	68 06 00 00 00       	pushq  $0x6
  400c1b:	e9 80 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c20 <rewind@plt>:
  400c20:	ff 25 2a 54 20 00    	jmpq   *0x20542a(%rip)        # 606050 <rewind@GLIBC_2.2.5>
  400c26:	68 07 00 00 00       	pushq  $0x7
  400c2b:	e9 70 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c30 <_IO_putc@plt>:
  400c30:	ff 25 22 54 20 00    	jmpq   *0x205422(%rip)        # 606058 <_IO_putc@GLIBC_2.2.5>
  400c36:	68 08 00 00 00       	pushq  $0x8
  400c3b:	e9 60 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c40 <memset@plt>:
  400c40:	ff 25 1a 54 20 00    	jmpq   *0x20541a(%rip)        # 606060 <memset@GLIBC_2.2.5>
  400c46:	68 09 00 00 00       	pushq  $0x9
  400c4b:	e9 50 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c50 <_setjmp@plt>:
  400c50:	ff 25 12 54 20 00    	jmpq   *0x205412(%rip)        # 606068 <_setjmp@GLIBC_2.2.5>
  400c56:	68 0a 00 00 00       	pushq  $0xa
  400c5b:	e9 40 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c60 <calloc@plt>:
  400c60:	ff 25 0a 54 20 00    	jmpq   *0x20540a(%rip)        # 606070 <calloc@GLIBC_2.2.5>
  400c66:	68 0b 00 00 00       	pushq  $0xb
  400c6b:	e9 30 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c70 <fprintf@plt>:
  400c70:	ff 25 02 54 20 00    	jmpq   *0x205402(%rip)        # 606078 <fprintf@GLIBC_2.2.5>
  400c76:	68 0c 00 00 00       	pushq  $0xc
  400c7b:	e9 20 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c80 <ftell@plt>:
  400c80:	ff 25 fa 53 20 00    	jmpq   *0x2053fa(%rip)        # 606080 <ftell@GLIBC_2.2.5>
  400c86:	68 0d 00 00 00       	pushq  $0xd
  400c8b:	e9 10 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400c90 <malloc@plt>:
  400c90:	ff 25 f2 53 20 00    	jmpq   *0x2053f2(%rip)        # 606088 <malloc@GLIBC_2.2.5>
  400c96:	68 0e 00 00 00       	pushq  $0xe
  400c9b:	e9 00 ff ff ff       	jmpq   400ba0 <.plt>

0000000000400ca0 <fflush@plt>:
  400ca0:	ff 25 ea 53 20 00    	jmpq   *0x2053ea(%rip)        # 606090 <fflush@GLIBC_2.2.5>
  400ca6:	68 0f 00 00 00       	pushq  $0xf
  400cab:	e9 f0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400cb0 <fseek@plt>:
  400cb0:	ff 25 e2 53 20 00    	jmpq   *0x2053e2(%rip)        # 606098 <fseek@GLIBC_2.2.5>
  400cb6:	68 10 00 00 00       	pushq  $0x10
  400cbb:	e9 e0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400cc0 <realloc@plt>:
  400cc0:	ff 25 da 53 20 00    	jmpq   *0x2053da(%rip)        # 6060a0 <realloc@GLIBC_2.2.5>
  400cc6:	68 11 00 00 00       	pushq  $0x11
  400ccb:	e9 d0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400cd0 <longjmp@plt>:
  400cd0:	ff 25 d2 53 20 00    	jmpq   *0x2053d2(%rip)        # 6060a8 <longjmp@GLIBC_2.2.5>
  400cd6:	68 12 00 00 00       	pushq  $0x12
  400cdb:	e9 c0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400ce0 <fopen@plt>:
  400ce0:	ff 25 ca 53 20 00    	jmpq   *0x2053ca(%rip)        # 6060b0 <fopen@GLIBC_2.2.5>
  400ce6:	68 13 00 00 00       	pushq  $0x13
  400ceb:	e9 b0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400cf0 <sprintf@plt>:
  400cf0:	ff 25 c2 53 20 00    	jmpq   *0x2053c2(%rip)        # 6060b8 <sprintf@GLIBC_2.2.5>
  400cf6:	68 14 00 00 00       	pushq  $0x14
  400cfb:	e9 a0 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400d00 <exit@plt>:
  400d00:	ff 25 ba 53 20 00    	jmpq   *0x2053ba(%rip)        # 6060c0 <exit@GLIBC_2.2.5>
  400d06:	68 15 00 00 00       	pushq  $0x15
  400d0b:	e9 90 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400d10 <fwrite@plt>:
  400d10:	ff 25 b2 53 20 00    	jmpq   *0x2053b2(%rip)        # 6060c8 <fwrite@GLIBC_2.2.5>
  400d16:	68 16 00 00 00       	pushq  $0x16
  400d1b:	e9 80 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400d20 <getc@plt>:
  400d20:	ff 25 aa 53 20 00    	jmpq   *0x2053aa(%rip)        # 6060d0 <getc@GLIBC_2.2.5>
  400d26:	68 17 00 00 00       	pushq  $0x17
  400d2b:	e9 70 fe ff ff       	jmpq   400ba0 <.plt>

0000000000400d30 <__ctype_b_loc@plt>:
  400d30:	ff 25 a2 53 20 00    	jmpq   *0x2053a2(%rip)        # 6060d8 <__ctype_b_loc@GLIBC_2.3>
  400d36:	68 18 00 00 00       	pushq  $0x18
  400d3b:	e9 60 fe ff ff       	jmpq   400ba0 <.plt>

Disassembly of section .text:

0000000000400d40 <main>:
  400d40:	48 83 ec 08          	sub    $0x8,%rsp
  400d44:	83 ff 02             	cmp    $0x2,%edi
  400d47:	74 25                	je     400d6e <main+0x2e>
  400d49:	ba 1c 00 00 00       	mov    $0x1c,%edx
  400d4e:	be 01 00 00 00       	mov    $0x1,%esi
  400d53:	bf 66 49 40 00       	mov    $0x404966,%edi
  400d58:	48 8b 0d 01 5c 20 00 	mov    0x205c01(%rip),%rcx        # 606960 <stderr@@GLIBC_2.2.5>
  400d5f:	e8 ac ff ff ff       	callq  400d10 <fwrite@plt>
  400d64:	b8 01 00 00 00       	mov    $0x1,%eax
  400d69:	48 83 c4 08          	add    $0x8,%rsp
  400d6d:	c3                   	retq   
  400d6e:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400d72:	be 83 49 40 00       	mov    $0x404983,%esi
  400d77:	e8 64 ff ff ff       	callq  400ce0 <fopen@plt>
  400d7c:	48 85 c0             	test   %rax,%rax
  400d7f:	75 1d                	jne    400d9e <main+0x5e>
  400d81:	ba 1a 00 00 00       	mov    $0x1a,%edx
  400d86:	be 01 00 00 00       	mov    $0x1,%esi
  400d8b:	bf 85 49 40 00       	mov    $0x404985,%edi
  400d90:	48 8b 0d c9 5b 20 00 	mov    0x205bc9(%rip),%rcx        # 606960 <stderr@@GLIBC_2.2.5>
  400d97:	e8 74 ff ff ff       	callq  400d10 <fwrite@plt>
  400d9c:	eb c6                	jmp    400d64 <main+0x24>
  400d9e:	48 89 c7             	mov    %rax,%rdi
  400da1:	e8 7a 08 00 00       	callq  401620 <start_um>

0000000000400da6 <.annobin_elf_init.c.hot>:
  400da6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400dad:	00 00 00 

0000000000400db0 <_start>:
  400db0:	f3 0f 1e fa          	endbr64 
  400db4:	31 ed                	xor    %ebp,%ebp
  400db6:	49 89 d1             	mov    %rdx,%r9
  400db9:	5e                   	pop    %rsi
  400dba:	48 89 e2             	mov    %rsp,%rdx
  400dbd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400dc1:	50                   	push   %rax
  400dc2:	54                   	push   %rsp
  400dc3:	49 c7 c0 40 49 40 00 	mov    $0x404940,%r8
  400dca:	48 c7 c1 d0 48 40 00 	mov    $0x4048d0,%rcx
  400dd1:	48 c7 c7 40 0d 40 00 	mov    $0x400d40,%rdi
  400dd8:	ff 15 02 52 20 00    	callq  *0x205202(%rip)        # 605fe0 <__libc_start_main@GLIBC_2.2.5>
  400dde:	f4                   	hlt    

0000000000400ddf <.annobin_init.c>:
  400ddf:	90                   	nop

0000000000400de0 <_dl_relocate_static_pie>:
  400de0:	f3 0f 1e fa          	endbr64 
  400de4:	c3                   	retq   

0000000000400de5 <.annobin__dl_relocate_static_pie.end>:
  400de5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400dec:	00 00 00 
  400def:	90                   	nop

0000000000400df0 <deregister_tm_clones>:
  400df0:	48 8d 3d 39 5b 20 00 	lea    0x205b39(%rip),%rdi        # 606930 <__TMC_END__>
  400df7:	48 8d 05 32 5b 20 00 	lea    0x205b32(%rip),%rax        # 606930 <__TMC_END__>
  400dfe:	48 39 f8             	cmp    %rdi,%rax
  400e01:	74 15                	je     400e18 <deregister_tm_clones+0x28>
  400e03:	48 8b 05 c6 51 20 00 	mov    0x2051c6(%rip),%rax        # 605fd0 <_ITM_deregisterTMCloneTable@Base>
  400e0a:	48 85 c0             	test   %rax,%rax
  400e0d:	74 09                	je     400e18 <deregister_tm_clones+0x28>
  400e0f:	ff e0                	jmpq   *%rax
  400e11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400e18:	c3                   	retq   
  400e19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400e20 <register_tm_clones>:
  400e20:	48 8d 3d 09 5b 20 00 	lea    0x205b09(%rip),%rdi        # 606930 <__TMC_END__>
  400e27:	48 8d 35 02 5b 20 00 	lea    0x205b02(%rip),%rsi        # 606930 <__TMC_END__>
  400e2e:	48 29 fe             	sub    %rdi,%rsi
  400e31:	48 89 f0             	mov    %rsi,%rax
  400e34:	48 c1 ee 3f          	shr    $0x3f,%rsi
  400e38:	48 c1 f8 03          	sar    $0x3,%rax
  400e3c:	48 01 c6             	add    %rax,%rsi
  400e3f:	48 d1 fe             	sar    %rsi
  400e42:	74 14                	je     400e58 <register_tm_clones+0x38>
  400e44:	48 8b 05 a5 51 20 00 	mov    0x2051a5(%rip),%rax        # 605ff0 <_ITM_registerTMCloneTable@Base>
  400e4b:	48 85 c0             	test   %rax,%rax
  400e4e:	74 08                	je     400e58 <register_tm_clones+0x38>
  400e50:	ff e0                	jmpq   *%rax
  400e52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400e58:	c3                   	retq   
  400e59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400e60 <__do_global_dtors_aux>:
  400e60:	f3 0f 1e fa          	endbr64 
  400e64:	80 3d fd 5a 20 00 00 	cmpb   $0x0,0x205afd(%rip)        # 606968 <completed.0>
  400e6b:	75 13                	jne    400e80 <__do_global_dtors_aux+0x20>
  400e6d:	55                   	push   %rbp
  400e6e:	48 89 e5             	mov    %rsp,%rbp
  400e71:	e8 7a ff ff ff       	callq  400df0 <deregister_tm_clones>
  400e76:	c6 05 eb 5a 20 00 01 	movb   $0x1,0x205aeb(%rip)        # 606968 <completed.0>
  400e7d:	5d                   	pop    %rbp
  400e7e:	c3                   	retq   
  400e7f:	90                   	nop
  400e80:	c3                   	retq   
  400e81:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400e88:	00 00 00 00 
  400e8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400e90 <frame_dummy>:
  400e90:	f3 0f 1e fa          	endbr64 
  400e94:	eb 8a                	jmp    400e20 <register_tm_clones>
  400e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e9d:	00 00 00 

0000000000400ea0 <load_program.part.0>:
  400ea0:	41 55                	push   %r13
  400ea2:	41 54                	push   %r12
  400ea4:	41 89 fc             	mov    %edi,%r12d
  400ea7:	55                   	push   %rbp
  400ea8:	53                   	push   %rbx
  400ea9:	48 83 ec 08          	sub    $0x8,%rsp
  400ead:	48 8b 05 dc 5a 20 00 	mov    0x205adc(%rip),%rax        # 606990 <segment_lengths>
  400eb4:	42 8b 1c a0          	mov    (%rax,%r12,4),%ebx
  400eb8:	48 8b 05 e1 5a 20 00 	mov    0x205ae1(%rip),%rax        # 6069a0 <segment_sequence>
  400ebf:	48 8b 38             	mov    (%rax),%rdi
  400ec2:	48 89 dd             	mov    %rbx,%rbp
  400ec5:	e8 e6 fc ff ff       	callq  400bb0 <free@plt>
  400eca:	4c 8b 2d cf 5a 20 00 	mov    0x205acf(%rip),%r13        # 6069a0 <segment_sequence>
  400ed1:	48 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%rdi
  400ed8:	00 
  400ed9:	e8 b2 fd ff ff       	callq  400c90 <malloc@plt>
  400ede:	49 89 45 00          	mov    %rax,0x0(%r13)
  400ee2:	85 db                	test   %ebx,%ebx
  400ee4:	74 19                	je     400eff <load_program.part.0+0x5f>
  400ee6:	4b 8b 74 e5 00       	mov    0x0(%r13,%r12,8),%rsi
  400eeb:	31 d2                	xor    %edx,%edx
  400eed:	0f 1f 00             	nopl   (%rax)
  400ef0:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  400ef3:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  400ef6:	48 83 c2 01          	add    $0x1,%rdx
  400efa:	48 39 da             	cmp    %rbx,%rdx
  400efd:	75 f1                	jne    400ef0 <load_program.part.0+0x50>
  400eff:	48 8b 05 8a 5a 20 00 	mov    0x205a8a(%rip),%rax        # 606990 <segment_lengths>
  400f06:	89 28                	mov    %ebp,(%rax)
  400f08:	48 83 c4 08          	add    $0x8,%rsp
  400f0c:	5b                   	pop    %rbx
  400f0d:	5d                   	pop    %rbp
  400f0e:	41 5c                	pop    %r12
  400f10:	41 5d                	pop    %r13
  400f12:	c3                   	retq   
  400f13:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400f1a:	00 00 00 00 
  400f1e:	66 90                	xchg   %ax,%ax

0000000000400f20 <load_initial_segment>:
  400f20:	41 56                	push   %r14
  400f22:	ba 02 00 00 00       	mov    $0x2,%edx
  400f27:	31 f6                	xor    %esi,%esi
  400f29:	41 55                	push   %r13
  400f2b:	41 54                	push   %r12
  400f2d:	49 89 fc             	mov    %rdi,%r12
  400f30:	55                   	push   %rbp
  400f31:	53                   	push   %rbx
  400f32:	e8 79 fd ff ff       	callq  400cb0 <fseek@plt>
  400f37:	4c 89 e7             	mov    %r12,%rdi
  400f3a:	e8 41 fd ff ff       	callq  400c80 <ftell@plt>
  400f3f:	4c 89 e7             	mov    %r12,%rdi
  400f42:	49 89 c6             	mov    %rax,%r14
  400f45:	e8 d6 fc ff ff       	callq  400c20 <rewind@plt>
  400f4a:	49 63 fe             	movslq %r14d,%rdi
  400f4d:	48 c1 e7 02          	shl    $0x2,%rdi
  400f51:	e8 3a fd ff ff       	callq  400c90 <malloc@plt>
  400f56:	49 89 c5             	mov    %rax,%r13
  400f59:	48 85 c0             	test   %rax,%rax
  400f5c:	0f 84 02 01 00 00    	je     401064 <load_initial_segment+0x144>
  400f62:	4c 89 e7             	mov    %r12,%rdi
  400f65:	e8 b6 fd ff ff       	callq  400d20 <getc@plt>
  400f6a:	83 f8 ff             	cmp    $0xffffffff,%eax
  400f6d:	74 64                	je     400fd3 <load_initial_segment+0xb3>
  400f6f:	31 db                	xor    %ebx,%ebx
  400f71:	31 ed                	xor    %ebp,%ebp
  400f73:	eb 2e                	jmp    400fa3 <load_initial_segment+0x83>
  400f75:	0f 1f 00             	nopl   (%rax)
  400f78:	83 fa 01             	cmp    $0x1,%edx
  400f7b:	0f 84 7f 00 00 00    	je     401000 <load_initial_segment+0xe0>
  400f81:	83 fa 02             	cmp    $0x2,%edx
  400f84:	0f 84 96 00 00 00    	je     401020 <load_initial_segment+0x100>
  400f8a:	83 fa 03             	cmp    $0x3,%edx
  400f8d:	0f 84 ad 00 00 00    	je     401040 <load_initial_segment+0x120>
  400f93:	4c 89 e7             	mov    %r12,%rdi
  400f96:	83 c3 01             	add    $0x1,%ebx
  400f99:	e8 82 fd ff ff       	callq  400d20 <getc@plt>
  400f9e:	83 f8 ff             	cmp    $0xffffffff,%eax
  400fa1:	74 30                	je     400fd3 <load_initial_segment+0xb3>
  400fa3:	89 da                	mov    %ebx,%edx
  400fa5:	0f b6 c8             	movzbl %al,%ecx
  400fa8:	83 e2 03             	and    $0x3,%edx
  400fab:	75 cb                	jne    400f78 <load_initial_segment+0x58>
  400fad:	89 ef                	mov    %ebp,%edi
  400faf:	0f b6 c8             	movzbl %al,%ecx
  400fb2:	ba 18 00 00 00       	mov    $0x18,%edx
  400fb7:	be 08 00 00 00       	mov    $0x8,%esi
  400fbc:	e8 4f 0a 00 00       	callq  401a10 <Bitpack_newu>
  400fc1:	4c 89 e7             	mov    %r12,%rdi
  400fc4:	83 c3 01             	add    $0x1,%ebx
  400fc7:	89 c5                	mov    %eax,%ebp
  400fc9:	e8 52 fd ff ff       	callq  400d20 <getc@plt>
  400fce:	83 f8 ff             	cmp    $0xffffffff,%eax
  400fd1:	75 d0                	jne    400fa3 <load_initial_segment+0x83>
  400fd3:	4c 89 e7             	mov    %r12,%rdi
  400fd6:	e8 05 fc ff ff       	callq  400be0 <fclose@plt>
  400fdb:	48 8b 05 be 59 20 00 	mov    0x2059be(%rip),%rax        # 6069a0 <segment_sequence>
  400fe2:	4c 89 28             	mov    %r13,(%rax)
  400fe5:	48 8b 05 a4 59 20 00 	mov    0x2059a4(%rip),%rax        # 606990 <segment_lengths>
  400fec:	44 89 30             	mov    %r14d,(%rax)
  400fef:	5b                   	pop    %rbx
  400ff0:	83 05 a5 59 20 00 01 	addl   $0x1,0x2059a5(%rip)        # 60699c <seq_size>
  400ff7:	5d                   	pop    %rbp
  400ff8:	41 5c                	pop    %r12
  400ffa:	41 5d                	pop    %r13
  400ffc:	41 5e                	pop    %r14
  400ffe:	c3                   	retq   
  400fff:	90                   	nop
  401000:	89 ef                	mov    %ebp,%edi
  401002:	ba 10 00 00 00       	mov    $0x10,%edx
  401007:	be 08 00 00 00       	mov    $0x8,%esi
  40100c:	e8 ff 09 00 00       	callq  401a10 <Bitpack_newu>
  401011:	89 c5                	mov    %eax,%ebp
  401013:	e9 7b ff ff ff       	jmpq   400f93 <load_initial_segment+0x73>
  401018:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40101f:	00 
  401020:	89 ef                	mov    %ebp,%edi
  401022:	ba 08 00 00 00       	mov    $0x8,%edx
  401027:	be 08 00 00 00       	mov    $0x8,%esi
  40102c:	e8 df 09 00 00       	callq  401a10 <Bitpack_newu>
  401031:	89 c5                	mov    %eax,%ebp
  401033:	e9 5b ff ff ff       	jmpq   400f93 <load_initial_segment+0x73>
  401038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40103f:	00 
  401040:	89 ef                	mov    %ebp,%edi
  401042:	31 d2                	xor    %edx,%edx
  401044:	be 08 00 00 00       	mov    $0x8,%esi
  401049:	31 ed                	xor    %ebp,%ebp
  40104b:	e8 c0 09 00 00       	callq  401a10 <Bitpack_newu>
  401050:	49 89 c0             	mov    %rax,%r8
  401053:	89 d8                	mov    %ebx,%eax
  401055:	c1 f8 02             	sar    $0x2,%eax
  401058:	48 98                	cltq   
  40105a:	45 89 44 85 00       	mov    %r8d,0x0(%r13,%rax,4)
  40105f:	e9 2f ff ff ff       	jmpq   400f93 <load_initial_segment+0x73>
  401064:	ba 8e 00 00 00       	mov    $0x8e,%edx
  401069:	be 5c 49 40 00       	mov    $0x40495c,%esi
  40106e:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401073:	e8 68 06 00 00       	callq  4016e0 <Except_raise>
  401078:	e9 e5 fe ff ff       	jmpq   400f62 <load_initial_segment+0x42>
  40107d:	0f 1f 00             	nopl   (%rax)

0000000000401080 <initialize_memory>:
  401080:	55                   	push   %rbp
  401081:	48 89 fd             	mov    %rdi,%rbp
  401084:	bf 00 04 00 00       	mov    $0x400,%edi
  401089:	c7 05 05 59 20 00 80 	movl   $0x80,0x205905(%rip)        # 606998 <seq_capacity>
  401090:	00 00 00 
  401093:	e8 f8 fb ff ff       	callq  400c90 <malloc@plt>
  401098:	48 89 05 01 59 20 00 	mov    %rax,0x205901(%rip)        # 6069a0 <segment_sequence>
  40109f:	48 85 c0             	test   %rax,%rax
  4010a2:	74 40                	je     4010e4 <initialize_memory+0x64>
  4010a4:	bf 00 02 00 00       	mov    $0x200,%edi
  4010a9:	e8 e2 fb ff ff       	callq  400c90 <malloc@plt>
  4010ae:	48 89 05 db 58 20 00 	mov    %rax,0x2058db(%rip)        # 606990 <segment_lengths>
  4010b5:	48 85 c0             	test   %rax,%rax
  4010b8:	74 5f                	je     401119 <initialize_memory+0x99>
  4010ba:	48 89 ef             	mov    %rbp,%rdi
  4010bd:	e8 5e fe ff ff       	callq  400f20 <load_initial_segment>
  4010c2:	bf 00 04 00 00       	mov    $0x400,%edi
  4010c7:	c7 05 af 58 20 00 80 	movl   $0x80,0x2058af(%rip)        # 606980 <rec_capacity>
  4010ce:	00 00 00 
  4010d1:	e8 ba fb ff ff       	callq  400c90 <malloc@plt>
  4010d6:	48 89 05 ab 58 20 00 	mov    %rax,0x2058ab(%rip)        # 606988 <recycled_ids>
  4010dd:	48 85 c0             	test   %rax,%rax
  4010e0:	74 22                	je     401104 <initialize_memory+0x84>
  4010e2:	5d                   	pop    %rbp
  4010e3:	c3                   	retq   
  4010e4:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4010e9:	ba 77 00 00 00       	mov    $0x77,%edx
  4010ee:	be 5c 49 40 00       	mov    $0x40495c,%esi
  4010f3:	e8 e8 05 00 00       	callq  4016e0 <Except_raise>
  4010f8:	8b 3d 9a 58 20 00    	mov    0x20589a(%rip),%edi        # 606998 <seq_capacity>
  4010fe:	48 c1 e7 02          	shl    $0x2,%rdi
  401102:	eb a5                	jmp    4010a9 <initialize_memory+0x29>
  401104:	ba 80 00 00 00       	mov    $0x80,%edx
  401109:	be 5c 49 40 00       	mov    $0x40495c,%esi
  40110e:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401113:	5d                   	pop    %rbp
  401114:	e9 c7 05 00 00       	jmpq   4016e0 <Except_raise>
  401119:	ba 7a 00 00 00       	mov    $0x7a,%edx
  40111e:	be 5c 49 40 00       	mov    $0x40495c,%esi
  401123:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401128:	e8 b3 05 00 00       	callq  4016e0 <Except_raise>
  40112d:	eb 8b                	jmp    4010ba <initialize_memory+0x3a>
  40112f:	90                   	nop

0000000000401130 <map_segment>:
  401130:	55                   	push   %rbp
  401131:	89 ff                	mov    %edi,%edi
  401133:	be 04 00 00 00       	mov    $0x4,%esi
  401138:	53                   	push   %rbx
  401139:	48 89 fb             	mov    %rdi,%rbx
  40113c:	48 83 ec 08          	sub    $0x8,%rsp
  401140:	e8 1b fb ff ff       	callq  400c60 <calloc@plt>
  401145:	48 8b 3d 54 58 20 00 	mov    0x205854(%rip),%rdi        # 6069a0 <segment_sequence>
  40114c:	48 89 c5             	mov    %rax,%rbp
  40114f:	8b 05 2f 58 20 00    	mov    0x20582f(%rip),%eax        # 606984 <rec_size>
  401155:	85 c0                	test   %eax,%eax
  401157:	75 37                	jne    401190 <map_segment+0x60>
  401159:	8b 05 3d 58 20 00    	mov    0x20583d(%rip),%eax        # 60699c <seq_size>
  40115f:	3b 05 33 58 20 00    	cmp    0x205833(%rip),%eax        # 606998 <seq_capacity>
  401165:	74 51                	je     4011b8 <map_segment+0x88>
  401167:	89 c2                	mov    %eax,%edx
  401169:	8d 48 01             	lea    0x1(%rax),%ecx
  40116c:	48 89 2c d7          	mov    %rbp,(%rdi,%rdx,8)
  401170:	89 0d 26 58 20 00    	mov    %ecx,0x205826(%rip)        # 60699c <seq_size>
  401176:	48 8b 0d 13 58 20 00 	mov    0x205813(%rip),%rcx        # 606990 <segment_lengths>
  40117d:	89 1c 91             	mov    %ebx,(%rcx,%rdx,4)
  401180:	48 83 c4 08          	add    $0x8,%rsp
  401184:	5b                   	pop    %rbx
  401185:	5d                   	pop    %rbp
  401186:	c3                   	retq   
  401187:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40118e:	00 00 
  401190:	48 8b 15 f1 57 20 00 	mov    0x2057f1(%rip),%rdx        # 606988 <recycled_ids>
  401197:	83 e8 01             	sub    $0x1,%eax
  40119a:	89 05 e4 57 20 00    	mov    %eax,0x2057e4(%rip)        # 606984 <rec_size>
  4011a0:	48 8d 14 82          	lea    (%rdx,%rax,4),%rdx
  4011a4:	8b 02                	mov    (%rdx),%eax
  4011a6:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  4011ac:	89 c2                	mov    %eax,%edx
  4011ae:	48 89 2c d7          	mov    %rbp,(%rdi,%rdx,8)
  4011b2:	eb c2                	jmp    401176 <map_segment+0x46>
  4011b4:	0f 1f 40 00          	nopl   0x0(%rax)
  4011b8:	8d 74 00 02          	lea    0x2(%rax,%rax,1),%esi
  4011bc:	89 35 d6 57 20 00    	mov    %esi,0x2057d6(%rip)        # 606998 <seq_capacity>
  4011c2:	48 c1 e6 03          	shl    $0x3,%rsi
  4011c6:	e8 f5 fa ff ff       	callq  400cc0 <realloc@plt>
  4011cb:	8b 35 c7 57 20 00    	mov    0x2057c7(%rip),%esi        # 606998 <seq_capacity>
  4011d1:	48 8b 3d b8 57 20 00 	mov    0x2057b8(%rip),%rdi        # 606990 <segment_lengths>
  4011d8:	48 89 05 c1 57 20 00 	mov    %rax,0x2057c1(%rip)        # 6069a0 <segment_sequence>
  4011df:	48 c1 e6 02          	shl    $0x2,%rsi
  4011e3:	e8 d8 fa ff ff       	callq  400cc0 <realloc@plt>
  4011e8:	48 8b 3d b1 57 20 00 	mov    0x2057b1(%rip),%rdi        # 6069a0 <segment_sequence>
  4011ef:	48 89 05 9a 57 20 00 	mov    %rax,0x20579a(%rip)        # 606990 <segment_lengths>
  4011f6:	8b 05 a0 57 20 00    	mov    0x2057a0(%rip),%eax        # 60699c <seq_size>
  4011fc:	e9 66 ff ff ff       	jmpq   401167 <map_segment+0x37>
  401201:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401208:	00 00 00 00 
  40120c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401210 <unmap_segment>:
  401210:	55                   	push   %rbp
  401211:	89 fd                	mov    %edi,%ebp
  401213:	53                   	push   %rbx
  401214:	48 89 eb             	mov    %rbp,%rbx
  401217:	48 83 ec 08          	sub    $0x8,%rsp
  40121b:	48 8b 05 7e 57 20 00 	mov    0x20577e(%rip),%rax        # 6069a0 <segment_sequence>
  401222:	48 8b 3c e8          	mov    (%rax,%rbp,8),%rdi
  401226:	e8 85 f9 ff ff       	callq  400bb0 <free@plt>
  40122b:	48 8b 05 6e 57 20 00 	mov    0x20576e(%rip),%rax        # 6069a0 <segment_sequence>
  401232:	8b 15 4c 57 20 00    	mov    0x20574c(%rip),%edx        # 606984 <rec_size>
  401238:	3b 15 42 57 20 00    	cmp    0x205742(%rip),%edx        # 606980 <rec_capacity>
  40123e:	48 c7 04 e8 00 00 00 	movq   $0x0,(%rax,%rbp,8)
  401245:	00 
  401246:	74 28                	je     401270 <unmap_segment+0x60>
  401248:	48 8b 05 39 57 20 00 	mov    0x205739(%rip),%rax        # 606988 <recycled_ids>
  40124f:	89 1c 90             	mov    %ebx,(%rax,%rdx,4)
  401252:	48 8b 05 37 57 20 00 	mov    0x205737(%rip),%rax        # 606990 <segment_lengths>
  401259:	c7 04 a8 00 00 00 00 	movl   $0x0,(%rax,%rbp,4)
  401260:	83 05 1d 57 20 00 01 	addl   $0x1,0x20571d(%rip)        # 606984 <rec_size>
  401267:	48 83 c4 08          	add    $0x8,%rsp
  40126b:	5b                   	pop    %rbx
  40126c:	5d                   	pop    %rbp
  40126d:	c3                   	retq   
  40126e:	66 90                	xchg   %ax,%ax
  401270:	8d 74 12 02          	lea    0x2(%rdx,%rdx,1),%esi
  401274:	48 8b 3d 0d 57 20 00 	mov    0x20570d(%rip),%rdi        # 606988 <recycled_ids>
  40127b:	89 35 ff 56 20 00    	mov    %esi,0x2056ff(%rip)        # 606980 <rec_capacity>
  401281:	48 c1 e6 02          	shl    $0x2,%rsi
  401285:	e8 36 fa ff ff       	callq  400cc0 <realloc@plt>
  40128a:	8b 15 f4 56 20 00    	mov    0x2056f4(%rip),%edx        # 606984 <rec_size>
  401290:	48 89 05 f1 56 20 00 	mov    %rax,0x2056f1(%rip)        # 606988 <recycled_ids>
  401297:	eb b6                	jmp    40124f <unmap_segment+0x3f>
  401299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004012a0 <segmented_load>:
  4012a0:	48 8b 05 f9 56 20 00 	mov    0x2056f9(%rip),%rax        # 6069a0 <segment_sequence>
  4012a7:	89 ff                	mov    %edi,%edi
  4012a9:	89 f6                	mov    %esi,%esi
  4012ab:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
  4012af:	8b 04 b0             	mov    (%rax,%rsi,4),%eax
  4012b2:	c3                   	retq   
  4012b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4012ba:	00 00 00 00 
  4012be:	66 90                	xchg   %ax,%ax

00000000004012c0 <segmented_store>:
  4012c0:	48 8b 05 d9 56 20 00 	mov    0x2056d9(%rip),%rax        # 6069a0 <segment_sequence>
  4012c7:	89 ff                	mov    %edi,%edi
  4012c9:	89 f6                	mov    %esi,%esi
  4012cb:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
  4012cf:	89 14 b0             	mov    %edx,(%rax,%rsi,4)
  4012d2:	c3                   	retq   
  4012d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4012da:	00 00 00 00 
  4012de:	66 90                	xchg   %ax,%ax

00000000004012e0 <load_program>:
  4012e0:	85 ff                	test   %edi,%edi
  4012e2:	75 04                	jne    4012e8 <load_program+0x8>
  4012e4:	c3                   	retq   
  4012e5:	0f 1f 00             	nopl   (%rax)
  4012e8:	e9 b3 fb ff ff       	jmpq   400ea0 <load_program.part.0>
  4012ed:	0f 1f 00             	nopl   (%rax)

00000000004012f0 <handle_halt>:
  4012f0:	8b 05 a6 56 20 00    	mov    0x2056a6(%rip),%eax        # 60699c <seq_size>
  4012f6:	4c 8b 05 a3 56 20 00 	mov    0x2056a3(%rip),%r8        # 6069a0 <segment_sequence>
  4012fd:	53                   	push   %rbx
  4012fe:	85 c0                	test   %eax,%eax
  401300:	74 28                	je     40132a <handle_halt+0x3a>
  401302:	31 db                	xor    %ebx,%ebx
  401304:	0f 1f 40 00          	nopl   0x0(%rax)
  401308:	89 d8                	mov    %ebx,%eax
  40130a:	49 8b 3c c0          	mov    (%r8,%rax,8),%rdi
  40130e:	48 85 ff             	test   %rdi,%rdi
  401311:	74 0c                	je     40131f <handle_halt+0x2f>
  401313:	e8 98 f8 ff ff       	callq  400bb0 <free@plt>
  401318:	4c 8b 05 81 56 20 00 	mov    0x205681(%rip),%r8        # 6069a0 <segment_sequence>
  40131f:	83 c3 01             	add    $0x1,%ebx
  401322:	39 1d 74 56 20 00    	cmp    %ebx,0x205674(%rip)        # 60699c <seq_size>
  401328:	77 de                	ja     401308 <handle_halt+0x18>
  40132a:	4c 89 c7             	mov    %r8,%rdi
  40132d:	e8 7e f8 ff ff       	callq  400bb0 <free@plt>
  401332:	48 8b 3d 57 56 20 00 	mov    0x205657(%rip),%rdi        # 606990 <segment_lengths>
  401339:	e8 72 f8 ff ff       	callq  400bb0 <free@plt>
  40133e:	48 8b 3d 43 56 20 00 	mov    0x205643(%rip),%rdi        # 606988 <recycled_ids>
  401345:	e8 66 f8 ff ff       	callq  400bb0 <free@plt>
  40134a:	31 ff                	xor    %edi,%edi
  40134c:	e8 af f9 ff ff       	callq  400d00 <exit@plt>
  401351:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401358:	00 00 00 00 
  40135c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401360 <handle_instruction>:
  401360:	89 f8                	mov    %edi,%eax
  401362:	83 05 77 56 20 00 01 	addl   $0x1,0x205677(%rip)        # 6069e0 <program_counter>
  401369:	c1 e8 1c             	shr    $0x1c,%eax
  40136c:	83 f8 0d             	cmp    $0xd,%eax
  40136f:	74 67                	je     4013d8 <handle_instruction+0x78>
  401371:	55                   	push   %rbp
  401372:	89 fa                	mov    %edi,%edx
  401374:	89 fd                	mov    %edi,%ebp
  401376:	c1 ef 06             	shr    $0x6,%edi
  401379:	53                   	push   %rbx
  40137a:	c1 ea 03             	shr    $0x3,%edx
  40137d:	83 e5 07             	and    $0x7,%ebp
  401380:	89 d3                	mov    %edx,%ebx
  401382:	89 fa                	mov    %edi,%edx
  401384:	83 e3 07             	and    $0x7,%ebx
  401387:	83 e2 07             	and    $0x7,%edx
  40138a:	48 83 ec 08          	sub    $0x8,%rsp
  40138e:	83 f8 0d             	cmp    $0xd,%eax
  401391:	77 3b                	ja     4013ce <handle_instruction+0x6e>
  401393:	ff 24 c5 a0 49 40 00 	jmpq   *0x4049a0(,%rax,8)
  40139a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4013a0:	48 8b 3d 99 55 20 00 	mov    0x205599(%rip),%rdi        # 606940 <stdin@@GLIBC_2.2.5>
  4013a7:	e8 74 f9 ff ff       	callq  400d20 <getc@plt>
  4013ac:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4013b1:	89 c3                	mov    %eax,%ebx
  4013b3:	83 f8 ff             	cmp    $0xffffffff,%eax
  4013b6:	74 0d                	je     4013c5 <handle_instruction+0x65>
  4013b8:	3d ff 00 00 00       	cmp    $0xff,%eax
  4013bd:	0f 8f 0d 02 00 00    	jg     4015d0 <handle_instruction+0x270>
  4013c3:	89 da                	mov    %ebx,%edx
  4013c5:	89 e8                	mov    %ebp,%eax
  4013c7:	89 14 85 c0 69 60 00 	mov    %edx,0x6069c0(,%rax,4)
  4013ce:	48 83 c4 08          	add    $0x8,%rsp
  4013d2:	5b                   	pop    %rbx
  4013d3:	5d                   	pop    %rbp
  4013d4:	c3                   	retq   
  4013d5:	0f 1f 00             	nopl   (%rax)
  4013d8:	89 fa                	mov    %edi,%edx
  4013da:	81 e7 ff ff ff 01    	and    $0x1ffffff,%edi
  4013e0:	c1 ea 19             	shr    $0x19,%edx
  4013e3:	83 e2 07             	and    $0x7,%edx
  4013e6:	89 3c 95 c0 69 60 00 	mov    %edi,0x6069c0(,%rdx,4)
  4013ed:	c3                   	retq   
  4013ee:	66 90                	xchg   %ax,%ax
  4013f0:	89 da                	mov    %ebx,%edx
  4013f2:	8b 3c 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%edi
  4013f9:	85 ff                	test   %edi,%edi
  4013fb:	0f 85 a7 01 00 00    	jne    4015a8 <handle_instruction+0x248>
  401401:	89 e8                	mov    %ebp,%eax
  401403:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  40140a:	89 05 d0 55 20 00    	mov    %eax,0x2055d0(%rip)        # 6069e0 <program_counter>
  401410:	eb bc                	jmp    4013ce <handle_instruction+0x6e>
  401412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401418:	89 e8                	mov    %ebp,%eax
  40141a:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  401421:	85 c0                	test   %eax,%eax
  401423:	74 a9                	je     4013ce <handle_instruction+0x6e>
  401425:	8b 04 9d c0 69 60 00 	mov    0x6069c0(,%rbx,4),%eax
  40142c:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  401433:	eb 99                	jmp    4013ce <handle_instruction+0x6e>
  401435:	0f 1f 00             	nopl   (%rax)
  401438:	89 e8                	mov    %ebp,%eax
  40143a:	8b 34 9d c0 69 60 00 	mov    0x6069c0(,%rbx,4),%esi
  401441:	8b 0c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ecx
  401448:	48 8b 05 51 55 20 00 	mov    0x205551(%rip),%rax        # 6069a0 <segment_sequence>
  40144f:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
  401453:	8b 04 88             	mov    (%rax,%rcx,4),%eax
  401456:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  40145d:	e9 6c ff ff ff       	jmpq   4013ce <handle_instruction+0x6e>
  401462:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401468:	89 e8                	mov    %ebp,%eax
  40146a:	8b 34 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%esi
  401471:	89 da                	mov    %ebx,%edx
  401473:	8b 0c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ecx
  40147a:	48 8b 05 1f 55 20 00 	mov    0x20551f(%rip),%rax        # 6069a0 <segment_sequence>
  401481:	8b 14 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%edx
  401488:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
  40148c:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  40148f:	e9 3a ff ff ff       	jmpq   4013ce <handle_instruction+0x6e>
  401494:	0f 1f 40 00          	nopl   0x0(%rax)
  401498:	89 d1                	mov    %edx,%ecx
  40149a:	89 e8                	mov    %ebp,%eax
  40149c:	89 da                	mov    %ebx,%edx
  40149e:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  4014a5:	03 04 95 c0 69 60 00 	add    0x6069c0(,%rdx,4),%eax
  4014ac:	31 d2                	xor    %edx,%edx
  4014ae:	48 f7 35 3b 4c 20 00 	divq   0x204c3b(%rip)        # 6060f0 <power>
  4014b5:	89 14 8d c0 69 60 00 	mov    %edx,0x6069c0(,%rcx,4)
  4014bc:	e9 0d ff ff ff       	jmpq   4013ce <handle_instruction+0x6e>
  4014c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4014c8:	89 d1                	mov    %edx,%ecx
  4014ca:	89 da                	mov    %ebx,%edx
  4014cc:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  4014d3:	0f af 04 ad c0 69 60 	imul   0x6069c0(,%rbp,4),%eax
  4014da:	00 
  4014db:	31 d2                	xor    %edx,%edx
  4014dd:	48 f7 35 0c 4c 20 00 	divq   0x204c0c(%rip)        # 6060f0 <power>
  4014e4:	89 14 8d c0 69 60 00 	mov    %edx,0x6069c0(,%rcx,4)
  4014eb:	e9 de fe ff ff       	jmpq   4013ce <handle_instruction+0x6e>
  4014f0:	89 d1                	mov    %edx,%ecx
  4014f2:	89 da                	mov    %ebx,%edx
  4014f4:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  4014fb:	31 d2                	xor    %edx,%edx
  4014fd:	f7 34 ad c0 69 60 00 	divl   0x6069c0(,%rbp,4)
  401504:	89 04 8d c0 69 60 00 	mov    %eax,0x6069c0(,%rcx,4)
  40150b:	e9 be fe ff ff       	jmpq   4013ce <handle_instruction+0x6e>
  401510:	89 d1                	mov    %edx,%ecx
  401512:	89 da                	mov    %ebx,%edx
  401514:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  40151b:	23 04 ad c0 69 60 00 	and    0x6069c0(,%rbp,4),%eax
  401522:	f7 d0                	not    %eax
  401524:	89 04 8d c0 69 60 00 	mov    %eax,0x6069c0(,%rcx,4)
  40152b:	e9 9e fe ff ff       	jmpq   4013ce <handle_instruction+0x6e>
  401530:	89 e8                	mov    %ebp,%eax
  401532:	8b 3c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%edi
  401539:	e8 f2 fb ff ff       	callq  401130 <map_segment>
  40153e:	89 da                	mov    %ebx,%edx
  401540:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  401547:	e9 82 fe ff ff       	jmpq   4013ce <handle_instruction+0x6e>
  40154c:	0f 1f 40 00          	nopl   0x0(%rax)
  401550:	89 e8                	mov    %ebp,%eax
  401552:	8b 3c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%edi
  401559:	48 83 c4 08          	add    $0x8,%rsp
  40155d:	5b                   	pop    %rbx
  40155e:	5d                   	pop    %rbp
  40155f:	e9 ac fc ff ff       	jmpq   401210 <unmap_segment>
  401564:	0f 1f 40 00          	nopl   0x0(%rax)
  401568:	89 e8                	mov    %ebp,%eax
  40156a:	8b 1c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ebx
  401571:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
  401577:	77 3f                	ja     4015b8 <handle_instruction+0x258>
  401579:	48 83 c4 08          	add    $0x8,%rsp
  40157d:	0f b6 fb             	movzbl %bl,%edi
  401580:	5b                   	pop    %rbx
  401581:	5d                   	pop    %rbp
  401582:	e9 39 f6 ff ff       	jmpq   400bc0 <putchar@plt>
  401587:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40158e:	00 00 
  401590:	31 ff                	xor    %edi,%edi
  401592:	89 3c 95 c0 69 60 00 	mov    %edi,0x6069c0(,%rdx,4)
  401599:	e9 30 fe ff ff       	jmpq   4013ce <handle_instruction+0x6e>
  40159e:	31 c0                	xor    %eax,%eax
  4015a0:	e8 4b fd ff ff       	callq  4012f0 <handle_halt>
  4015a5:	0f 1f 00             	nopl   (%rax)
  4015a8:	e8 f3 f8 ff ff       	callq  400ea0 <load_program.part.0>
  4015ad:	e9 4f fe ff ff       	jmpq   401401 <handle_instruction+0xa1>
  4015b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4015b8:	ba 07 02 00 00       	mov    $0x207,%edx
  4015bd:	be 5c 49 40 00       	mov    $0x40495c,%esi
  4015c2:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4015c7:	e8 14 01 00 00       	callq  4016e0 <Except_raise>
  4015cc:	eb ab                	jmp    401579 <handle_instruction+0x219>
  4015ce:	66 90                	xchg   %ax,%ax
  4015d0:	ba 1f 02 00 00       	mov    $0x21f,%edx
  4015d5:	be 5c 49 40 00       	mov    $0x40495c,%esi
  4015da:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4015df:	e8 fc 00 00 00       	callq  4016e0 <Except_raise>
  4015e4:	e9 da fd ff ff       	jmpq   4013c3 <handle_instruction+0x63>
  4015e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004015f0 <processor_cycle>:
  4015f0:	48 83 ec 08          	sub    $0x8,%rsp
  4015f4:	0f 1f 40 00          	nopl   0x0(%rax)
  4015f8:	48 8b 05 a1 53 20 00 	mov    0x2053a1(%rip),%rax        # 6069a0 <segment_sequence>
  4015ff:	8b 15 db 53 20 00    	mov    0x2053db(%rip),%edx        # 6069e0 <program_counter>
  401605:	48 8b 00             	mov    (%rax),%rax
  401608:	8b 3c 90             	mov    (%rax,%rdx,4),%edi
  40160b:	e8 50 fd ff ff       	callq  401360 <handle_instruction>
  401610:	eb e6                	jmp    4015f8 <processor_cycle+0x8>
  401612:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401619:	00 00 00 00 
  40161d:	0f 1f 00             	nopl   (%rax)

0000000000401620 <start_um>:
  401620:	48 83 ec 08          	sub    $0x8,%rsp
  401624:	e8 57 fa ff ff       	callq  401080 <initialize_memory>
  401629:	31 c0                	xor    %eax,%eax
  40162b:	e8 c0 ff ff ff       	callq  4015f0 <processor_cycle>

0000000000401630 <output_register>:
  401630:	53                   	push   %rbx
  401631:	89 fb                	mov    %edi,%ebx
  401633:	81 ff ff 00 00 00    	cmp    $0xff,%edi
  401639:	77 0d                	ja     401648 <output_register+0x18>
  40163b:	0f b6 fb             	movzbl %bl,%edi
  40163e:	5b                   	pop    %rbx
  40163f:	e9 7c f5 ff ff       	jmpq   400bc0 <putchar@plt>
  401644:	0f 1f 40 00          	nopl   0x0(%rax)
  401648:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  40164d:	ba 07 02 00 00       	mov    $0x207,%edx
  401652:	be 5c 49 40 00       	mov    $0x40495c,%esi
  401657:	e8 84 00 00 00       	callq  4016e0 <Except_raise>
  40165c:	0f b6 fb             	movzbl %bl,%edi
  40165f:	5b                   	pop    %rbx
  401660:	e9 5b f5 ff ff       	jmpq   400bc0 <putchar@plt>
  401665:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40166c:	00 00 00 00 

0000000000401670 <read_in_to_register>:
  401670:	53                   	push   %rbx
  401671:	48 8b 3d c8 52 20 00 	mov    0x2052c8(%rip),%rdi        # 606940 <stdin@@GLIBC_2.2.5>
  401678:	e8 a3 f6 ff ff       	callq  400d20 <getc@plt>
  40167d:	89 c3                	mov    %eax,%ebx
  40167f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401684:	83 fb ff             	cmp    $0xffffffff,%ebx
  401687:	74 0a                	je     401693 <read_in_to_register+0x23>
  401689:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
  40168f:	7f 07                	jg     401698 <read_in_to_register+0x28>
  401691:	89 d8                	mov    %ebx,%eax
  401693:	5b                   	pop    %rbx
  401694:	c3                   	retq   
  401695:	0f 1f 00             	nopl   (%rax)
  401698:	ba 1f 02 00 00       	mov    $0x21f,%edx
  40169d:	be 5c 49 40 00       	mov    $0x40495c,%esi
  4016a2:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4016a7:	e8 34 00 00 00       	callq  4016e0 <Except_raise>
  4016ac:	89 d8                	mov    %ebx,%eax
  4016ae:	eb e3                	jmp    401693 <read_in_to_register+0x23>

00000000004016b0 <assert>:
  4016b0:	85 ff                	test   %edi,%edi
  4016b2:	74 0c                	je     4016c0 <assert+0x10>
  4016b4:	f3 c3                	repz retq 
  4016b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4016bd:	00 00 00 
  4016c0:	48 8d 3d e1 46 20 00 	lea    0x2046e1(%rip),%rdi        # 605da8 <Assert_Failed>
  4016c7:	48 8d 35 61 33 00 00 	lea    0x3361(%rip),%rsi        # 404a2f <_IO_stdin_used+0xd7>
  4016ce:	ba 05 00 00 00       	mov    $0x5,%edx
  4016d3:	e9 08 00 00 00       	jmpq   4016e0 <Except_raise>
  4016d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4016df:	00 

00000000004016e0 <Except_raise>:
  4016e0:	48 89 5c 24 d8       	mov    %rbx,-0x28(%rsp)
  4016e5:	48 89 6c 24 e0       	mov    %rbp,-0x20(%rsp)
  4016ea:	48 89 fb             	mov    %rdi,%rbx
  4016ed:	4c 89 64 24 e8       	mov    %r12,-0x18(%rsp)
  4016f2:	4c 89 74 24 f8       	mov    %r14,-0x8(%rsp)
  4016f7:	49 89 f4             	mov    %rsi,%r12
  4016fa:	4c 89 6c 24 f0       	mov    %r13,-0x10(%rsp)
  4016ff:	48 83 ec 28          	sub    $0x28,%rsp
  401703:	4c 8d 35 de 52 20 00 	lea    0x2052de(%rip),%r14        # 6069e8 <Except_stack>
  40170a:	48 85 ff             	test   %rdi,%rdi
  40170d:	89 d5                	mov    %edx,%ebp
  40170f:	4d 8b 2e             	mov    (%r14),%r13
  401712:	0f 84 a8 00 00 00    	je     4017c0 <Except_raise+0xe0>
  401718:	4d 85 ed             	test   %r13,%r13
  40171b:	74 33                	je     401750 <Except_raise+0x70>
  40171d:	49 8b 06             	mov    (%r14),%rax
  401720:	49 8d 7d 08          	lea    0x8(%r13),%rdi
  401724:	49 89 9d e0 00 00 00 	mov    %rbx,0xe0(%r13)
  40172b:	4d 89 a5 d0 00 00 00 	mov    %r12,0xd0(%r13)
  401732:	41 89 ad d8 00 00 00 	mov    %ebp,0xd8(%r13)
  401739:	be 01 00 00 00       	mov    $0x1,%esi
  40173e:	48 8b 00             	mov    (%rax),%rax
  401741:	49 89 06             	mov    %rax,(%r14)
  401744:	e8 87 f5 ff ff       	callq  400cd0 <longjmp@plt>
  401749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401750:	4c 8b 2d a1 48 20 00 	mov    0x2048a1(%rip),%r13        # 605ff8 <stderr@@GLIBC_2.2.5-0x968>
  401757:	48 8d 3d fc 32 00 00 	lea    0x32fc(%rip),%rdi        # 404a5a <_IO_stdin_used+0x102>
  40175e:	ba 12 00 00 00       	mov    $0x12,%edx
  401763:	be 01 00 00 00       	mov    $0x1,%esi
  401768:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  40176c:	e8 9f f5 ff ff       	callq  400d10 <fwrite@plt>
  401771:	48 8b 13             	mov    (%rbx),%rdx
  401774:	48 85 d2             	test   %rdx,%rdx
  401777:	0f 84 83 00 00 00    	je     401800 <Except_raise+0x120>
  40177d:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401781:	48 8d 35 e5 32 00 00 	lea    0x32e5(%rip),%rsi        # 404a6d <_IO_stdin_used+0x115>
  401788:	31 c0                	xor    %eax,%eax
  40178a:	e8 e1 f4 ff ff       	callq  400c70 <fprintf@plt>
  40178f:	85 ed                	test   %ebp,%ebp
  401791:	7f 4d                	jg     4017e0 <Except_raise+0x100>
  401793:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  401797:	48 8d 3d ee 32 00 00 	lea    0x32ee(%rip),%rdi        # 404a8c <_IO_stdin_used+0x134>
  40179e:	ba 0c 00 00 00       	mov    $0xc,%edx
  4017a3:	be 01 00 00 00       	mov    $0x1,%esi
  4017a8:	e8 63 f5 ff ff       	callq  400d10 <fwrite@plt>
  4017ad:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  4017b1:	e8 ea f4 ff ff       	callq  400ca0 <fflush@plt>
  4017b6:	e8 15 f4 ff ff       	callq  400bd0 <abort@plt>
  4017bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4017c0:	48 8d 3d e1 45 20 00 	lea    0x2045e1(%rip),%rdi        # 605da8 <Assert_Failed>
  4017c7:	48 8d 35 7f 32 00 00 	lea    0x327f(%rip),%rsi        # 404a4d <_IO_stdin_used+0xf5>
  4017ce:	ba 13 00 00 00       	mov    $0x13,%edx
  4017d3:	e8 08 ff ff ff       	callq  4016e0 <Except_raise>
  4017d8:	e9 3b ff ff ff       	jmpq   401718 <Except_raise+0x38>
  4017dd:	0f 1f 00             	nopl   (%rax)
  4017e0:	4d 85 e4             	test   %r12,%r12
  4017e3:	74 ae                	je     401793 <Except_raise+0xb3>
  4017e5:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  4017e9:	48 8d 35 8a 32 00 00 	lea    0x328a(%rip),%rsi        # 404a7a <_IO_stdin_used+0x122>
  4017f0:	89 e9                	mov    %ebp,%ecx
  4017f2:	4c 89 e2             	mov    %r12,%rdx
  4017f5:	31 c0                	xor    %eax,%eax
  4017f7:	e8 74 f4 ff ff       	callq  400c70 <fprintf@plt>
  4017fc:	eb 95                	jmp    401793 <Except_raise+0xb3>
  4017fe:	66 90                	xchg   %ax,%ax
  401800:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401804:	48 8d 35 66 32 00 00 	lea    0x3266(%rip),%rsi        # 404a71 <_IO_stdin_used+0x119>
  40180b:	48 89 da             	mov    %rbx,%rdx
  40180e:	31 c0                	xor    %eax,%eax
  401810:	e8 5b f4 ff ff       	callq  400c70 <fprintf@plt>
  401815:	e9 75 ff ff ff       	jmpq   40178f <Except_raise+0xaf>
  40181a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401820 <Bitpack_gets.part.0>:
  401820:	41 55                	push   %r13
  401822:	41 54                	push   %r12
  401824:	49 89 fc             	mov    %rdi,%r12
  401827:	55                   	push   %rbp
  401828:	89 f5                	mov    %esi,%ebp
  40182a:	53                   	push   %rbx
  40182b:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  40182e:	48 83 ec 08          	sub    $0x8,%rsp
  401832:	83 fb 40             	cmp    $0x40,%ebx
  401835:	77 49                	ja     401880 <Bitpack_gets.part.0+0x60>
  401837:	b9 40 00 00 00       	mov    $0x40,%ecx
  40183c:	89 c8                	mov    %ecx,%eax
  40183e:	29 d9                	sub    %ebx,%ecx
  401840:	29 e8                	sub    %ebp,%eax
  401842:	83 f9 40             	cmp    $0x40,%ecx
  401845:	41 89 cd             	mov    %ecx,%r13d
  401848:	89 c5                	mov    %eax,%ebp
  40184a:	77 74                	ja     4018c0 <Bitpack_gets.part.0+0xa0>
  40184c:	bb 00 00 00 00       	mov    $0x0,%ebx
  401851:	74 09                	je     40185c <Bitpack_gets.part.0+0x3c>
  401853:	4c 89 e3             	mov    %r12,%rbx
  401856:	44 89 e9             	mov    %r13d,%ecx
  401859:	48 d3 e3             	shl    %cl,%rbx
  40185c:	83 fd 40             	cmp    $0x40,%ebp
  40185f:	77 3f                	ja     4018a0 <Bitpack_gets.part.0+0x80>
  401861:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  401866:	74 02                	je     40186a <Bitpack_gets.part.0+0x4a>
  401868:	89 e9                	mov    %ebp,%ecx
  40186a:	48 83 c4 08          	add    $0x8,%rsp
  40186e:	48 89 d8             	mov    %rbx,%rax
  401871:	5b                   	pop    %rbx
  401872:	5d                   	pop    %rbp
  401873:	41 5c                	pop    %r12
  401875:	48 d3 f8             	sar    %cl,%rax
  401878:	41 5d                	pop    %r13
  40187a:	c3                   	retq   
  40187b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401880:	ba 50 00 00 00       	mov    $0x50,%edx
  401885:	be 99 4a 40 00       	mov    $0x404a99,%esi
  40188a:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  40188f:	e8 4c fe ff ff       	callq  4016e0 <Except_raise>
  401894:	eb a1                	jmp    401837 <Bitpack_gets.part.0+0x17>
  401896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40189d:	00 00 00 
  4018a0:	ba 2c 00 00 00       	mov    $0x2c,%edx
  4018a5:	be 99 4a 40 00       	mov    $0x404a99,%esi
  4018aa:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4018af:	e8 2c fe ff ff       	callq  4016e0 <Except_raise>
  4018b4:	eb b2                	jmp    401868 <Bitpack_gets.part.0+0x48>
  4018b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4018bd:	00 00 00 
  4018c0:	ba 14 00 00 00       	mov    $0x14,%edx
  4018c5:	be 99 4a 40 00       	mov    $0x404a99,%esi
  4018ca:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4018cf:	e8 0c fe ff ff       	callq  4016e0 <Except_raise>
  4018d4:	e9 7a ff ff ff       	jmpq   401853 <Bitpack_gets.part.0+0x33>
  4018d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004018e0 <Bitpack_fitss>:
  4018e0:	83 fe 3f             	cmp    $0x3f,%esi
  4018e3:	b8 01 00 00 00       	mov    $0x1,%eax
  4018e8:	77 1d                	ja     401907 <Bitpack_fitss+0x27>
  4018ea:	b9 40 00 00 00       	mov    $0x40,%ecx
  4018ef:	31 c0                	xor    %eax,%eax
  4018f1:	29 f1                	sub    %esi,%ecx
  4018f3:	83 f9 40             	cmp    $0x40,%ecx
  4018f6:	74 09                	je     401901 <Bitpack_fitss+0x21>
  4018f8:	48 89 f8             	mov    %rdi,%rax
  4018fb:	48 d3 e0             	shl    %cl,%rax
  4018fe:	48 d3 f8             	sar    %cl,%rax
  401901:	48 39 c7             	cmp    %rax,%rdi
  401904:	0f 94 c0             	sete   %al
  401907:	f3 c3                	repz retq 
  401909:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401910 <Bitpack_fitsu>:
  401910:	83 fe 3f             	cmp    $0x3f,%esi
  401913:	b8 01 00 00 00       	mov    $0x1,%eax
  401918:	77 0b                	ja     401925 <Bitpack_fitsu+0x15>
  40191a:	89 f1                	mov    %esi,%ecx
  40191c:	48 d3 ef             	shr    %cl,%rdi
  40191f:	48 85 ff             	test   %rdi,%rdi
  401922:	0f 94 c0             	sete   %al
  401925:	f3 c3                	repz retq 
  401927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40192e:	00 00 

0000000000401930 <Bitpack_gets>:
  401930:	85 f6                	test   %esi,%esi
  401932:	74 0c                	je     401940 <Bitpack_gets+0x10>
  401934:	e9 e7 fe ff ff       	jmpq   401820 <Bitpack_gets.part.0>
  401939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401940:	31 c0                	xor    %eax,%eax
  401942:	c3                   	retq   
  401943:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  40194a:	84 00 00 00 00 00 

0000000000401950 <Bitpack_getu>:
  401950:	41 55                	push   %r13
  401952:	49 89 fd             	mov    %rdi,%r13
  401955:	41 54                	push   %r12
  401957:	55                   	push   %rbp
  401958:	89 f5                	mov    %esi,%ebp
  40195a:	53                   	push   %rbx
  40195b:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  40195e:	48 83 ec 08          	sub    $0x8,%rsp
  401962:	83 fb 40             	cmp    $0x40,%ebx
  401965:	77 49                	ja     4019b0 <Bitpack_getu+0x60>
  401967:	b8 40 00 00 00       	mov    $0x40,%eax
  40196c:	89 c6                	mov    %eax,%esi
  40196e:	29 d8                	sub    %ebx,%eax
  401970:	29 ee                	sub    %ebp,%esi
  401972:	83 f8 40             	cmp    $0x40,%eax
  401975:	89 c3                	mov    %eax,%ebx
  401977:	89 f5                	mov    %esi,%ebp
  401979:	77 75                	ja     4019f0 <Bitpack_getu+0xa0>
  40197b:	41 bc 00 00 00 00    	mov    $0x0,%r12d
  401981:	74 08                	je     40198b <Bitpack_getu+0x3b>
  401983:	89 d9                	mov    %ebx,%ecx
  401985:	49 d3 e5             	shl    %cl,%r13
  401988:	4d 89 ec             	mov    %r13,%r12
  40198b:	83 fd 40             	cmp    $0x40,%ebp
  40198e:	77 40                	ja     4019d0 <Bitpack_getu+0x80>
  401990:	b8 00 00 00 00       	mov    $0x0,%eax
  401995:	74 08                	je     40199f <Bitpack_getu+0x4f>
  401997:	4c 89 e0             	mov    %r12,%rax
  40199a:	89 e9                	mov    %ebp,%ecx
  40199c:	48 d3 e8             	shr    %cl,%rax
  40199f:	48 83 c4 08          	add    $0x8,%rsp
  4019a3:	5b                   	pop    %rbx
  4019a4:	5d                   	pop    %rbp
  4019a5:	41 5c                	pop    %r12
  4019a7:	41 5d                	pop    %r13
  4019a9:	c3                   	retq   
  4019aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4019b0:	ba 58 00 00 00       	mov    $0x58,%edx
  4019b5:	be 99 4a 40 00       	mov    $0x404a99,%esi
  4019ba:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4019bf:	e8 1c fd ff ff       	callq  4016e0 <Except_raise>
  4019c4:	eb a1                	jmp    401967 <Bitpack_getu+0x17>
  4019c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019cd:	00 00 00 
  4019d0:	ba 20 00 00 00       	mov    $0x20,%edx
  4019d5:	be 99 4a 40 00       	mov    $0x404a99,%esi
  4019da:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4019df:	e8 fc fc ff ff       	callq  4016e0 <Except_raise>
  4019e4:	eb b1                	jmp    401997 <Bitpack_getu+0x47>
  4019e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019ed:	00 00 00 
  4019f0:	ba 14 00 00 00       	mov    $0x14,%edx
  4019f5:	be 99 4a 40 00       	mov    $0x404a99,%esi
  4019fa:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4019ff:	e8 dc fc ff ff       	callq  4016e0 <Except_raise>
  401a04:	e9 7a ff ff ff       	jmpq   401983 <Bitpack_getu+0x33>
  401a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401a10 <Bitpack_newu>:
  401a10:	41 56                	push   %r14
  401a12:	49 89 fe             	mov    %rdi,%r14
  401a15:	41 55                	push   %r13
  401a17:	41 89 f5             	mov    %esi,%r13d
  401a1a:	41 54                	push   %r12
  401a1c:	49 89 cc             	mov    %rcx,%r12
  401a1f:	55                   	push   %rbp
  401a20:	89 d5                	mov    %edx,%ebp
  401a22:	53                   	push   %rbx
  401a23:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  401a26:	83 fb 40             	cmp    $0x40,%ebx
  401a29:	0f 87 f9 00 00 00    	ja     401b28 <Bitpack_newu+0x118>
  401a2f:	44 89 ee             	mov    %r13d,%esi
  401a32:	4c 89 e7             	mov    %r12,%rdi
  401a35:	e8 d6 fe ff ff       	callq  401910 <Bitpack_fitsu>
  401a3a:	84 c0                	test   %al,%al
  401a3c:	0f 84 c6 00 00 00    	je     401b08 <Bitpack_newu+0xf8>
  401a42:	83 fb 40             	cmp    $0x40,%ebx
  401a45:	0f 87 85 00 00 00    	ja     401ad0 <Bitpack_newu+0xc0>
  401a4b:	41 bd 00 00 00 00    	mov    $0x0,%r13d
  401a51:	74 0d                	je     401a60 <Bitpack_newu+0x50>
  401a53:	4d 89 f5             	mov    %r14,%r13
  401a56:	89 d9                	mov    %ebx,%ecx
  401a58:	49 d3 ed             	shr    %cl,%r13
  401a5b:	89 d9                	mov    %ebx,%ecx
  401a5d:	49 d3 e5             	shl    %cl,%r13
  401a60:	bb 40 00 00 00       	mov    $0x40,%ebx
  401a65:	29 eb                	sub    %ebp,%ebx
  401a67:	83 fb 40             	cmp    $0x40,%ebx
  401a6a:	77 34                	ja     401aa0 <Bitpack_newu+0x90>
  401a6c:	ba 00 00 00 00       	mov    $0x0,%edx
  401a71:	74 0d                	je     401a80 <Bitpack_newu+0x70>
  401a73:	89 d9                	mov    %ebx,%ecx
  401a75:	49 d3 e6             	shl    %cl,%r14
  401a78:	4c 89 f2             	mov    %r14,%rdx
  401a7b:	89 d9                	mov    %ebx,%ecx
  401a7d:	48 d3 ea             	shr    %cl,%rdx
  401a80:	5b                   	pop    %rbx
  401a81:	4c 89 e0             	mov    %r12,%rax
  401a84:	89 e9                	mov    %ebp,%ecx
  401a86:	5d                   	pop    %rbp
  401a87:	41 5c                	pop    %r12
  401a89:	48 d3 e0             	shl    %cl,%rax
  401a8c:	4c 09 e8             	or     %r13,%rax
  401a8f:	41 5d                	pop    %r13
  401a91:	48 09 d0             	or     %rdx,%rax
  401a94:	41 5e                	pop    %r14
  401a96:	c3                   	retq   
  401a97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401a9e:	00 00 
  401aa0:	ba 14 00 00 00       	mov    $0x14,%edx
  401aa5:	be 99 4a 40 00       	mov    $0x404a99,%esi
  401aaa:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401aaf:	e8 2c fc ff ff       	callq  4016e0 <Except_raise>
  401ab4:	89 d9                	mov    %ebx,%ecx
  401ab6:	ba 20 00 00 00       	mov    $0x20,%edx
  401abb:	be 99 4a 40 00       	mov    $0x404a99,%esi
  401ac0:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401ac5:	49 d3 e6             	shl    %cl,%r14
  401ac8:	e8 13 fc ff ff       	callq  4016e0 <Except_raise>
  401acd:	eb a9                	jmp    401a78 <Bitpack_newu+0x68>
  401acf:	90                   	nop
  401ad0:	ba 20 00 00 00       	mov    $0x20,%edx
  401ad5:	be 99 4a 40 00       	mov    $0x404a99,%esi
  401ada:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401adf:	e8 fc fb ff ff       	callq  4016e0 <Except_raise>
  401ae4:	4d 89 f5             	mov    %r14,%r13
  401ae7:	89 d9                	mov    %ebx,%ecx
  401ae9:	ba 14 00 00 00       	mov    $0x14,%edx
  401aee:	be 99 4a 40 00       	mov    $0x404a99,%esi
  401af3:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401af8:	49 d3 ed             	shr    %cl,%r13
  401afb:	e8 e0 fb ff ff       	callq  4016e0 <Except_raise>
  401b00:	e9 56 ff ff ff       	jmpq   401a5b <Bitpack_newu+0x4b>
  401b05:	0f 1f 00             	nopl   (%rax)
  401b08:	ba 65 00 00 00       	mov    $0x65,%edx
  401b0d:	be 99 4a 40 00       	mov    $0x404a99,%esi
  401b12:	bf 00 61 60 00       	mov    $0x606100,%edi
  401b17:	e8 c4 fb ff ff       	callq  4016e0 <Except_raise>
  401b1c:	e9 21 ff ff ff       	jmpq   401a42 <Bitpack_newu+0x32>
  401b21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401b28:	ba 63 00 00 00       	mov    $0x63,%edx
  401b2d:	be 99 4a 40 00       	mov    $0x404a99,%esi
  401b32:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401b37:	e8 a4 fb ff ff       	callq  4016e0 <Except_raise>
  401b3c:	e9 ee fe ff ff       	jmpq   401a2f <Bitpack_newu+0x1f>
  401b41:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  401b48:	0f 1f 84 00 00 00 00 
  401b4f:	00 

0000000000401b50 <Bitpack_news>:
  401b50:	41 55                	push   %r13
  401b52:	41 89 d5             	mov    %edx,%r13d
  401b55:	41 54                	push   %r12
  401b57:	49 89 fc             	mov    %rdi,%r12
  401b5a:	48 89 cf             	mov    %rcx,%rdi
  401b5d:	55                   	push   %rbp
  401b5e:	48 89 cd             	mov    %rcx,%rbp
  401b61:	53                   	push   %rbx
  401b62:	89 f3                	mov    %esi,%ebx
  401b64:	48 83 ec 08          	sub    $0x8,%rsp
  401b68:	e8 73 fd ff ff       	callq  4018e0 <Bitpack_fitss>
  401b6d:	84 c0                	test   %al,%al
  401b6f:	75 14                	jne    401b85 <Bitpack_news+0x35>
  401b71:	ba 6f 00 00 00       	mov    $0x6f,%edx
  401b76:	be 99 4a 40 00       	mov    $0x404a99,%esi
  401b7b:	bf 00 61 60 00       	mov    $0x606100,%edi
  401b80:	e8 5b fb ff ff       	callq  4016e0 <Except_raise>
  401b85:	89 de                	mov    %ebx,%esi
  401b87:	48 89 ef             	mov    %rbp,%rdi
  401b8a:	31 d2                	xor    %edx,%edx
  401b8c:	e8 bf fd ff ff       	callq  401950 <Bitpack_getu>
  401b91:	48 83 c4 08          	add    $0x8,%rsp
  401b95:	89 de                	mov    %ebx,%esi
  401b97:	4c 89 e7             	mov    %r12,%rdi
  401b9a:	5b                   	pop    %rbx
  401b9b:	5d                   	pop    %rbp
  401b9c:	41 5c                	pop    %r12
  401b9e:	44 89 ea             	mov    %r13d,%edx
  401ba1:	48 89 c1             	mov    %rax,%rcx
  401ba4:	41 5d                	pop    %r13
  401ba6:	e9 65 fe ff ff       	jmpq   401a10 <Bitpack_newu>
  401bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401bb0 <Bitpack_run_tests>:
  401bb0:	41 56                	push   %r14
  401bb2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401bb7:	55                   	push   %rbp
  401bb8:	53                   	push   %rbx
  401bb9:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
  401bc0:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  401bc7:	00 
  401bc8:	48 b8 ef be ad de ce 	movabs $0xfeedfacedeadbeef,%rax
  401bcf:	fa ed fe 
  401bd2:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
  401bd9:	00 
  401bda:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
  401be1:	00 
  401be2:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401be6:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
  401beb:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
  401bf0:	40 88 7c 24 43       	mov    %dil,0x43(%rsp)
  401bf5:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
  401bfc:	00 00 00 00 00 
  401c01:	83 f8 02             	cmp    $0x2,%eax
  401c04:	c7 84 24 a0 00 00 00 	movl   $0x0,0xa0(%rsp)
  401c0b:	00 00 00 00 
  401c0f:	c7 84 24 a4 00 00 00 	movl   $0x6,0xa4(%rsp)
  401c16:	06 00 00 00 
  401c1a:	c7 84 24 a8 00 00 00 	movl   $0x8,0xa8(%rsp)
  401c21:	08 00 00 00 
  401c25:	c7 84 24 ac 00 00 00 	movl   $0x40,0xac(%rsp)
  401c2c:	40 00 00 00 
  401c30:	c7 84 24 90 00 00 00 	movl   $0x10,0x90(%rsp)
  401c37:	10 00 00 00 
  401c3b:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
  401c42:	00 00 00 00 
  401c46:	c7 84 24 98 00 00 00 	movl   $0x63,0x98(%rsp)
  401c4d:	63 00 00 00 
  401c51:	48 c7 84 24 00 01 00 	movq   $0xfffffffffffffffe,0x100(%rsp)
  401c58:	00 fe ff ff ff 
  401c5d:	48 c7 84 24 08 01 00 	movq   $0x7,0x108(%rsp)
  401c64:	00 07 00 00 00 
  401c69:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
  401c70:	00 00 00 00 00 
  401c75:	48 c7 84 24 18 01 00 	movq   $0xb,0x118(%rsp)
  401c7c:	00 0b 00 00 00 
  401c81:	48 c7 84 24 20 01 00 	movq   $0xfffffffffffffff8,0x120(%rsp)
  401c88:	00 f8 ff ff ff 
  401c8d:	48 c7 84 24 28 01 00 	movq   $0xfffffffffffffff5,0x128(%rsp)
  401c94:	00 f5 ff ff ff 
  401c99:	48 c7 84 24 d0 00 00 	movq   $0x33,0xd0(%rsp)
  401ca0:	00 33 00 00 00 
  401ca5:	48 c7 84 24 d8 00 00 	movq   $0x7,0xd8(%rsp)
  401cac:	00 07 00 00 00 
  401cb1:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
  401cb8:	00 00 00 00 00 
  401cbd:	48 c7 84 24 e8 00 00 	movq   $0xb,0xe8(%rsp)
  401cc4:	00 0b 00 00 00 
  401cc9:	48 c7 84 24 f0 00 00 	movq   $0x1,0xf0(%rsp)
  401cd0:	00 01 00 00 00 
  401cd5:	0f 87 bd 02 00 00    	ja     401f98 <Bitpack_run_tests+0x3e8>
  401cdb:	48 8d 84 24 38 01 00 	lea    0x138(%rsp),%rax
  401ce2:	00 
  401ce3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  401ce8:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401cec:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
  401cf3:	00 
  401cf4:	48 8b 84 c4 b0 00 00 	mov    0xb0(%rsp,%rax,8),%rax
  401cfb:	00 
  401cfc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  401d01:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401d05:	83 f8 03             	cmp    $0x3,%eax
  401d08:	0f 87 72 02 00 00    	ja     401f80 <Bitpack_run_tests+0x3d0>
  401d0e:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401d12:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
  401d19:	00 
  401d1a:	b9 40 00 00 00       	mov    $0x40,%ecx
  401d1f:	8b 84 84 a0 00 00 00 	mov    0xa0(%rsp,%rax,4),%eax
  401d26:	89 c3                	mov    %eax,%ebx
  401d28:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  401d2c:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401d30:	29 d9                	sub    %ebx,%ecx
  401d32:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
  401d36:	83 f8 02             	cmp    $0x2,%eax
  401d39:	0f 87 29 02 00 00    	ja     401f68 <Bitpack_run_tests+0x3b8>
  401d3f:	90                   	nop
  401d40:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401d44:	83 bc 84 90 00 00 00 	cmpl   $0x63,0x90(%rsp,%rax,4)
  401d4b:	63 
  401d4c:	0f 84 76 09 00 00    	je     4026c8 <Bitpack_run_tests+0xb18>
  401d52:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401d56:	8b 84 84 90 00 00 00 	mov    0x90(%rsp,%rax,4),%eax
  401d5d:	89 44 24 64          	mov    %eax,0x64(%rsp)
  401d61:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%rsp)
  401d68:	00 
  401d69:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401d6d:	83 f8 05             	cmp    $0x5,%eax
  401d70:	76 26                	jbe    401d98 <Bitpack_run_tests+0x1e8>
  401d72:	e9 d9 00 00 00       	jmpq   401e50 <Bitpack_run_tests+0x2a0>
  401d77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401d7e:	00 00 
  401d80:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401d84:	83 c0 01             	add    $0x1,%eax
  401d87:	89 44 24 68          	mov    %eax,0x68(%rsp)
  401d8b:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401d8f:	83 f8 05             	cmp    $0x5,%eax
  401d92:	0f 87 b8 00 00 00    	ja     401e50 <Bitpack_run_tests+0x2a0>
  401d98:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401d9c:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  401da3:	00 00 
  401da5:	74 08                	je     401daf <Bitpack_run_tests+0x1ff>
  401da7:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  401dab:	85 c0                	test   %eax,%eax
  401dad:	74 d1                	je     401d80 <Bitpack_run_tests+0x1d0>
  401daf:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401db3:	03 44 24 0c          	add    0xc(%rsp),%eax
  401db7:	83 f8 40             	cmp    $0x40,%eax
  401dba:	77 c4                	ja     401d80 <Bitpack_run_tests+0x1d0>
  401dbc:	48 8b 05 25 4c 20 00 	mov    0x204c25(%rip),%rax        # 6069e8 <Except_stack>
  401dc3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  401dc8:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  401dcf:	00 
  401dd0:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  401dd7:	00 
  401dd8:	48 89 05 09 4c 20 00 	mov    %rax,0x204c09(%rip)        # 6069e8 <Except_stack>
  401ddf:	e8 6c ee ff ff       	callq  400c50 <_setjmp@plt>
  401de4:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
  401de8:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  401dec:	85 c0                	test   %eax,%eax
  401dee:	0f 84 3c 05 00 00    	je     402330 <Bitpack_run_tests+0x780>
  401df4:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  401df9:	c7 44 24 6c 02 00 00 	movl   $0x2,0x6c(%rsp)
  401e00:	00 
  401e01:	be 06 00 00 00       	mov    $0x6,%esi
  401e06:	74 2d                	je     401e35 <Bitpack_run_tests+0x285>
  401e08:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401e0c:	85 c0                	test   %eax,%eax
  401e0e:	0f 84 a4 01 00 00    	je     401fb8 <Bitpack_run_tests+0x408>
  401e14:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401e18:	03 44 24 0c          	add    0xc(%rsp),%eax
  401e1c:	83 f8 40             	cmp    $0x40,%eax
  401e1f:	0f 84 93 01 00 00    	je     401fb8 <Bitpack_run_tests+0x408>
  401e25:	31 c0                	xor    %eax,%eax
  401e27:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  401e2b:	31 f6                	xor    %esi,%esi
  401e2d:	85 c9                	test   %ecx,%ecx
  401e2f:	40 0f 94 c6          	sete   %sil
  401e33:	09 c6                	or     %eax,%esi
  401e35:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  401e3a:	31 d2                	xor    %edx,%edx
  401e3c:	bf c8 4a 40 00       	mov    $0x404ac8,%edi
  401e41:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  401e46:	ff d0                	callq  *%rax
  401e48:	e9 33 ff ff ff       	jmpq   401d80 <Bitpack_run_tests+0x1d0>
  401e4d:	0f 1f 00             	nopl   (%rax)
  401e50:	c7 44 24 7c 00 00 00 	movl   $0x0,0x7c(%rsp)
  401e57:	00 
  401e58:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401e5c:	83 f8 04             	cmp    $0x4,%eax
  401e5f:	76 27                	jbe    401e88 <Bitpack_run_tests+0x2d8>
  401e61:	e9 ea 00 00 00       	jmpq   401f50 <Bitpack_run_tests+0x3a0>
  401e66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401e6d:	00 00 00 
  401e70:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401e74:	83 c0 01             	add    $0x1,%eax
  401e77:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
  401e7b:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401e7f:	83 f8 04             	cmp    $0x4,%eax
  401e82:	0f 87 c8 00 00 00    	ja     401f50 <Bitpack_run_tests+0x3a0>
  401e88:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401e8c:	48 83 bc c4 d0 00 00 	cmpq   $0x0,0xd0(%rsp,%rax,8)
  401e93:	00 00 
  401e95:	74 0a                	je     401ea1 <Bitpack_run_tests+0x2f1>
  401e97:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
  401e9c:	45 85 d2             	test   %r10d,%r10d
  401e9f:	74 cf                	je     401e70 <Bitpack_run_tests+0x2c0>
  401ea1:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401ea5:	03 44 24 0c          	add    0xc(%rsp),%eax
  401ea9:	83 f8 40             	cmp    $0x40,%eax
  401eac:	77 c2                	ja     401e70 <Bitpack_run_tests+0x2c0>
  401eae:	48 8b 05 33 4b 20 00 	mov    0x204b33(%rip),%rax        # 6069e8 <Except_stack>
  401eb5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  401eba:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  401ec1:	00 
  401ec2:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  401ec9:	00 
  401eca:	48 89 05 17 4b 20 00 	mov    %rax,0x204b17(%rip)        # 6069e8 <Except_stack>
  401ed1:	e8 7a ed ff ff       	callq  400c50 <_setjmp@plt>
  401ed6:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
  401edd:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  401ee4:	85 c0                	test   %eax,%eax
  401ee6:	0f 84 dc 00 00 00    	je     401fc8 <Bitpack_run_tests+0x418>
  401eec:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  401ef1:	c7 84 24 80 00 00 00 	movl   $0x2,0x80(%rsp)
  401ef8:	02 00 00 00 
  401efc:	be 06 00 00 00       	mov    $0x6,%esi
  401f01:	74 2d                	je     401f30 <Bitpack_run_tests+0x380>
  401f03:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401f07:	85 c0                	test   %eax,%eax
  401f09:	0f 84 99 00 00 00    	je     401fa8 <Bitpack_run_tests+0x3f8>
  401f0f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401f13:	03 44 24 0c          	add    0xc(%rsp),%eax
  401f17:	83 f8 40             	cmp    $0x40,%eax
  401f1a:	0f 84 88 00 00 00    	je     401fa8 <Bitpack_run_tests+0x3f8>
  401f20:	31 c0                	xor    %eax,%eax
  401f22:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  401f26:	31 f6                	xor    %esi,%esi
  401f28:	85 d2                	test   %edx,%edx
  401f2a:	40 0f 94 c6          	sete   %sil
  401f2e:	09 c6                	or     %eax,%esi
  401f30:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  401f35:	31 d2                	xor    %edx,%edx
  401f37:	bf 08 4c 40 00       	mov    $0x404c08,%edi
  401f3c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  401f41:	ff d0                	callq  *%rax
  401f43:	e9 28 ff ff ff       	jmpq   401e70 <Bitpack_run_tests+0x2c0>
  401f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401f4f:	00 
  401f50:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401f54:	83 c0 01             	add    $0x1,%eax
  401f57:	89 44 24 60          	mov    %eax,0x60(%rsp)
  401f5b:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401f5f:	83 f8 02             	cmp    $0x2,%eax
  401f62:	0f 86 d8 fd ff ff    	jbe    401d40 <Bitpack_run_tests+0x190>
  401f68:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401f6c:	83 c0 01             	add    $0x1,%eax
  401f6f:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
  401f73:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401f77:	83 f8 03             	cmp    $0x3,%eax
  401f7a:	0f 86 8e fd ff ff    	jbe    401d0e <Bitpack_run_tests+0x15e>
  401f80:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401f84:	83 c0 01             	add    $0x1,%eax
  401f87:	89 44 24 58          	mov    %eax,0x58(%rsp)
  401f8b:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401f8f:	83 f8 02             	cmp    $0x2,%eax
  401f92:	0f 86 50 fd ff ff    	jbe    401ce8 <Bitpack_run_tests+0x138>
  401f98:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
  401f9f:	5b                   	pop    %rbx
  401fa0:	5d                   	pop    %rbp
  401fa1:	41 5e                	pop    %r14
  401fa3:	c3                   	retq   
  401fa4:	0f 1f 40 00          	nopl   0x0(%rax)
  401fa8:	b8 04 00 00 00       	mov    $0x4,%eax
  401fad:	e9 70 ff ff ff       	jmpq   401f22 <Bitpack_run_tests+0x372>
  401fb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401fb8:	b8 04 00 00 00       	mov    $0x4,%eax
  401fbd:	e9 65 fe ff ff       	jmpq   401e27 <Bitpack_run_tests+0x277>
  401fc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401fc8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401fcc:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  401fd0:	8b 54 24 64          	mov    0x64(%rsp),%edx
  401fd4:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  401fd9:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  401fe0:	00 
  401fe1:	e8 2a fa ff ff       	callq  401a10 <Bitpack_newu>
  401fe6:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  401fed:	85 c0                	test   %eax,%eax
  401fef:	75 11                	jne    402002 <Bitpack_run_tests+0x452>
  401ff1:	48 8b 05 f0 49 20 00 	mov    0x2049f0(%rip),%rax        # 6069e8 <Except_stack>
  401ff8:	48 8b 00             	mov    (%rax),%rax
  401ffb:	48 89 05 e6 49 20 00 	mov    %rax,0x2049e6(%rip)        # 6069e8 <Except_stack>
  402002:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  402009:	83 f8 01             	cmp    $0x1,%eax
  40200c:	0f 84 d0 0b 00 00    	je     402be2 <Bitpack_run_tests+0x1032>
  402012:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402016:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  40201a:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40201e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402023:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  40202a:	00 
  40202b:	e8 e0 f9 ff ff       	callq  401a10 <Bitpack_newu>
  402030:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  402035:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  40203a:	0f 85 98 0a 00 00    	jne    402ad8 <Bitpack_run_tests+0xf28>
  402040:	48 8b 05 a1 49 20 00 	mov    0x2049a1(%rip),%rax        # 6069e8 <Except_stack>
  402047:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40204c:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402053:	00 
  402054:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  40205b:	00 
  40205c:	48 89 05 85 49 20 00 	mov    %rax,0x204985(%rip)        # 6069e8 <Except_stack>
  402063:	e8 e8 eb ff ff       	callq  400c50 <_setjmp@plt>
  402068:	89 84 24 84 00 00 00 	mov    %eax,0x84(%rsp)
  40206f:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  402076:	85 c0                	test   %eax,%eax
  402078:	0f 84 c2 09 00 00    	je     402a40 <Bitpack_run_tests+0xe90>
  40207e:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
  402083:	c7 84 24 84 00 00 00 	movl   $0x2,0x84(%rsp)
  40208a:	02 00 00 00 
  40208e:	bb 05 00 00 00       	mov    $0x5,%ebx
  402093:	45 85 c0             	test   %r8d,%r8d
  402096:	74 28                	je     4020c0 <Bitpack_run_tests+0x510>
  402098:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40209d:	b3 06                	mov    $0x6,%bl
  40209f:	74 1f                	je     4020c0 <Bitpack_run_tests+0x510>
  4020a1:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4020a5:	85 c0                	test   %eax,%eax
  4020a7:	0f 84 b3 0a 00 00    	je     402b60 <Bitpack_run_tests+0xfb0>
  4020ad:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4020b1:	03 44 24 0c          	add    0xc(%rsp),%eax
  4020b5:	83 f8 40             	cmp    $0x40,%eax
  4020b8:	0f 84 a2 0a 00 00    	je     402b60 <Bitpack_run_tests+0xfb0>
  4020be:	30 db                	xor    %bl,%bl
  4020c0:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  4020c5:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  4020ca:	bf 68 4b 40 00       	mov    $0x404b68,%edi
  4020cf:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4020d3:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4020d8:	31 c0                	xor    %eax,%eax
  4020da:	e8 59 1b 00 00       	callq  403c38 <Fmt_string>
  4020df:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4020e4:	31 d2                	xor    %edx,%edx
  4020e6:	48 89 c7             	mov    %rax,%rdi
  4020e9:	89 de                	mov    %ebx,%esi
  4020eb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4020f0:	ff d0                	callq  *%rax
  4020f2:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  4020f9:	85 c0                	test   %eax,%eax
  4020fb:	75 11                	jne    40210e <Bitpack_run_tests+0x55e>
  4020fd:	48 8b 05 e4 48 20 00 	mov    0x2048e4(%rip),%rax        # 6069e8 <Except_stack>
  402104:	48 8b 00             	mov    (%rax),%rax
  402107:	48 89 05 da 48 20 00 	mov    %rax,0x2048da(%rip)        # 6069e8 <Except_stack>
  40210e:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  402115:	83 f8 01             	cmp    $0x1,%eax
  402118:	0f 84 27 0b 00 00    	je     402c45 <Bitpack_run_tests+0x1095>
  40211e:	48 8b 05 c3 48 20 00 	mov    0x2048c3(%rip),%rax        # 6069e8 <Except_stack>
  402125:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40212a:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402131:	00 
  402132:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402139:	00 
  40213a:	48 89 05 a7 48 20 00 	mov    %rax,0x2048a7(%rip)        # 6069e8 <Except_stack>
  402141:	e8 0a eb ff ff       	callq  400c50 <_setjmp@plt>
  402146:	89 84 24 88 00 00 00 	mov    %eax,0x88(%rsp)
  40214d:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  402154:	85 c0                	test   %eax,%eax
  402156:	0f 84 04 08 00 00    	je     402960 <Bitpack_run_tests+0xdb0>
  40215c:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  402160:	c7 84 24 88 00 00 00 	movl   $0x2,0x88(%rsp)
  402167:	02 00 00 00 
  40216b:	bb 05 00 00 00       	mov    $0x5,%ebx
  402170:	85 ff                	test   %edi,%edi
  402172:	74 2c                	je     4021a0 <Bitpack_run_tests+0x5f0>
  402174:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402179:	b3 06                	mov    $0x6,%bl
  40217b:	74 23                	je     4021a0 <Bitpack_run_tests+0x5f0>
  40217d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402181:	85 c0                	test   %eax,%eax
  402183:	0f 84 97 09 00 00    	je     402b20 <Bitpack_run_tests+0xf70>
  402189:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40218d:	03 44 24 0c          	add    0xc(%rsp),%eax
  402191:	83 f8 40             	cmp    $0x40,%eax
  402194:	0f 84 86 09 00 00    	je     402b20 <Bitpack_run_tests+0xf70>
  40219a:	30 db                	xor    %bl,%bl
  40219c:	0f 1f 40 00          	nopl   0x0(%rax)
  4021a0:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4021a4:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4021a8:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  4021ae:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4021b2:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4021b6:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  4021ba:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  4021bf:	41 29 f1             	sub    %esi,%r9d
  4021c2:	be 40 00 00 00       	mov    $0x40,%esi
  4021c7:	29 d6                	sub    %edx,%esi
  4021c9:	89 f2                	mov    %esi,%edx
  4021cb:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4021d0:	01 f8                	add    %edi,%eax
  4021d2:	01 f9                	add    %edi,%ecx
  4021d4:	29 fa                	sub    %edi,%edx
  4021d6:	89 04 24             	mov    %eax,(%rsp)
  4021d9:	41 29 f9             	sub    %edi,%r9d
  4021dc:	31 c0                	xor    %eax,%eax
  4021de:	bf a0 4b 40 00       	mov    $0x404ba0,%edi
  4021e3:	e8 50 1a 00 00       	callq  403c38 <Fmt_string>
  4021e8:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4021ed:	31 d2                	xor    %edx,%edx
  4021ef:	48 89 c7             	mov    %rax,%rdi
  4021f2:	89 de                	mov    %ebx,%esi
  4021f4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4021f9:	ff d0                	callq  *%rax
  4021fb:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  402202:	85 c0                	test   %eax,%eax
  402204:	75 11                	jne    402217 <Bitpack_run_tests+0x667>
  402206:	48 8b 05 db 47 20 00 	mov    0x2047db(%rip),%rax        # 6069e8 <Except_stack>
  40220d:	48 8b 00             	mov    (%rax),%rax
  402210:	48 89 05 d1 47 20 00 	mov    %rax,0x2047d1(%rip)        # 6069e8 <Except_stack>
  402217:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  40221e:	83 f8 01             	cmp    $0x1,%eax
  402221:	0f 84 3f 0a 00 00    	je     402c66 <Bitpack_run_tests+0x10b6>
  402227:	48 8b 05 ba 47 20 00 	mov    0x2047ba(%rip),%rax        # 6069e8 <Except_stack>
  40222e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  402233:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  40223a:	00 
  40223b:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402242:	00 
  402243:	48 89 05 9e 47 20 00 	mov    %rax,0x20479e(%rip)        # 6069e8 <Except_stack>
  40224a:	e8 01 ea ff ff       	callq  400c50 <_setjmp@plt>
  40224f:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%rsp)
  402256:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  40225d:	85 c0                	test   %eax,%eax
  40225f:	0f 84 63 06 00 00    	je     4028c8 <Bitpack_run_tests+0xd18>
  402265:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402269:	c7 84 24 8c 00 00 00 	movl   $0x2,0x8c(%rsp)
  402270:	02 00 00 00 
  402274:	bb 05 00 00 00       	mov    $0x5,%ebx
  402279:	85 f6                	test   %esi,%esi
  40227b:	74 2b                	je     4022a8 <Bitpack_run_tests+0x6f8>
  40227d:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402282:	b3 06                	mov    $0x6,%bl
  402284:	74 22                	je     4022a8 <Bitpack_run_tests+0x6f8>
  402286:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40228a:	85 c0                	test   %eax,%eax
  40228c:	0f 84 9e 08 00 00    	je     402b30 <Bitpack_run_tests+0xf80>
  402292:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402296:	03 44 24 0c          	add    0xc(%rsp),%eax
  40229a:	83 f8 40             	cmp    $0x40,%eax
  40229d:	0f 84 8d 08 00 00    	je     402b30 <Bitpack_run_tests+0xf80>
  4022a3:	30 db                	xor    %bl,%bl
  4022a5:	0f 1f 00             	nopl   (%rax)
  4022a8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  4022ac:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  4022b0:	bf 80 4c 40 00       	mov    $0x404c80,%edi
  4022b5:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4022b9:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4022be:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  4022c5:	00 
  4022c6:	31 c0                	xor    %eax,%eax
  4022c8:	e8 6b 19 00 00       	callq  403c38 <Fmt_string>
  4022cd:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4022d2:	31 d2                	xor    %edx,%edx
  4022d4:	48 89 c7             	mov    %rax,%rdi
  4022d7:	89 de                	mov    %ebx,%esi
  4022d9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4022de:	ff d0                	callq  *%rax
  4022e0:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  4022e7:	85 c0                	test   %eax,%eax
  4022e9:	75 11                	jne    4022fc <Bitpack_run_tests+0x74c>
  4022eb:	48 8b 05 f6 46 20 00 	mov    0x2046f6(%rip),%rax        # 6069e8 <Except_stack>
  4022f2:	48 8b 00             	mov    (%rax),%rax
  4022f5:	48 89 05 ec 46 20 00 	mov    %rax,0x2046ec(%rip)        # 6069e8 <Except_stack>
  4022fc:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  402303:	83 f8 01             	cmp    $0x1,%eax
  402306:	0f 85 64 fb ff ff    	jne    401e70 <Bitpack_run_tests+0x2c0>
  40230c:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402313:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  40231a:	00 
  40231b:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402322:	00 
  402323:	e8 b8 f3 ff ff       	callq  4016e0 <Except_raise>
  402328:	e9 43 fb ff ff       	jmpq   401e70 <Bitpack_run_tests+0x2c0>
  40232d:	0f 1f 00             	nopl   (%rax)
  402330:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402334:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402338:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40233c:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402341:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  402348:	00 
  402349:	e8 02 f8 ff ff       	callq  401b50 <Bitpack_news>
  40234e:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  402352:	85 c0                	test   %eax,%eax
  402354:	75 11                	jne    402367 <Bitpack_run_tests+0x7b7>
  402356:	48 8b 05 8b 46 20 00 	mov    0x20468b(%rip),%rax        # 6069e8 <Except_stack>
  40235d:	48 8b 00             	mov    (%rax),%rax
  402360:	48 89 05 81 46 20 00 	mov    %rax,0x204681(%rip)        # 6069e8 <Except_stack>
  402367:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  40236b:	83 f8 01             	cmp    $0x1,%eax
  40236e:	0f 84 b0 08 00 00    	je     402c24 <Bitpack_run_tests+0x1074>
  402374:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402378:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  40237c:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402380:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402385:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  40238c:	00 
  40238d:	e8 be f7 ff ff       	callq  401b50 <Bitpack_news>
  402392:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  402397:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  40239c:	0f 85 1e 04 00 00    	jne    4027c0 <Bitpack_run_tests+0xc10>
  4023a2:	48 8b 05 3f 46 20 00 	mov    0x20463f(%rip),%rax        # 6069e8 <Except_stack>
  4023a9:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4023ae:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4023b5:	00 
  4023b6:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4023bd:	00 
  4023be:	48 89 05 23 46 20 00 	mov    %rax,0x204623(%rip)        # 6069e8 <Except_stack>
  4023c5:	e8 86 e8 ff ff       	callq  400c50 <_setjmp@plt>
  4023ca:	89 44 24 70          	mov    %eax,0x70(%rsp)
  4023ce:	8b 44 24 70          	mov    0x70(%rsp),%eax
  4023d2:	85 c0                	test   %eax,%eax
  4023d4:	0f 84 56 04 00 00    	je     402830 <Bitpack_run_tests+0xc80>
  4023da:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  4023df:	c7 44 24 70 02 00 00 	movl   $0x2,0x70(%rsp)
  4023e6:	00 
  4023e7:	bb 05 00 00 00       	mov    $0x5,%ebx
  4023ec:	45 85 f6             	test   %r14d,%r14d
  4023ef:	74 2f                	je     402420 <Bitpack_run_tests+0x870>
  4023f1:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4023f6:	b3 06                	mov    $0x6,%bl
  4023f8:	74 26                	je     402420 <Bitpack_run_tests+0x870>
  4023fa:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4023fe:	85 c0                	test   %eax,%eax
  402400:	0f 84 4a 07 00 00    	je     402b50 <Bitpack_run_tests+0xfa0>
  402406:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40240a:	03 44 24 0c          	add    0xc(%rsp),%eax
  40240e:	83 f8 40             	cmp    $0x40,%eax
  402411:	0f 84 39 07 00 00    	je     402b50 <Bitpack_run_tests+0xfa0>
  402417:	30 db                	xor    %bl,%bl
  402419:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402420:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402425:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40242a:	bf 68 4b 40 00       	mov    $0x404b68,%edi
  40242f:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402433:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402438:	31 c0                	xor    %eax,%eax
  40243a:	e8 f9 17 00 00       	callq  403c38 <Fmt_string>
  40243f:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402444:	31 d2                	xor    %edx,%edx
  402446:	48 89 c7             	mov    %rax,%rdi
  402449:	89 de                	mov    %ebx,%esi
  40244b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402450:	ff d0                	callq  *%rax
  402452:	8b 44 24 70          	mov    0x70(%rsp),%eax
  402456:	85 c0                	test   %eax,%eax
  402458:	75 11                	jne    40246b <Bitpack_run_tests+0x8bb>
  40245a:	48 8b 05 87 45 20 00 	mov    0x204587(%rip),%rax        # 6069e8 <Except_stack>
  402461:	48 8b 00             	mov    (%rax),%rax
  402464:	48 89 05 7d 45 20 00 	mov    %rax,0x20457d(%rip)        # 6069e8 <Except_stack>
  40246b:	8b 44 24 70          	mov    0x70(%rsp),%eax
  40246f:	83 f8 01             	cmp    $0x1,%eax
  402472:	0f 84 8b 07 00 00    	je     402c03 <Bitpack_run_tests+0x1053>
  402478:	48 8b 05 69 45 20 00 	mov    0x204569(%rip),%rax        # 6069e8 <Except_stack>
  40247f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  402484:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  40248b:	00 
  40248c:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402493:	00 
  402494:	48 89 05 4d 45 20 00 	mov    %rax,0x20454d(%rip)        # 6069e8 <Except_stack>
  40249b:	e8 b0 e7 ff ff       	callq  400c50 <_setjmp@plt>
  4024a0:	89 44 24 74          	mov    %eax,0x74(%rsp)
  4024a4:	8b 44 24 74          	mov    0x74(%rsp),%eax
  4024a8:	85 c0                	test   %eax,%eax
  4024aa:	0f 84 28 02 00 00    	je     4026d8 <Bitpack_run_tests+0xb28>
  4024b0:	8b 6c 24 0c          	mov    0xc(%rsp),%ebp
  4024b4:	c7 44 24 74 02 00 00 	movl   $0x2,0x74(%rsp)
  4024bb:	00 
  4024bc:	bb 05 00 00 00       	mov    $0x5,%ebx
  4024c1:	85 ed                	test   %ebp,%ebp
  4024c3:	74 2b                	je     4024f0 <Bitpack_run_tests+0x940>
  4024c5:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4024ca:	b3 06                	mov    $0x6,%bl
  4024cc:	74 22                	je     4024f0 <Bitpack_run_tests+0x940>
  4024ce:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4024d2:	85 c0                	test   %eax,%eax
  4024d4:	0f 84 66 06 00 00    	je     402b40 <Bitpack_run_tests+0xf90>
  4024da:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4024de:	03 44 24 0c          	add    0xc(%rsp),%eax
  4024e2:	83 f8 40             	cmp    $0x40,%eax
  4024e5:	0f 84 55 06 00 00    	je     402b40 <Bitpack_run_tests+0xf90>
  4024eb:	30 db                	xor    %bl,%bl
  4024ed:	0f 1f 00             	nopl   (%rax)
  4024f0:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4024f4:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4024f8:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  4024fe:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402502:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402506:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  40250a:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  40250f:	41 29 f1             	sub    %esi,%r9d
  402512:	be 40 00 00 00       	mov    $0x40,%esi
  402517:	29 d6                	sub    %edx,%esi
  402519:	89 f2                	mov    %esi,%edx
  40251b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402520:	01 f8                	add    %edi,%eax
  402522:	01 f9                	add    %edi,%ecx
  402524:	29 fa                	sub    %edi,%edx
  402526:	89 04 24             	mov    %eax,(%rsp)
  402529:	41 29 f9             	sub    %edi,%r9d
  40252c:	31 c0                	xor    %eax,%eax
  40252e:	bf a0 4b 40 00       	mov    $0x404ba0,%edi
  402533:	e8 00 17 00 00       	callq  403c38 <Fmt_string>
  402538:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40253d:	31 d2                	xor    %edx,%edx
  40253f:	48 89 c7             	mov    %rax,%rdi
  402542:	89 de                	mov    %ebx,%esi
  402544:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402549:	ff d0                	callq  *%rax
  40254b:	8b 44 24 74          	mov    0x74(%rsp),%eax
  40254f:	85 c0                	test   %eax,%eax
  402551:	75 11                	jne    402564 <Bitpack_run_tests+0x9b4>
  402553:	48 8b 05 8e 44 20 00 	mov    0x20448e(%rip),%rax        # 6069e8 <Except_stack>
  40255a:	48 8b 00             	mov    (%rax),%rax
  40255d:	48 89 05 84 44 20 00 	mov    %rax,0x204484(%rip)        # 6069e8 <Except_stack>
  402564:	8b 44 24 74          	mov    0x74(%rsp),%eax
  402568:	83 f8 01             	cmp    $0x1,%eax
  40256b:	0f 84 50 06 00 00    	je     402bc1 <Bitpack_run_tests+0x1011>
  402571:	48 8b 05 70 44 20 00 	mov    0x204470(%rip),%rax        # 6069e8 <Except_stack>
  402578:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40257d:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402584:	00 
  402585:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  40258c:	00 
  40258d:	48 89 05 54 44 20 00 	mov    %rax,0x204454(%rip)        # 6069e8 <Except_stack>
  402594:	e8 b7 e6 ff ff       	callq  400c50 <_setjmp@plt>
  402599:	89 44 24 78          	mov    %eax,0x78(%rsp)
  40259d:	8b 44 24 78          	mov    0x78(%rsp),%eax
  4025a1:	85 c0                	test   %eax,%eax
  4025a3:	0f 85 a7 00 00 00    	jne    402650 <Bitpack_run_tests+0xaa0>
  4025a9:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  4025ad:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4025b1:	85 db                	test   %ebx,%ebx
  4025b3:	0f 85 b1 05 00 00    	jne    402b6a <Bitpack_run_tests+0xfba>
  4025b9:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4025bd:	31 ed                	xor    %ebp,%ebp
  4025bf:	bb 05 00 00 00       	mov    $0x5,%ebx
  4025c4:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  4025cb:	00 00 
  4025cd:	40 0f 94 c5          	sete   %bpl
  4025d1:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4025d5:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  4025d9:	bf e0 4b 40 00       	mov    $0x404be0,%edi
  4025de:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4025e2:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4025e7:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  4025ee:	00 
  4025ef:	31 c0                	xor    %eax,%eax
  4025f1:	e8 42 16 00 00       	callq  403c38 <Fmt_string>
  4025f6:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4025fb:	89 ea                	mov    %ebp,%edx
  4025fd:	48 89 c7             	mov    %rax,%rdi
  402600:	89 de                	mov    %ebx,%esi
  402602:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402607:	ff d0                	callq  *%rax
  402609:	8b 44 24 78          	mov    0x78(%rsp),%eax
  40260d:	85 c0                	test   %eax,%eax
  40260f:	75 11                	jne    402622 <Bitpack_run_tests+0xa72>
  402611:	48 8b 05 d0 43 20 00 	mov    0x2043d0(%rip),%rax        # 6069e8 <Except_stack>
  402618:	48 8b 00             	mov    (%rax),%rax
  40261b:	48 89 05 c6 43 20 00 	mov    %rax,0x2043c6(%rip)        # 6069e8 <Except_stack>
  402622:	8b 44 24 78          	mov    0x78(%rsp),%eax
  402626:	83 f8 01             	cmp    $0x1,%eax
  402629:	0f 85 51 f7 ff ff    	jne    401d80 <Bitpack_run_tests+0x1d0>
  40262f:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402636:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  40263d:	00 
  40263e:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402645:	00 
  402646:	e8 95 f0 ff ff       	callq  4016e0 <Except_raise>
  40264b:	e9 30 f7 ff ff       	jmpq   401d80 <Bitpack_run_tests+0x1d0>
  402650:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
  402655:	c7 44 24 78 02 00 00 	movl   $0x2,0x78(%rsp)
  40265c:	00 
  40265d:	bb 05 00 00 00       	mov    $0x5,%ebx
  402662:	45 85 db             	test   %r11d,%r11d
  402665:	74 29                	je     402690 <Bitpack_run_tests+0xae0>
  402667:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40266c:	b3 06                	mov    $0x6,%bl
  40266e:	74 20                	je     402690 <Bitpack_run_tests+0xae0>
  402670:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402674:	85 c0                	test   %eax,%eax
  402676:	0f 84 15 06 00 00    	je     402c91 <Bitpack_run_tests+0x10e1>
  40267c:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402680:	03 44 24 0c          	add    0xc(%rsp),%eax
  402684:	83 f8 40             	cmp    $0x40,%eax
  402687:	0f 84 04 06 00 00    	je     402c91 <Bitpack_run_tests+0x10e1>
  40268d:	30 db                	xor    %bl,%bl
  40268f:	90                   	nop
  402690:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402694:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402698:	bf e0 4b 40 00       	mov    $0x404be0,%edi
  40269d:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4026a1:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4026a6:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  4026ad:	00 
  4026ae:	31 c0                	xor    %eax,%eax
  4026b0:	e8 83 15 00 00       	callq  403c38 <Fmt_string>
  4026b5:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4026ba:	31 d2                	xor    %edx,%edx
  4026bc:	e9 3c ff ff ff       	jmpq   4025fd <Bitpack_run_tests+0xa4d>
  4026c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4026c8:	8b 44 24 44          	mov    0x44(%rsp),%eax
  4026cc:	e9 8c f6 ff ff       	jmpq   401d5d <Bitpack_run_tests+0x1ad>
  4026d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4026d8:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4026dc:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4026e0:	be 40 00 00 00       	mov    $0x40,%esi
  4026e5:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  4026ea:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  4026ef:	31 ed                	xor    %ebp,%ebp
  4026f1:	29 c6                	sub    %eax,%esi
  4026f3:	44 01 f2             	add    %r14d,%edx
  4026f6:	44 29 f6             	sub    %r14d,%esi
  4026f9:	e8 52 f2 ff ff       	callq  401950 <Bitpack_getu>
  4026fe:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402702:	48 89 c3             	mov    %rax,%rbx
  402705:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402709:	be 40 00 00 00       	mov    $0x40,%esi
  40270e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402713:	29 c6                	sub    %eax,%esi
  402715:	44 01 f2             	add    %r14d,%edx
  402718:	44 29 f6             	sub    %r14d,%esi
  40271b:	e8 30 f2 ff ff       	callq  401950 <Bitpack_getu>
  402720:	48 39 c3             	cmp    %rax,%rbx
  402723:	bb 05 00 00 00       	mov    $0x5,%ebx
  402728:	40 0f 94 c5          	sete   %bpl
  40272c:	45 85 f6             	test   %r14d,%r14d
  40272f:	74 2f                	je     402760 <Bitpack_run_tests+0xbb0>
  402731:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402736:	b3 06                	mov    $0x6,%bl
  402738:	74 26                	je     402760 <Bitpack_run_tests+0xbb0>
  40273a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40273e:	85 c0                	test   %eax,%eax
  402740:	0f 84 93 05 00 00    	je     402cd9 <Bitpack_run_tests+0x1129>
  402746:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40274a:	03 44 24 0c          	add    0xc(%rsp),%eax
  40274e:	83 f8 40             	cmp    $0x40,%eax
  402751:	0f 84 82 05 00 00    	je     402cd9 <Bitpack_run_tests+0x1129>
  402757:	30 db                	xor    %bl,%bl
  402759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402760:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402764:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402768:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  40276e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402772:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402776:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  40277a:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  40277f:	41 29 f1             	sub    %esi,%r9d
  402782:	be 40 00 00 00       	mov    $0x40,%esi
  402787:	29 c6                	sub    %eax,%esi
  402789:	89 f0                	mov    %esi,%eax
  40278b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402790:	01 fa                	add    %edi,%edx
  402792:	29 f8                	sub    %edi,%eax
  402794:	01 f9                	add    %edi,%ecx
  402796:	89 14 24             	mov    %edx,(%rsp)
  402799:	41 29 f9             	sub    %edi,%r9d
  40279c:	89 c2                	mov    %eax,%edx
  40279e:	bf a0 4b 40 00       	mov    $0x404ba0,%edi
  4027a3:	31 c0                	xor    %eax,%eax
  4027a5:	e8 8e 14 00 00       	callq  403c38 <Fmt_string>
  4027aa:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4027af:	89 ea                	mov    %ebp,%edx
  4027b1:	e9 89 fd ff ff       	jmpq   40253f <Bitpack_run_tests+0x98f>
  4027b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4027bd:	00 00 00 
  4027c0:	8b 54 24 68          	mov    0x68(%rsp),%edx
  4027c4:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4027c8:	bf 00 4b 40 00       	mov    $0x404b00,%edi
  4027cd:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  4027d1:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4027d5:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  4027da:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  4027e1:	00 
  4027e2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4027e7:	4c 8b 8c d4 00 01 00 	mov    0x100(%rsp,%rdx,8),%r9
  4027ee:	00 
  4027ef:	89 da                	mov    %ebx,%edx
  4027f1:	48 89 04 24          	mov    %rax,(%rsp)
  4027f5:	31 c0                	xor    %eax,%eax
  4027f7:	e8 14 e4 ff ff       	callq  400c10 <printf@plt>
  4027fc:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402800:	31 f6                	xor    %esi,%esi
  402802:	85 db                	test   %ebx,%ebx
  402804:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402808:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  40280f:	00 
  402810:	0f 85 85 04 00 00    	jne    402c9b <Bitpack_run_tests+0x10eb>
  402816:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
  40281b:	bf 38 4b 40 00       	mov    $0x404b38,%edi
  402820:	31 c0                	xor    %eax,%eax
  402822:	e8 e9 e3 ff ff       	callq  400c10 <printf@plt>
  402827:	e9 76 fb ff ff       	jmpq   4023a2 <Bitpack_run_tests+0x7f2>
  40282c:	0f 1f 40 00          	nopl   0x0(%rax)
  402830:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402834:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402839:	31 d2                	xor    %edx,%edx
  40283b:	31 ed                	xor    %ebp,%ebp
  40283d:	e8 0e f1 ff ff       	callq  401950 <Bitpack_getu>
  402842:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402846:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40284b:	48 89 c3             	mov    %rax,%rbx
  40284e:	31 d2                	xor    %edx,%edx
  402850:	e8 fb f0 ff ff       	callq  401950 <Bitpack_getu>
  402855:	48 39 c3             	cmp    %rax,%rbx
  402858:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  40285c:	bb 05 00 00 00       	mov    $0x5,%ebx
  402861:	40 0f 94 c5          	sete   %bpl
  402865:	85 c0                	test   %eax,%eax
  402867:	74 2f                	je     402898 <Bitpack_run_tests+0xce8>
  402869:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40286e:	b3 06                	mov    $0x6,%bl
  402870:	74 26                	je     402898 <Bitpack_run_tests+0xce8>
  402872:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402876:	85 c0                	test   %eax,%eax
  402878:	0f 84 65 04 00 00    	je     402ce3 <Bitpack_run_tests+0x1133>
  40287e:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402882:	03 44 24 0c          	add    0xc(%rsp),%eax
  402886:	83 f8 40             	cmp    $0x40,%eax
  402889:	0f 84 54 04 00 00    	je     402ce3 <Bitpack_run_tests+0x1133>
  40288f:	30 db                	xor    %bl,%bl
  402891:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402898:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  40289d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  4028a2:	bf 68 4b 40 00       	mov    $0x404b68,%edi
  4028a7:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4028ab:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4028b0:	31 c0                	xor    %eax,%eax
  4028b2:	e8 81 13 00 00       	callq  403c38 <Fmt_string>
  4028b7:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4028bc:	89 ea                	mov    %ebp,%edx
  4028be:	e9 83 fb ff ff       	jmpq   402446 <Bitpack_run_tests+0x896>
  4028c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4028c8:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  4028cd:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4028d1:	31 ed                	xor    %ebp,%ebp
  4028d3:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  4028d8:	bb 05 00 00 00       	mov    $0x5,%ebx
  4028dd:	44 89 f6             	mov    %r14d,%esi
  4028e0:	e8 6b f0 ff ff       	callq  401950 <Bitpack_getu>
  4028e5:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  4028e9:	48 3b 84 d4 d0 00 00 	cmp    0xd0(%rsp,%rdx,8),%rax
  4028f0:	00 
  4028f1:	40 0f 94 c5          	sete   %bpl
  4028f5:	45 85 f6             	test   %r14d,%r14d
  4028f8:	74 2e                	je     402928 <Bitpack_run_tests+0xd78>
  4028fa:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4028ff:	b3 06                	mov    $0x6,%bl
  402901:	74 25                	je     402928 <Bitpack_run_tests+0xd78>
  402903:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402907:	85 c0                	test   %eax,%eax
  402909:	0f 84 c0 03 00 00    	je     402ccf <Bitpack_run_tests+0x111f>
  40290f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402913:	03 44 24 0c          	add    0xc(%rsp),%eax
  402917:	83 f8 40             	cmp    $0x40,%eax
  40291a:	0f 84 af 03 00 00    	je     402ccf <Bitpack_run_tests+0x111f>
  402920:	30 db                	xor    %bl,%bl
  402922:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402928:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  40292c:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402930:	bf 80 4c 40 00       	mov    $0x404c80,%edi
  402935:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402939:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  40293e:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  402945:	00 
  402946:	31 c0                	xor    %eax,%eax
  402948:	e8 eb 12 00 00       	callq  403c38 <Fmt_string>
  40294d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402952:	89 ea                	mov    %ebp,%edx
  402954:	e9 7b f9 ff ff       	jmpq   4022d4 <Bitpack_run_tests+0x724>
  402959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402960:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402964:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402968:	be 40 00 00 00       	mov    $0x40,%esi
  40296d:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402972:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402977:	31 ed                	xor    %ebp,%ebp
  402979:	29 c6                	sub    %eax,%esi
  40297b:	44 01 f2             	add    %r14d,%edx
  40297e:	44 29 f6             	sub    %r14d,%esi
  402981:	e8 ca ef ff ff       	callq  401950 <Bitpack_getu>
  402986:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40298a:	48 89 c3             	mov    %rax,%rbx
  40298d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402991:	be 40 00 00 00       	mov    $0x40,%esi
  402996:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40299b:	29 c6                	sub    %eax,%esi
  40299d:	44 01 f2             	add    %r14d,%edx
  4029a0:	44 29 f6             	sub    %r14d,%esi
  4029a3:	e8 a8 ef ff ff       	callq  401950 <Bitpack_getu>
  4029a8:	48 39 c3             	cmp    %rax,%rbx
  4029ab:	bb 05 00 00 00       	mov    $0x5,%ebx
  4029b0:	40 0f 94 c5          	sete   %bpl
  4029b4:	45 85 f6             	test   %r14d,%r14d
  4029b7:	74 2f                	je     4029e8 <Bitpack_run_tests+0xe38>
  4029b9:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4029be:	b3 06                	mov    $0x6,%bl
  4029c0:	74 26                	je     4029e8 <Bitpack_run_tests+0xe38>
  4029c2:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4029c6:	85 c0                	test   %eax,%eax
  4029c8:	0f 84 ed 02 00 00    	je     402cbb <Bitpack_run_tests+0x110b>
  4029ce:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4029d2:	03 44 24 0c          	add    0xc(%rsp),%eax
  4029d6:	83 f8 40             	cmp    $0x40,%eax
  4029d9:	0f 84 dc 02 00 00    	je     402cbb <Bitpack_run_tests+0x110b>
  4029df:	30 db                	xor    %bl,%bl
  4029e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4029e8:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4029ec:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4029f0:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  4029f6:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4029fa:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4029fe:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  402a02:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  402a07:	41 29 f1             	sub    %esi,%r9d
  402a0a:	be 40 00 00 00       	mov    $0x40,%esi
  402a0f:	29 c6                	sub    %eax,%esi
  402a11:	89 f0                	mov    %esi,%eax
  402a13:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402a18:	01 fa                	add    %edi,%edx
  402a1a:	29 f8                	sub    %edi,%eax
  402a1c:	01 f9                	add    %edi,%ecx
  402a1e:	89 14 24             	mov    %edx,(%rsp)
  402a21:	41 29 f9             	sub    %edi,%r9d
  402a24:	89 c2                	mov    %eax,%edx
  402a26:	bf a0 4b 40 00       	mov    $0x404ba0,%edi
  402a2b:	31 c0                	xor    %eax,%eax
  402a2d:	e8 06 12 00 00       	callq  403c38 <Fmt_string>
  402a32:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402a37:	89 ea                	mov    %ebp,%edx
  402a39:	e9 b1 f7 ff ff       	jmpq   4021ef <Bitpack_run_tests+0x63f>
  402a3e:	66 90                	xchg   %ax,%ax
  402a40:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402a44:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402a49:	31 d2                	xor    %edx,%edx
  402a4b:	31 ed                	xor    %ebp,%ebp
  402a4d:	e8 fe ee ff ff       	callq  401950 <Bitpack_getu>
  402a52:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402a56:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402a5b:	31 d2                	xor    %edx,%edx
  402a5d:	48 89 c3             	mov    %rax,%rbx
  402a60:	e8 eb ee ff ff       	callq  401950 <Bitpack_getu>
  402a65:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
  402a6a:	48 39 c3             	cmp    %rax,%rbx
  402a6d:	bb 05 00 00 00       	mov    $0x5,%ebx
  402a72:	40 0f 94 c5          	sete   %bpl
  402a76:	45 85 c9             	test   %r9d,%r9d
  402a79:	74 2d                	je     402aa8 <Bitpack_run_tests+0xef8>
  402a7b:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402a80:	b3 06                	mov    $0x6,%bl
  402a82:	74 24                	je     402aa8 <Bitpack_run_tests+0xef8>
  402a84:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402a88:	85 c0                	test   %eax,%eax
  402a8a:	0f 84 35 02 00 00    	je     402cc5 <Bitpack_run_tests+0x1115>
  402a90:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402a94:	03 44 24 0c          	add    0xc(%rsp),%eax
  402a98:	83 f8 40             	cmp    $0x40,%eax
  402a9b:	0f 84 24 02 00 00    	je     402cc5 <Bitpack_run_tests+0x1115>
  402aa1:	30 db                	xor    %bl,%bl
  402aa3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402aa8:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402aad:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  402ab2:	bf 68 4b 40 00       	mov    $0x404b68,%edi
  402ab7:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402abb:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402ac0:	31 c0                	xor    %eax,%eax
  402ac2:	e8 71 11 00 00       	callq  403c38 <Fmt_string>
  402ac7:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402acc:	89 ea                	mov    %ebp,%edx
  402ace:	e9 13 f6 ff ff       	jmpq   4020e6 <Bitpack_run_tests+0x536>
  402ad3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402ad8:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  402adc:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402ae0:	bf 48 4c 40 00       	mov    $0x404c48,%edi
  402ae5:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402ae9:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  402aee:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  402af5:	00 
  402af6:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  402afb:	4c 8b 8c d4 d0 00 00 	mov    0xd0(%rsp,%rdx,8),%r9
  402b02:	00 
  402b03:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402b07:	48 89 04 24          	mov    %rax,(%rsp)
  402b0b:	31 c0                	xor    %eax,%eax
  402b0d:	e8 fe e0 ff ff       	callq  400c10 <printf@plt>
  402b12:	e9 29 f5 ff ff       	jmpq   402040 <Bitpack_run_tests+0x490>
  402b17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402b1e:	00 00 
  402b20:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b25:	e9 76 f6 ff ff       	jmpq   4021a0 <Bitpack_run_tests+0x5f0>
  402b2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402b30:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b35:	e9 6e f7 ff ff       	jmpq   4022a8 <Bitpack_run_tests+0x6f8>
  402b3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402b40:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b45:	e9 a6 f9 ff ff       	jmpq   4024f0 <Bitpack_run_tests+0x940>
  402b4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402b50:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b55:	e9 c6 f8 ff ff       	jmpq   402420 <Bitpack_run_tests+0x870>
  402b5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402b60:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b65:	e9 56 f5 ff ff       	jmpq   4020c0 <Bitpack_run_tests+0x510>
  402b6a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402b6f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402b74:	31 ed                	xor    %ebp,%ebp
  402b76:	bb 06 00 00 00       	mov    $0x6,%ebx
  402b7b:	44 89 f6             	mov    %r14d,%esi
  402b7e:	e8 9d ec ff ff       	callq  401820 <Bitpack_gets.part.0>
  402b83:	8b 54 24 68          	mov    0x68(%rsp),%edx
  402b87:	48 3b 84 d4 00 01 00 	cmp    0x100(%rsp,%rdx,8),%rax
  402b8e:	00 
  402b8f:	40 0f 94 c5          	sete   %bpl
  402b93:	41 83 fe 40          	cmp    $0x40,%r14d
  402b97:	0f 84 34 fa ff ff    	je     4025d1 <Bitpack_run_tests+0xa21>
  402b9d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402ba1:	85 c0                	test   %eax,%eax
  402ba3:	0f 84 de 00 00 00    	je     402c87 <Bitpack_run_tests+0x10d7>
  402ba9:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402bad:	03 44 24 0c          	add    0xc(%rsp),%eax
  402bb1:	83 f8 40             	cmp    $0x40,%eax
  402bb4:	0f 84 cd 00 00 00    	je     402c87 <Bitpack_run_tests+0x10d7>
  402bba:	30 db                	xor    %bl,%bl
  402bbc:	e9 10 fa ff ff       	jmpq   4025d1 <Bitpack_run_tests+0xa21>
  402bc1:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402bc8:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402bcf:	00 
  402bd0:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402bd7:	00 
  402bd8:	e8 03 eb ff ff       	callq  4016e0 <Except_raise>
  402bdd:	e9 8f f9 ff ff       	jmpq   402571 <Bitpack_run_tests+0x9c1>
  402be2:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402be9:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402bf0:	00 
  402bf1:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402bf8:	00 
  402bf9:	e8 e2 ea ff ff       	callq  4016e0 <Except_raise>
  402bfe:	e9 0f f4 ff ff       	jmpq   402012 <Bitpack_run_tests+0x462>
  402c03:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402c0a:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402c11:	00 
  402c12:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402c19:	00 
  402c1a:	e8 c1 ea ff ff       	callq  4016e0 <Except_raise>
  402c1f:	e9 54 f8 ff ff       	jmpq   402478 <Bitpack_run_tests+0x8c8>
  402c24:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402c2b:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402c32:	00 
  402c33:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402c3a:	00 
  402c3b:	e8 a0 ea ff ff       	callq  4016e0 <Except_raise>
  402c40:	e9 2f f7 ff ff       	jmpq   402374 <Bitpack_run_tests+0x7c4>
  402c45:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402c4c:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402c53:	00 
  402c54:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402c5b:	00 
  402c5c:	e8 7f ea ff ff       	callq  4016e0 <Except_raise>
  402c61:	e9 b8 f4 ff ff       	jmpq   40211e <Bitpack_run_tests+0x56e>
  402c66:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402c6d:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402c74:	00 
  402c75:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402c7c:	00 
  402c7d:	e8 5e ea ff ff       	callq  4016e0 <Except_raise>
  402c82:	e9 a0 f5 ff ff       	jmpq   402227 <Bitpack_run_tests+0x677>
  402c87:	bb 04 00 00 00       	mov    $0x4,%ebx
  402c8c:	e9 40 f9 ff ff       	jmpq   4025d1 <Bitpack_run_tests+0xa21>
  402c91:	bb 04 00 00 00       	mov    $0x4,%ebx
  402c96:	e9 f5 f9 ff ff       	jmpq   402690 <Bitpack_run_tests+0xae0>
  402c9b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402c9f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402ca4:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  402ca9:	e8 72 eb ff ff       	callq  401820 <Bitpack_gets.part.0>
  402cae:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
  402cb3:	48 89 c6             	mov    %rax,%rsi
  402cb6:	e9 5b fb ff ff       	jmpq   402816 <Bitpack_run_tests+0xc66>
  402cbb:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cc0:	e9 23 fd ff ff       	jmpq   4029e8 <Bitpack_run_tests+0xe38>
  402cc5:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cca:	e9 d9 fd ff ff       	jmpq   402aa8 <Bitpack_run_tests+0xef8>
  402ccf:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cd4:	e9 4f fc ff ff       	jmpq   402928 <Bitpack_run_tests+0xd78>
  402cd9:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cde:	e9 7d fa ff ff       	jmpq   402760 <Bitpack_run_tests+0xbb0>
  402ce3:	bb 04 00 00 00       	mov    $0x4,%ebx
  402ce8:	e9 ab fb ff ff       	jmpq   402898 <Bitpack_run_tests+0xce8>
  402ced:	0f 1f 00             	nopl   (%rax)

0000000000402cf0 <cvt_s>:
  402cf0:	55                   	push   %rbp
  402cf1:	48 89 e5             	mov    %rsp,%rbp
  402cf4:	53                   	push   %rbx
  402cf5:	48 83 ec 58          	sub    $0x58,%rsp
  402cf9:	89 7d dc             	mov    %edi,-0x24(%rbp)
  402cfc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  402d00:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  402d04:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  402d08:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  402d0c:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  402d10:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  402d14:	8b 10                	mov    (%rax),%edx
  402d16:	83 fa 30             	cmp    $0x30,%edx
  402d19:	73 15                	jae    402d30 <cvt_s+0x40>
  402d1b:	48 8b 48 10          	mov    0x10(%rax),%rcx
  402d1f:	8b 10                	mov    (%rax),%edx
  402d21:	89 d2                	mov    %edx,%edx
  402d23:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  402d27:	8b 08                	mov    (%rax),%ecx
  402d29:	83 c1 08             	add    $0x8,%ecx
  402d2c:	89 08                	mov    %ecx,(%rax)
  402d2e:	eb 0f                	jmp    402d3f <cvt_s+0x4f>
  402d30:	48 8b 48 08          	mov    0x8(%rax),%rcx
  402d34:	48 89 ca             	mov    %rcx,%rdx
  402d37:	48 83 c1 08          	add    $0x8,%rcx
  402d3b:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402d3f:	48 89 d0             	mov    %rdx,%rax
  402d42:	48 8b 00             	mov    (%rax),%rax
  402d45:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  402d49:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  402d4e:	75 1b                	jne    402d6b <cvt_s+0x7b>
  402d50:	ba 1b 00 00 00       	mov    $0x1b,%edx
  402d55:	48 8d 35 4c 1f 00 00 	lea    0x1f4c(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  402d5c:	48 8d 05 45 30 20 00 	lea    0x203045(%rip),%rax        # 605da8 <Assert_Failed>
  402d63:	48 89 c7             	mov    %rax,%rdi
  402d66:	e8 75 e9 ff ff       	callq  4016e0 <Except_raise>
  402d6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d6f:	48 89 c7             	mov    %rax,%rdi
  402d72:	e8 79 de ff ff       	callq  400bf0 <strlen@plt>
  402d77:	89 c3                	mov    %eax,%ebx
  402d79:	44 8b 45 b4          	mov    -0x4c(%rbp),%r8d
  402d7d:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  402d81:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  402d85:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  402d89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d8d:	8b 75 10             	mov    0x10(%rbp),%esi
  402d90:	89 34 24             	mov    %esi,(%rsp)
  402d93:	45 89 c1             	mov    %r8d,%r9d
  402d96:	49 89 f8             	mov    %rdi,%r8
  402d99:	89 de                	mov    %ebx,%esi
  402d9b:	48 89 c7             	mov    %rax,%rdi
  402d9e:	e8 d2 08 00 00       	callq  403675 <Fmt_puts>
  402da3:	48 83 c4 58          	add    $0x58,%rsp
  402da7:	5b                   	pop    %rbx
  402da8:	c9                   	leaveq 
  402da9:	c3                   	retq   

0000000000402daa <cvt_d>:
  402daa:	55                   	push   %rbp
  402dab:	48 89 e5             	mov    %rsp,%rbp
  402dae:	53                   	push   %rbx
  402daf:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  402db6:	89 7d ac             	mov    %edi,-0x54(%rbp)
  402db9:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  402dbd:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  402dc1:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  402dc5:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  402dc9:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  402dcd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  402dd1:	8b 10                	mov    (%rax),%edx
  402dd3:	83 fa 30             	cmp    $0x30,%edx
  402dd6:	73 15                	jae    402ded <cvt_d+0x43>
  402dd8:	48 8b 48 10          	mov    0x10(%rax),%rcx
  402ddc:	8b 10                	mov    (%rax),%edx
  402dde:	89 d2                	mov    %edx,%edx
  402de0:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  402de4:	8b 08                	mov    (%rax),%ecx
  402de6:	83 c1 08             	add    $0x8,%ecx
  402de9:	89 08                	mov    %ecx,(%rax)
  402deb:	eb 0f                	jmp    402dfc <cvt_d+0x52>
  402ded:	48 8b 48 08          	mov    0x8(%rax),%rcx
  402df1:	48 89 ca             	mov    %rcx,%rdx
  402df4:	48 83 c1 08          	add    $0x8,%rcx
  402df8:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402dfc:	48 89 d0             	mov    %rdx,%rax
  402dff:	8b 00                	mov    (%rax),%eax
  402e01:	89 45 dc             	mov    %eax,-0x24(%rbp)
  402e04:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  402e08:	48 83 c0 2b          	add    $0x2b,%rax
  402e0c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  402e10:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  402e17:	75 09                	jne    402e22 <cvt_d+0x78>
  402e19:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  402e20:	eb 16                	jmp    402e38 <cvt_d+0x8e>
  402e22:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  402e26:	79 0a                	jns    402e32 <cvt_d+0x88>
  402e28:	8b 45 dc             	mov    -0x24(%rbp),%eax
  402e2b:	f7 d8                	neg    %eax
  402e2d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402e30:	eb 06                	jmp    402e38 <cvt_d+0x8e>
  402e32:	8b 45 dc             	mov    -0x24(%rbp),%eax
  402e35:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402e38:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  402e3d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  402e40:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  402e45:	89 c8                	mov    %ecx,%eax
  402e47:	f7 e2                	mul    %edx
  402e49:	c1 ea 03             	shr    $0x3,%edx
  402e4c:	89 d0                	mov    %edx,%eax
  402e4e:	c1 e0 02             	shl    $0x2,%eax
  402e51:	01 d0                	add    %edx,%eax
  402e53:	01 c0                	add    %eax,%eax
  402e55:	89 ca                	mov    %ecx,%edx
  402e57:	29 c2                	sub    %eax,%edx
  402e59:	89 d0                	mov    %edx,%eax
  402e5b:	83 c0 30             	add    $0x30,%eax
  402e5e:	89 c2                	mov    %eax,%edx
  402e60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402e64:	88 10                	mov    %dl,(%rax)
  402e66:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  402e69:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  402e6f:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  402e74:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  402e7a:	f7 e2                	mul    %edx
  402e7c:	89 d0                	mov    %edx,%eax
  402e7e:	c1 e8 03             	shr    $0x3,%eax
  402e81:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402e84:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  402e88:	75 ae                	jne    402e38 <cvt_d+0x8e>
  402e8a:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  402e8e:	79 0c                	jns    402e9c <cvt_d+0xf2>
  402e90:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  402e95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402e99:	c6 00 2d             	movb   $0x2d,(%rax)
  402e9c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  402ea0:	48 83 c0 2b          	add    $0x2b,%rax
  402ea4:	89 c2                	mov    %eax,%edx
  402ea6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402eaa:	89 d1                	mov    %edx,%ecx
  402eac:	29 c1                	sub    %eax,%ecx
  402eae:	89 c8                	mov    %ecx,%eax
  402eb0:	89 c3                	mov    %eax,%ebx
  402eb2:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  402eb6:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  402eba:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  402ebe:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  402ec2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402ec6:	8b 75 10             	mov    0x10(%rbp),%esi
  402ec9:	89 34 24             	mov    %esi,(%rsp)
  402ecc:	45 89 c1             	mov    %r8d,%r9d
  402ecf:	49 89 f8             	mov    %rdi,%r8
  402ed2:	89 de                	mov    %ebx,%esi
  402ed4:	48 89 c7             	mov    %rax,%rdi
  402ed7:	e8 cd 14 00 00       	callq  4043a9 <Fmt_putd>
  402edc:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  402ee3:	5b                   	pop    %rbx
  402ee4:	c9                   	leaveq 
  402ee5:	c3                   	retq   

0000000000402ee6 <cvt_u>:
  402ee6:	55                   	push   %rbp
  402ee7:	48 89 e5             	mov    %rsp,%rbp
  402eea:	53                   	push   %rbx
  402eeb:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  402ef2:	89 7d ac             	mov    %edi,-0x54(%rbp)
  402ef5:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  402ef9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  402efd:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  402f01:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  402f05:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  402f09:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  402f0d:	8b 10                	mov    (%rax),%edx
  402f0f:	83 fa 30             	cmp    $0x30,%edx
  402f12:	73 15                	jae    402f29 <cvt_u+0x43>
  402f14:	48 8b 48 10          	mov    0x10(%rax),%rcx
  402f18:	8b 10                	mov    (%rax),%edx
  402f1a:	89 d2                	mov    %edx,%edx
  402f1c:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  402f20:	8b 08                	mov    (%rax),%ecx
  402f22:	83 c1 08             	add    $0x8,%ecx
  402f25:	89 08                	mov    %ecx,(%rax)
  402f27:	eb 0f                	jmp    402f38 <cvt_u+0x52>
  402f29:	48 8b 48 08          	mov    0x8(%rax),%rcx
  402f2d:	48 89 ca             	mov    %rcx,%rdx
  402f30:	48 83 c1 08          	add    $0x8,%rcx
  402f34:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402f38:	48 89 d0             	mov    %rdx,%rax
  402f3b:	8b 00                	mov    (%rax),%eax
  402f3d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402f40:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  402f44:	48 83 c0 2b          	add    $0x2b,%rax
  402f48:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  402f4c:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  402f51:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  402f54:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  402f59:	89 c8                	mov    %ecx,%eax
  402f5b:	f7 e2                	mul    %edx
  402f5d:	c1 ea 03             	shr    $0x3,%edx
  402f60:	89 d0                	mov    %edx,%eax
  402f62:	c1 e0 02             	shl    $0x2,%eax
  402f65:	01 d0                	add    %edx,%eax
  402f67:	01 c0                	add    %eax,%eax
  402f69:	89 ca                	mov    %ecx,%edx
  402f6b:	29 c2                	sub    %eax,%edx
  402f6d:	89 d0                	mov    %edx,%eax
  402f6f:	83 c0 30             	add    $0x30,%eax
  402f72:	89 c2                	mov    %eax,%edx
  402f74:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402f78:	88 10                	mov    %dl,(%rax)
  402f7a:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  402f7d:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  402f83:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  402f88:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  402f8e:	f7 e2                	mul    %edx
  402f90:	89 d0                	mov    %edx,%eax
  402f92:	c1 e8 03             	shr    $0x3,%eax
  402f95:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402f98:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  402f9c:	75 ae                	jne    402f4c <cvt_u+0x66>
  402f9e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  402fa2:	48 83 c0 2b          	add    $0x2b,%rax
  402fa6:	89 c2                	mov    %eax,%edx
  402fa8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402fac:	89 d1                	mov    %edx,%ecx
  402fae:	29 c1                	sub    %eax,%ecx
  402fb0:	89 c8                	mov    %ecx,%eax
  402fb2:	89 c3                	mov    %eax,%ebx
  402fb4:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  402fb8:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  402fbc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  402fc0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  402fc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402fc8:	8b 75 10             	mov    0x10(%rbp),%esi
  402fcb:	89 34 24             	mov    %esi,(%rsp)
  402fce:	45 89 c1             	mov    %r8d,%r9d
  402fd1:	49 89 f8             	mov    %rdi,%r8
  402fd4:	89 de                	mov    %ebx,%esi
  402fd6:	48 89 c7             	mov    %rax,%rdi
  402fd9:	e8 cb 13 00 00       	callq  4043a9 <Fmt_putd>
  402fde:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  402fe5:	5b                   	pop    %rbx
  402fe6:	c9                   	leaveq 
  402fe7:	c3                   	retq   

0000000000402fe8 <cvt_o>:
  402fe8:	55                   	push   %rbp
  402fe9:	48 89 e5             	mov    %rsp,%rbp
  402fec:	53                   	push   %rbx
  402fed:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  402ff4:	89 7d ac             	mov    %edi,-0x54(%rbp)
  402ff7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  402ffb:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  402fff:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403003:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403007:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  40300b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40300f:	8b 10                	mov    (%rax),%edx
  403011:	83 fa 30             	cmp    $0x30,%edx
  403014:	73 15                	jae    40302b <cvt_o+0x43>
  403016:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40301a:	8b 10                	mov    (%rax),%edx
  40301c:	89 d2                	mov    %edx,%edx
  40301e:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403022:	8b 08                	mov    (%rax),%ecx
  403024:	83 c1 08             	add    $0x8,%ecx
  403027:	89 08                	mov    %ecx,(%rax)
  403029:	eb 0f                	jmp    40303a <cvt_o+0x52>
  40302b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40302f:	48 89 ca             	mov    %rcx,%rdx
  403032:	48 83 c1 08          	add    $0x8,%rcx
  403036:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40303a:	48 89 d0             	mov    %rdx,%rax
  40303d:	8b 00                	mov    (%rax),%eax
  40303f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403042:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403046:	48 83 c0 2b          	add    $0x2b,%rax
  40304a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40304e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403053:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403056:	83 e0 07             	and    $0x7,%eax
  403059:	83 c0 30             	add    $0x30,%eax
  40305c:	89 c2                	mov    %eax,%edx
  40305e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403062:	88 10                	mov    %dl,(%rax)
  403064:	c1 6d ec 03          	shrl   $0x3,-0x14(%rbp)
  403068:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  40306c:	75 e0                	jne    40304e <cvt_o+0x66>
  40306e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403072:	48 83 c0 2b          	add    $0x2b,%rax
  403076:	89 c2                	mov    %eax,%edx
  403078:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40307c:	89 d1                	mov    %edx,%ecx
  40307e:	29 c1                	sub    %eax,%ecx
  403080:	89 c8                	mov    %ecx,%eax
  403082:	89 c3                	mov    %eax,%ebx
  403084:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403088:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  40308c:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  403090:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  403094:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403098:	8b 75 10             	mov    0x10(%rbp),%esi
  40309b:	89 34 24             	mov    %esi,(%rsp)
  40309e:	45 89 c1             	mov    %r8d,%r9d
  4030a1:	49 89 f8             	mov    %rdi,%r8
  4030a4:	89 de                	mov    %ebx,%esi
  4030a6:	48 89 c7             	mov    %rax,%rdi
  4030a9:	e8 fb 12 00 00       	callq  4043a9 <Fmt_putd>
  4030ae:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  4030b5:	5b                   	pop    %rbx
  4030b6:	c9                   	leaveq 
  4030b7:	c3                   	retq   

00000000004030b8 <cvt_x>:
  4030b8:	55                   	push   %rbp
  4030b9:	48 89 e5             	mov    %rsp,%rbp
  4030bc:	53                   	push   %rbx
  4030bd:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  4030c4:	89 7d ac             	mov    %edi,-0x54(%rbp)
  4030c7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4030cb:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4030cf:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  4030d3:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  4030d7:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  4030db:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4030df:	8b 10                	mov    (%rax),%edx
  4030e1:	83 fa 30             	cmp    $0x30,%edx
  4030e4:	73 15                	jae    4030fb <cvt_x+0x43>
  4030e6:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4030ea:	8b 10                	mov    (%rax),%edx
  4030ec:	89 d2                	mov    %edx,%edx
  4030ee:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4030f2:	8b 08                	mov    (%rax),%ecx
  4030f4:	83 c1 08             	add    $0x8,%ecx
  4030f7:	89 08                	mov    %ecx,(%rax)
  4030f9:	eb 0f                	jmp    40310a <cvt_x+0x52>
  4030fb:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4030ff:	48 89 ca             	mov    %rcx,%rdx
  403102:	48 83 c1 08          	add    $0x8,%rcx
  403106:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40310a:	48 89 d0             	mov    %rdx,%rax
  40310d:	8b 00                	mov    (%rax),%eax
  40310f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403112:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403116:	48 83 c0 2b          	add    $0x2b,%rax
  40311a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40311e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403123:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403126:	83 e0 0f             	and    $0xf,%eax
  403129:	89 c2                	mov    %eax,%edx
  40312b:	48 8d 05 80 1b 00 00 	lea    0x1b80(%rip),%rax        # 404cb2 <_IO_stdin_used+0x35a>
  403132:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  403136:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40313a:	88 10                	mov    %dl,(%rax)
  40313c:	c1 6d ec 04          	shrl   $0x4,-0x14(%rbp)
  403140:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  403144:	75 d8                	jne    40311e <cvt_x+0x66>
  403146:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40314a:	48 83 c0 2b          	add    $0x2b,%rax
  40314e:	89 c2                	mov    %eax,%edx
  403150:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403154:	89 d1                	mov    %edx,%ecx
  403156:	29 c1                	sub    %eax,%ecx
  403158:	89 c8                	mov    %ecx,%eax
  40315a:	89 c3                	mov    %eax,%ebx
  40315c:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403160:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403164:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  403168:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40316c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403170:	8b 75 10             	mov    0x10(%rbp),%esi
  403173:	89 34 24             	mov    %esi,(%rsp)
  403176:	45 89 c1             	mov    %r8d,%r9d
  403179:	49 89 f8             	mov    %rdi,%r8
  40317c:	89 de                	mov    %ebx,%esi
  40317e:	48 89 c7             	mov    %rax,%rdi
  403181:	e8 23 12 00 00       	callq  4043a9 <Fmt_putd>
  403186:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  40318d:	5b                   	pop    %rbx
  40318e:	c9                   	leaveq 
  40318f:	c3                   	retq   

0000000000403190 <cvt_p>:
  403190:	55                   	push   %rbp
  403191:	48 89 e5             	mov    %rsp,%rbp
  403194:	53                   	push   %rbx
  403195:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  40319c:	89 7d ac             	mov    %edi,-0x54(%rbp)
  40319f:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4031a3:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4031a7:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  4031ab:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  4031af:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  4031b3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4031b7:	8b 10                	mov    (%rax),%edx
  4031b9:	83 fa 30             	cmp    $0x30,%edx
  4031bc:	73 15                	jae    4031d3 <cvt_p+0x43>
  4031be:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4031c2:	8b 10                	mov    (%rax),%edx
  4031c4:	89 d2                	mov    %edx,%edx
  4031c6:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4031ca:	8b 08                	mov    (%rax),%ecx
  4031cc:	83 c1 08             	add    $0x8,%ecx
  4031cf:	89 08                	mov    %ecx,(%rax)
  4031d1:	eb 0f                	jmp    4031e2 <cvt_p+0x52>
  4031d3:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4031d7:	48 89 ca             	mov    %rcx,%rdx
  4031da:	48 83 c1 08          	add    $0x8,%rcx
  4031de:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4031e2:	48 89 d0             	mov    %rdx,%rax
  4031e5:	48 8b 00             	mov    (%rax),%rax
  4031e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4031ec:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4031f0:	48 83 c0 2b          	add    $0x2b,%rax
  4031f4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4031f8:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%rbp)
  4031ff:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403204:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403208:	48 89 c2             	mov    %rax,%rdx
  40320b:	83 e2 0f             	and    $0xf,%edx
  40320e:	48 8d 05 9d 1a 00 00 	lea    0x1a9d(%rip),%rax        # 404cb2 <_IO_stdin_used+0x35a>
  403215:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  403219:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40321d:	88 10                	mov    %dl,(%rax)
  40321f:	48 c1 6d e8 04       	shrq   $0x4,-0x18(%rbp)
  403224:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403229:	75 d4                	jne    4031ff <cvt_p+0x6f>
  40322b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40322f:	48 83 c0 2b          	add    $0x2b,%rax
  403233:	89 c2                	mov    %eax,%edx
  403235:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403239:	89 d1                	mov    %edx,%ecx
  40323b:	29 c1                	sub    %eax,%ecx
  40323d:	89 c8                	mov    %ecx,%eax
  40323f:	89 c3                	mov    %eax,%ebx
  403241:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403245:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403249:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  40324d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  403251:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403255:	8b 75 dc             	mov    -0x24(%rbp),%esi
  403258:	89 34 24             	mov    %esi,(%rsp)
  40325b:	45 89 c1             	mov    %r8d,%r9d
  40325e:	49 89 f8             	mov    %rdi,%r8
  403261:	89 de                	mov    %ebx,%esi
  403263:	48 89 c7             	mov    %rax,%rdi
  403266:	e8 3e 11 00 00       	callq  4043a9 <Fmt_putd>
  40326b:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  403272:	5b                   	pop    %rbx
  403273:	c9                   	leaveq 
  403274:	c3                   	retq   

0000000000403275 <cvt_c>:
  403275:	55                   	push   %rbp
  403276:	48 89 e5             	mov    %rsp,%rbp
  403279:	48 83 ec 40          	sub    $0x40,%rsp
  40327d:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403280:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403284:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  403288:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40328c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  403290:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  403294:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  40329b:	75 07                	jne    4032a4 <cvt_c+0x2f>
  40329d:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  4032a4:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  4032a8:	79 0e                	jns    4032b8 <cvt_c+0x43>
  4032aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4032ae:	48 83 c0 2d          	add    $0x2d,%rax
  4032b2:	c6 00 01             	movb   $0x1,(%rax)
  4032b5:	f7 5d c4             	negl   -0x3c(%rbp)
  4032b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4032bc:	48 83 c0 2d          	add    $0x2d,%rax
  4032c0:	0f b6 00             	movzbl (%rax),%eax
  4032c3:	84 c0                	test   %al,%al
  4032c5:	75 2c                	jne    4032f3 <cvt_c+0x7e>
  4032c7:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4032ca:	83 e8 01             	sub    $0x1,%eax
  4032cd:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4032d0:	eb 12                	jmp    4032e4 <cvt_c+0x6f>
  4032d2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4032d6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4032da:	48 89 c6             	mov    %rax,%rsi
  4032dd:	bf 20 00 00 00       	mov    $0x20,%edi
  4032e2:	ff d2                	callq  *%rdx
  4032e4:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4032e8:	0f 9f c0             	setg   %al
  4032eb:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  4032ef:	84 c0                	test   %al,%al
  4032f1:	75 df                	jne    4032d2 <cvt_c+0x5d>
  4032f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4032f7:	8b 10                	mov    (%rax),%edx
  4032f9:	83 fa 30             	cmp    $0x30,%edx
  4032fc:	73 15                	jae    403313 <cvt_c+0x9e>
  4032fe:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403302:	8b 10                	mov    (%rax),%edx
  403304:	89 d2                	mov    %edx,%edx
  403306:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  40330a:	8b 08                	mov    (%rax),%ecx
  40330c:	83 c1 08             	add    $0x8,%ecx
  40330f:	89 08                	mov    %ecx,(%rax)
  403311:	eb 0f                	jmp    403322 <cvt_c+0xad>
  403313:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403317:	48 89 ca             	mov    %rcx,%rdx
  40331a:	48 83 c1 08          	add    $0x8,%rcx
  40331e:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403322:	48 89 d0             	mov    %rdx,%rax
  403325:	8b 00                	mov    (%rax),%eax
  403327:	0f b6 c0             	movzbl %al,%eax
  40332a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40332e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  403332:	48 89 d6             	mov    %rdx,%rsi
  403335:	89 c7                	mov    %eax,%edi
  403337:	ff d1                	callq  *%rcx
  403339:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40333d:	48 83 c0 2d          	add    $0x2d,%rax
  403341:	0f b6 00             	movzbl (%rax),%eax
  403344:	84 c0                	test   %al,%al
  403346:	74 2c                	je     403374 <cvt_c+0xff>
  403348:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40334b:	83 e8 01             	sub    $0x1,%eax
  40334e:	89 45 f8             	mov    %eax,-0x8(%rbp)
  403351:	eb 12                	jmp    403365 <cvt_c+0xf0>
  403353:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403357:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40335b:	48 89 c6             	mov    %rax,%rsi
  40335e:	bf 20 00 00 00       	mov    $0x20,%edi
  403363:	ff d2                	callq  *%rdx
  403365:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  403369:	0f 9f c0             	setg   %al
  40336c:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
  403370:	84 c0                	test   %al,%al
  403372:	75 df                	jne    403353 <cvt_c+0xde>
  403374:	c9                   	leaveq 
  403375:	c3                   	retq   

0000000000403376 <cvt_f>:
  403376:	55                   	push   %rbp
  403377:	48 89 e5             	mov    %rsp,%rbp
  40337a:	53                   	push   %rbx
  40337b:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
  403382:	89 bd 4c fe ff ff    	mov    %edi,-0x1b4(%rbp)
  403388:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
  40338f:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  403396:	48 89 8d 30 fe ff ff 	mov    %rcx,-0x1d0(%rbp)
  40339d:	4c 89 85 28 fe ff ff 	mov    %r8,-0x1d8(%rbp)
  4033a4:	44 89 8d 24 fe ff ff 	mov    %r9d,-0x1dc(%rbp)
  4033ab:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4033af:	79 07                	jns    4033b8 <cvt_f+0x42>
  4033b1:	c7 45 10 06 00 00 00 	movl   $0x6,0x10(%rbp)
  4033b8:	83 bd 4c fe ff ff 67 	cmpl   $0x67,-0x1b4(%rbp)
  4033bf:	75 0d                	jne    4033ce <cvt_f+0x58>
  4033c1:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4033c5:	75 07                	jne    4033ce <cvt_f+0x58>
  4033c7:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  4033ce:	83 7d 10 63          	cmpl   $0x63,0x10(%rbp)
  4033d2:	7e 1b                	jle    4033ef <cvt_f+0x79>
  4033d4:	ba 7e 00 00 00       	mov    $0x7e,%edx
  4033d9:	48 8d 35 c8 18 00 00 	lea    0x18c8(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  4033e0:	48 8d 05 c1 29 20 00 	lea    0x2029c1(%rip),%rax        # 605da8 <Assert_Failed>
  4033e7:	48 89 c7             	mov    %rax,%rdi
  4033ea:	e8 f1 e2 ff ff       	callq  4016e0 <Except_raise>
  4033ef:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
  4033f5:	88 05 16 2d 20 00    	mov    %al,0x202d16(%rip)        # 606111 <fmt.2280+0x4>
  4033fb:	8b 4d 10             	mov    0x10(%rbp),%ecx
  4033fe:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403403:	89 c8                	mov    %ecx,%eax
  403405:	f7 ea                	imul   %edx
  403407:	c1 fa 02             	sar    $0x2,%edx
  40340a:	89 c8                	mov    %ecx,%eax
  40340c:	c1 f8 1f             	sar    $0x1f,%eax
  40340f:	29 c2                	sub    %eax,%edx
  403411:	89 d0                	mov    %edx,%eax
  403413:	c1 e0 02             	shl    $0x2,%eax
  403416:	01 d0                	add    %edx,%eax
  403418:	01 c0                	add    %eax,%eax
  40341a:	89 ca                	mov    %ecx,%edx
  40341c:	29 c2                	sub    %eax,%edx
  40341e:	89 d0                	mov    %edx,%eax
  403420:	83 c0 30             	add    $0x30,%eax
  403423:	88 05 e7 2c 20 00    	mov    %al,0x202ce7(%rip)        # 606110 <fmt.2280+0x3>
  403429:	8b 4d 10             	mov    0x10(%rbp),%ecx
  40342c:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403431:	89 c8                	mov    %ecx,%eax
  403433:	f7 ea                	imul   %edx
  403435:	c1 fa 02             	sar    $0x2,%edx
  403438:	89 c8                	mov    %ecx,%eax
  40343a:	c1 f8 1f             	sar    $0x1f,%eax
  40343d:	89 d1                	mov    %edx,%ecx
  40343f:	29 c1                	sub    %eax,%ecx
  403441:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403446:	89 c8                	mov    %ecx,%eax
  403448:	f7 ea                	imul   %edx
  40344a:	c1 fa 02             	sar    $0x2,%edx
  40344d:	89 c8                	mov    %ecx,%eax
  40344f:	c1 f8 1f             	sar    $0x1f,%eax
  403452:	29 c2                	sub    %eax,%edx
  403454:	89 d0                	mov    %edx,%eax
  403456:	c1 e0 02             	shl    $0x2,%eax
  403459:	01 d0                	add    %edx,%eax
  40345b:	01 c0                	add    %eax,%eax
  40345d:	89 ca                	mov    %ecx,%edx
  40345f:	29 c2                	sub    %eax,%edx
  403461:	89 d0                	mov    %edx,%eax
  403463:	83 c0 30             	add    $0x30,%eax
  403466:	88 05 a3 2c 20 00    	mov    %al,0x202ca3(%rip)        # 60610f <fmt.2280+0x2>
  40346c:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  403473:	8b 50 04             	mov    0x4(%rax),%edx
  403476:	81 fa b0 00 00 00    	cmp    $0xb0,%edx
  40347c:	73 18                	jae    403496 <cvt_f+0x120>
  40347e:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403482:	8b 50 04             	mov    0x4(%rax),%edx
  403485:	89 d2                	mov    %edx,%edx
  403487:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  40348b:	8b 48 04             	mov    0x4(%rax),%ecx
  40348e:	83 c1 10             	add    $0x10,%ecx
  403491:	89 48 04             	mov    %ecx,0x4(%rax)
  403494:	eb 0f                	jmp    4034a5 <cvt_f+0x12f>
  403496:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40349a:	48 89 ca             	mov    %rcx,%rdx
  40349d:	48 83 c1 08          	add    $0x8,%rcx
  4034a1:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4034a5:	48 89 d0             	mov    %rdx,%rax
  4034a8:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4034ac:	48 8d 15 5a 2c 20 00 	lea    0x202c5a(%rip),%rdx        # 60610d <fmt.2280>
  4034b3:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4034ba:	48 89 d6             	mov    %rdx,%rsi
  4034bd:	48 89 c7             	mov    %rax,%rdi
  4034c0:	b8 01 00 00 00       	mov    $0x1,%eax
  4034c5:	e8 26 d8 ff ff       	callq  400cf0 <sprintf@plt>
  4034ca:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4034d1:	48 89 c7             	mov    %rax,%rdi
  4034d4:	e8 17 d7 ff ff       	callq  400bf0 <strlen@plt>
  4034d9:	89 c3                	mov    %eax,%ebx
  4034db:	44 8b 85 24 fe ff ff 	mov    -0x1dc(%rbp),%r8d
  4034e2:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  4034e9:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
  4034f0:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
  4034f7:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4034fe:	8b 75 10             	mov    0x10(%rbp),%esi
  403501:	89 34 24             	mov    %esi,(%rsp)
  403504:	45 89 c1             	mov    %r8d,%r9d
  403507:	49 89 f8             	mov    %rdi,%r8
  40350a:	89 de                	mov    %ebx,%esi
  40350c:	48 89 c7             	mov    %rax,%rdi
  40350f:	e8 95 0e 00 00       	callq  4043a9 <Fmt_putd>
  403514:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
  40351b:	5b                   	pop    %rbx
  40351c:	c9                   	leaveq 
  40351d:	c3                   	retq   

000000000040351e <outc>:
  40351e:	55                   	push   %rbp
  40351f:	48 89 e5             	mov    %rsp,%rbp
  403522:	48 83 ec 20          	sub    $0x20,%rsp
  403526:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403529:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40352d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403531:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403535:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403539:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40353c:	48 89 d6             	mov    %rdx,%rsi
  40353f:	89 c7                	mov    %eax,%edi
  403541:	e8 ea d6 ff ff       	callq  400c30 <_IO_putc@plt>
  403546:	c9                   	leaveq 
  403547:	c3                   	retq   

0000000000403548 <insert>:
  403548:	55                   	push   %rbp
  403549:	48 89 e5             	mov    %rsp,%rbp
  40354c:	48 83 ec 20          	sub    $0x20,%rsp
  403550:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403553:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403557:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40355b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40355f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403563:	48 8b 50 08          	mov    0x8(%rax),%rdx
  403567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40356b:	48 8b 08             	mov    (%rax),%rcx
  40356e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403572:	8b 40 10             	mov    0x10(%rax),%eax
  403575:	48 98                	cltq   
  403577:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  40357b:	48 39 c2             	cmp    %rax,%rdx
  40357e:	72 1b                	jb     40359b <insert+0x53>
  403580:	ba a2 00 00 00       	mov    $0xa2,%edx
  403585:	48 8d 35 1c 17 00 00 	lea    0x171c(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  40358c:	48 8d 05 1d 28 20 00 	lea    0x20281d(%rip),%rax        # 605db0 <Fmt_Overflow>
  403593:	48 89 c7             	mov    %rax,%rdi
  403596:	e8 45 e1 ff ff       	callq  4016e0 <Except_raise>
  40359b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40359f:	48 8b 40 08          	mov    0x8(%rax),%rax
  4035a3:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4035a6:	88 10                	mov    %dl,(%rax)
  4035a8:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4035ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4035b0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4035b4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4035b7:	c9                   	leaveq 
  4035b8:	c3                   	retq   

00000000004035b9 <append>:
  4035b9:	55                   	push   %rbp
  4035ba:	48 89 e5             	mov    %rsp,%rbp
  4035bd:	53                   	push   %rbx
  4035be:	48 83 ec 28          	sub    $0x28,%rsp
  4035c2:	89 7d dc             	mov    %edi,-0x24(%rbp)
  4035c5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4035c9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4035cd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4035d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4035d5:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4035d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4035dd:	48 8b 08             	mov    (%rax),%rcx
  4035e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4035e4:	8b 40 10             	mov    0x10(%rax),%eax
  4035e7:	48 98                	cltq   
  4035e9:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  4035ed:	48 39 c2             	cmp    %rax,%rdx
  4035f0:	72 60                	jb     403652 <append+0x99>
  4035f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4035f6:	8b 40 10             	mov    0x10(%rax),%eax
  4035f9:	01 c0                	add    %eax,%eax
  4035fb:	48 63 d8             	movslq %eax,%rbx
  4035fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403602:	48 8b 00             	mov    (%rax),%rax
  403605:	b9 a9 00 00 00       	mov    $0xa9,%ecx
  40360a:	48 8d 15 97 16 00 00 	lea    0x1697(%rip),%rdx        # 404ca8 <_IO_stdin_used+0x350>
  403611:	48 89 de             	mov    %rbx,%rsi
  403614:	48 89 c7             	mov    %rax,%rdi
  403617:	e8 ef 11 00 00       	callq  40480b <Mem_resize>
  40361c:	48 89 c2             	mov    %rax,%rdx
  40361f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403623:	48 89 10             	mov    %rdx,(%rax)
  403626:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40362a:	48 8b 10             	mov    (%rax),%rdx
  40362d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403631:	8b 40 10             	mov    0x10(%rax),%eax
  403634:	48 98                	cltq   
  403636:	48 01 c2             	add    %rax,%rdx
  403639:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40363d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403641:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403645:	8b 40 10             	mov    0x10(%rax),%eax
  403648:	8d 14 00             	lea    (%rax,%rax,1),%edx
  40364b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40364f:	89 50 10             	mov    %edx,0x10(%rax)
  403652:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403656:	48 8b 40 08          	mov    0x8(%rax),%rax
  40365a:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40365d:	88 10                	mov    %dl,(%rax)
  40365f:	48 8d 50 01          	lea    0x1(%rax),%rdx
  403663:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403667:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40366b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40366e:	48 83 c4 28          	add    $0x28,%rsp
  403672:	5b                   	pop    %rbx
  403673:	c9                   	leaveq 
  403674:	c3                   	retq   

0000000000403675 <Fmt_puts>:
  403675:	55                   	push   %rbp
  403676:	48 89 e5             	mov    %rsp,%rbp
  403679:	48 83 ec 40          	sub    $0x40,%rsp
  40367d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403681:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  403684:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  403688:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40368c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  403690:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  403694:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403699:	75 1b                	jne    4036b6 <Fmt_puts+0x41>
  40369b:	ba b3 00 00 00       	mov    $0xb3,%edx
  4036a0:	48 8d 35 01 16 00 00 	lea    0x1601(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  4036a7:	48 8d 05 fa 26 20 00 	lea    0x2026fa(%rip),%rax        # 605da8 <Assert_Failed>
  4036ae:	48 89 c7             	mov    %rax,%rdi
  4036b1:	e8 2a e0 ff ff       	callq  4016e0 <Except_raise>
  4036b6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4036ba:	79 1b                	jns    4036d7 <Fmt_puts+0x62>
  4036bc:	ba b4 00 00 00       	mov    $0xb4,%edx
  4036c1:	48 8d 35 e0 15 00 00 	lea    0x15e0(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  4036c8:	48 8d 05 d9 26 20 00 	lea    0x2026d9(%rip),%rax        # 605da8 <Assert_Failed>
  4036cf:	48 89 c7             	mov    %rax,%rdi
  4036d2:	e8 09 e0 ff ff       	callq  4016e0 <Except_raise>
  4036d7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  4036dc:	75 1b                	jne    4036f9 <Fmt_puts+0x84>
  4036de:	ba b5 00 00 00       	mov    $0xb5,%edx
  4036e3:	48 8d 35 be 15 00 00 	lea    0x15be(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  4036ea:	48 8d 05 b7 26 20 00 	lea    0x2026b7(%rip),%rax        # 605da8 <Assert_Failed>
  4036f1:	48 89 c7             	mov    %rax,%rdi
  4036f4:	e8 e7 df ff ff       	callq  4016e0 <Except_raise>
  4036f9:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  403700:	75 07                	jne    403709 <Fmt_puts+0x94>
  403702:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  403709:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  40370d:	79 0e                	jns    40371d <Fmt_puts+0xa8>
  40370f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403713:	48 83 c0 2d          	add    $0x2d,%rax
  403717:	c6 00 01             	movb   $0x1,(%rax)
  40371a:	f7 5d c4             	negl   -0x3c(%rbp)
  40371d:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  403721:	78 0b                	js     40372e <Fmt_puts+0xb9>
  403723:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403727:	48 83 c0 30          	add    $0x30,%rax
  40372b:	c6 00 00             	movb   $0x0,(%rax)
  40372e:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  403732:	78 0e                	js     403742 <Fmt_puts+0xcd>
  403734:	8b 45 10             	mov    0x10(%rbp),%eax
  403737:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  40373a:	7d 06                	jge    403742 <Fmt_puts+0xcd>
  40373c:	8b 45 10             	mov    0x10(%rbp),%eax
  40373f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  403742:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403746:	48 83 c0 2d          	add    $0x2d,%rax
  40374a:	0f b6 00             	movzbl (%rax),%eax
  40374d:	84 c0                	test   %al,%al
  40374f:	75 32                	jne    403783 <Fmt_puts+0x10e>
  403751:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  403754:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  403757:	89 d1                	mov    %edx,%ecx
  403759:	29 c1                	sub    %eax,%ecx
  40375b:	89 c8                	mov    %ecx,%eax
  40375d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403760:	eb 12                	jmp    403774 <Fmt_puts+0xff>
  403762:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403766:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40376a:	48 89 c6             	mov    %rax,%rsi
  40376d:	bf 20 00 00 00       	mov    $0x20,%edi
  403772:	ff d2                	callq  *%rdx
  403774:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403778:	0f 9f c0             	setg   %al
  40377b:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  40377f:	84 c0                	test   %al,%al
  403781:	75 df                	jne    403762 <Fmt_puts+0xed>
  403783:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40378a:	eb 22                	jmp    4037ae <Fmt_puts+0x139>
  40378c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403790:	0f b6 00             	movzbl (%rax),%eax
  403793:	0f b6 c0             	movzbl %al,%eax
  403796:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  40379b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40379f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4037a3:	48 89 d6             	mov    %rdx,%rsi
  4037a6:	89 c7                	mov    %eax,%edi
  4037a8:	ff d1                	callq  *%rcx
  4037aa:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  4037ae:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4037b1:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  4037b4:	7c d6                	jl     40378c <Fmt_puts+0x117>
  4037b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4037ba:	48 83 c0 2d          	add    $0x2d,%rax
  4037be:	0f b6 00             	movzbl (%rax),%eax
  4037c1:	84 c0                	test   %al,%al
  4037c3:	74 32                	je     4037f7 <Fmt_puts+0x182>
  4037c5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4037c8:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  4037cb:	89 d1                	mov    %edx,%ecx
  4037cd:	29 c1                	sub    %eax,%ecx
  4037cf:	89 c8                	mov    %ecx,%eax
  4037d1:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4037d4:	eb 12                	jmp    4037e8 <Fmt_puts+0x173>
  4037d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4037da:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4037de:	48 89 c6             	mov    %rax,%rsi
  4037e1:	bf 20 00 00 00       	mov    $0x20,%edi
  4037e6:	ff d2                	callq  *%rdx
  4037e8:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4037ec:	0f 9f c0             	setg   %al
  4037ef:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  4037f3:	84 c0                	test   %al,%al
  4037f5:	75 df                	jne    4037d6 <Fmt_puts+0x161>
  4037f7:	c9                   	leaveq 
  4037f8:	c3                   	retq   

00000000004037f9 <Fmt_fmt>:
  4037f9:	55                   	push   %rbp
  4037fa:	48 89 e5             	mov    %rsp,%rbp
  4037fd:	53                   	push   %rbx
  4037fe:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  403805:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  40380c:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  403813:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  40381a:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  403821:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  403828:	0f b6 c0             	movzbl %al,%eax
  40382b:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  403832:	00 
  403833:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403863 <Fmt_fmt+0x6a>
  40383a:	48 29 c8             	sub    %rcx,%rax
  40383d:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  403841:	ff e0                	jmpq   *%rax
  403843:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  403847:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  40384b:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  40384f:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  403853:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  403857:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  40385b:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  40385f:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  403863:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  40386a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403871:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  403877:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40387e:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403885:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40388c:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403890:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403894:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40389b:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  4038a2:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4038a6:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  4038ad:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  4038b4:	48 8b 9d 10 ff ff ff 	mov    -0xf0(%rbp),%rbx
  4038bb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4038c2:	48 89 de             	mov    %rbx,%rsi
  4038c5:	48 89 c7             	mov    %rax,%rdi
  4038c8:	e8 2b 05 00 00       	callq  403df8 <Fmt_vfmt>
  4038cd:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  4038d4:	5b                   	pop    %rbx
  4038d5:	c9                   	leaveq 
  4038d6:	c3                   	retq   

00000000004038d7 <Fmt_print>:
  4038d7:	55                   	push   %rbp
  4038d8:	48 89 e5             	mov    %rsp,%rbp
  4038db:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  4038e2:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  4038e9:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  4038f0:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  4038f7:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  4038fe:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  403905:	0f b6 c0             	movzbl %al,%eax
  403908:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  40390f:	00 
  403910:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403940 <Fmt_print+0x69>
  403917:	48 29 d0             	sub    %rdx,%rax
  40391a:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  40391e:	ff e0                	jmpq   *%rax
  403920:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403924:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403928:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  40392c:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403930:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403934:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403938:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  40393c:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403940:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  403947:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40394e:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  403954:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40395b:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403962:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403969:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  40396d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403971:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403978:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  40397f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403983:	48 8b 05 4e 26 20 00 	mov    0x20264e(%rip),%rax        # 605fd8 <stdout@GLIBC_2.2.5>
  40398a:	48 8b 00             	mov    (%rax),%rax
  40398d:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  403994:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  40399b:	48 89 c6             	mov    %rax,%rsi
  40399e:	48 8d 3d 79 fb ff ff 	lea    -0x487(%rip),%rdi        # 40351e <outc>
  4039a5:	e8 4e 04 00 00       	callq  403df8 <Fmt_vfmt>
  4039aa:	c9                   	leaveq 
  4039ab:	c3                   	retq   

00000000004039ac <Fmt_fprint>:
  4039ac:	55                   	push   %rbp
  4039ad:	48 89 e5             	mov    %rsp,%rbp
  4039b0:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  4039b7:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  4039be:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  4039c5:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  4039cc:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  4039d3:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  4039da:	0f b6 c0             	movzbl %al,%eax
  4039dd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4039e4:	00 
  4039e5:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403a15 <Fmt_fprint+0x69>
  4039ec:	48 29 d0             	sub    %rdx,%rax
  4039ef:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  4039f3:	ff e0                	jmpq   *%rax
  4039f5:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  4039f9:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  4039fd:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  403a01:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403a05:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403a09:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403a0d:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  403a11:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403a15:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  403a1c:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403a23:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
  403a29:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403a30:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403a37:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403a3e:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403a42:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403a46:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403a4d:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  403a54:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403a58:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  403a5f:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  403a66:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  403a6d:	48 89 c6             	mov    %rax,%rsi
  403a70:	48 8d 3d a7 fa ff ff 	lea    -0x559(%rip),%rdi        # 40351e <outc>
  403a77:	e8 7c 03 00 00       	callq  403df8 <Fmt_vfmt>
  403a7c:	c9                   	leaveq 
  403a7d:	c3                   	retq   

0000000000403a7e <Fmt_sfmt>:
  403a7e:	55                   	push   %rbp
  403a7f:	48 89 e5             	mov    %rsp,%rbp
  403a82:	53                   	push   %rbx
  403a83:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  403a8a:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  403a91:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)
  403a97:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  403a9e:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  403aa5:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  403aac:	0f b6 c0             	movzbl %al,%eax
  403aaf:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  403ab6:	00 
  403ab7:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403ae7 <Fmt_sfmt+0x69>
  403abe:	48 29 c8             	sub    %rcx,%rax
  403ac1:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  403ac5:	ff e0                	jmpq   *%rax
  403ac7:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  403acb:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  403acf:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  403ad3:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  403ad7:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  403adb:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  403adf:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  403ae3:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  403ae7:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  403aee:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403af5:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  403afb:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403b02:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403b09:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403b10:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403b14:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403b18:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403b1f:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  403b26:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403b2a:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  403b31:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  403b38:	8b 9d 14 ff ff ff    	mov    -0xec(%rbp),%ebx
  403b3e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  403b45:	89 de                	mov    %ebx,%esi
  403b47:	48 89 c7             	mov    %rax,%rdi
  403b4a:	e8 16 00 00 00       	callq  403b65 <Fmt_vsfmt>
  403b4f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  403b55:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  403b5b:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  403b62:	5b                   	pop    %rbx
  403b63:	c9                   	leaveq 
  403b64:	c3                   	retq   

0000000000403b65 <Fmt_vsfmt>:
  403b65:	55                   	push   %rbp
  403b66:	48 89 e5             	mov    %rsp,%rbp
  403b69:	48 83 ec 40          	sub    $0x40,%rsp
  403b6d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403b71:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  403b74:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  403b78:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  403b7c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  403b81:	75 1b                	jne    403b9e <Fmt_vsfmt+0x39>
  403b83:	ba e8 00 00 00       	mov    $0xe8,%edx
  403b88:	48 8d 35 19 11 00 00 	lea    0x1119(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  403b8f:	48 8d 05 12 22 20 00 	lea    0x202212(%rip),%rax        # 605da8 <Assert_Failed>
  403b96:	48 89 c7             	mov    %rax,%rdi
  403b99:	e8 42 db ff ff       	callq  4016e0 <Except_raise>
  403b9e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  403ba2:	7f 1b                	jg     403bbf <Fmt_vsfmt+0x5a>
  403ba4:	ba e9 00 00 00       	mov    $0xe9,%edx
  403ba9:	48 8d 35 f8 10 00 00 	lea    0x10f8(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  403bb0:	48 8d 05 f1 21 20 00 	lea    0x2021f1(%rip),%rax        # 605da8 <Assert_Failed>
  403bb7:	48 89 c7             	mov    %rax,%rdi
  403bba:	e8 21 db ff ff       	callq  4016e0 <Except_raise>
  403bbf:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  403bc4:	75 1b                	jne    403be1 <Fmt_vsfmt+0x7c>
  403bc6:	ba ea 00 00 00       	mov    $0xea,%edx
  403bcb:	48 8d 35 d6 10 00 00 	lea    0x10d6(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  403bd2:	48 8d 05 cf 21 20 00 	lea    0x2021cf(%rip),%rax        # 605da8 <Assert_Failed>
  403bd9:	48 89 c7             	mov    %rax,%rdi
  403bdc:	e8 ff da ff ff       	callq  4016e0 <Except_raise>
  403be1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403be5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403be9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403bed:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403bf1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  403bf4:	89 45 f0             	mov    %eax,-0x10(%rbp)
  403bf7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  403bfb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  403bff:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  403c03:	48 89 c6             	mov    %rax,%rsi
  403c06:	48 8d 3d 3b f9 ff ff 	lea    -0x6c5(%rip),%rdi        # 403548 <insert>
  403c0d:	e8 e6 01 00 00       	callq  403df8 <Fmt_vfmt>
  403c12:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  403c16:	48 89 c6             	mov    %rax,%rsi
  403c19:	bf 00 00 00 00       	mov    $0x0,%edi
  403c1e:	e8 25 f9 ff ff       	callq  403548 <insert>
  403c23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403c27:	89 c2                	mov    %eax,%edx
  403c29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403c2d:	89 d1                	mov    %edx,%ecx
  403c2f:	29 c1                	sub    %eax,%ecx
  403c31:	89 c8                	mov    %ecx,%eax
  403c33:	83 e8 01             	sub    $0x1,%eax
  403c36:	c9                   	leaveq 
  403c37:	c3                   	retq   

0000000000403c38 <Fmt_string>:
  403c38:	55                   	push   %rbp
  403c39:	48 89 e5             	mov    %rsp,%rbp
  403c3c:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  403c43:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  403c4a:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  403c51:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  403c58:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  403c5f:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  403c66:	0f b6 c0             	movzbl %al,%eax
  403c69:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  403c70:	00 
  403c71:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403ca1 <Fmt_string+0x69>
  403c78:	48 29 d0             	sub    %rdx,%rax
  403c7b:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  403c7f:	ff e0                	jmpq   *%rax
  403c81:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403c85:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403c89:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  403c8d:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403c91:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403c95:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403c99:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  403c9d:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403ca1:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  403ca8:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  403caf:	00 
  403cb0:	75 1b                	jne    403ccd <Fmt_string+0x95>
  403cb2:	ba f4 00 00 00       	mov    $0xf4,%edx
  403cb7:	48 8d 35 ea 0f 00 00 	lea    0xfea(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  403cbe:	48 8d 05 e3 20 20 00 	lea    0x2020e3(%rip),%rax        # 605da8 <Assert_Failed>
  403cc5:	48 89 c7             	mov    %rax,%rdi
  403cc8:	e8 13 da ff ff       	callq  4016e0 <Except_raise>
  403ccd:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403cd4:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  403cda:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403ce1:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403ce8:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403cef:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403cf3:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403cf7:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403cfe:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  403d05:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403d09:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  403d10:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  403d17:	48 89 d6             	mov    %rdx,%rsi
  403d1a:	48 89 c7             	mov    %rax,%rdi
  403d1d:	e8 10 00 00 00       	callq  403d32 <Fmt_vstring>
  403d22:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  403d29:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  403d30:	c9                   	leaveq 
  403d31:	c3                   	retq   

0000000000403d32 <Fmt_vstring>:
  403d32:	55                   	push   %rbp
  403d33:	48 89 e5             	mov    %rsp,%rbp
  403d36:	53                   	push   %rbx
  403d37:	48 83 ec 38          	sub    $0x38,%rsp
  403d3b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  403d3f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  403d43:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  403d48:	75 1b                	jne    403d65 <Fmt_vstring+0x33>
  403d4a:	ba fc 00 00 00       	mov    $0xfc,%edx
  403d4f:	48 8d 35 52 0f 00 00 	lea    0xf52(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  403d56:	48 8d 05 4b 20 20 00 	lea    0x20204b(%rip),%rax        # 605da8 <Assert_Failed>
  403d5d:	48 89 c7             	mov    %rax,%rdi
  403d60:	e8 7b d9 ff ff       	callq  4016e0 <Except_raise>
  403d65:	c7 45 e0 00 01 00 00 	movl   $0x100,-0x20(%rbp)
  403d6c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  403d6f:	48 98                	cltq   
  403d71:	ba fe 00 00 00       	mov    $0xfe,%edx
  403d76:	48 8d 35 2b 0f 00 00 	lea    0xf2b(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  403d7d:	48 89 c7             	mov    %rax,%rdi
  403d80:	e8 13 09 00 00       	callq  404698 <Mem_alloc>
  403d85:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  403d89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d8d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  403d91:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  403d95:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  403d99:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  403d9d:	48 89 c6             	mov    %rax,%rsi
  403da0:	48 8d 3d 12 f8 ff ff 	lea    -0x7ee(%rip),%rdi        # 4035b9 <append>
  403da7:	e8 4c 00 00 00       	callq  403df8 <Fmt_vfmt>
  403dac:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  403db0:	48 89 c6             	mov    %rax,%rsi
  403db3:	bf 00 00 00 00       	mov    $0x0,%edi
  403db8:	e8 fc f7 ff ff       	callq  4035b9 <append>
  403dbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403dc1:	48 89 c2             	mov    %rax,%rdx
  403dc4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403dc8:	48 89 d3             	mov    %rdx,%rbx
  403dcb:	48 29 c3             	sub    %rax,%rbx
  403dce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403dd2:	b9 01 01 00 00       	mov    $0x101,%ecx
  403dd7:	48 8d 15 ca 0e 00 00 	lea    0xeca(%rip),%rdx        # 404ca8 <_IO_stdin_used+0x350>
  403dde:	48 89 de             	mov    %rbx,%rsi
  403de1:	48 89 c7             	mov    %rax,%rdi
  403de4:	e8 22 0a 00 00       	callq  40480b <Mem_resize>
  403de9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  403ded:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403df1:	48 83 c4 38          	add    $0x38,%rsp
  403df5:	5b                   	pop    %rbx
  403df6:	c9                   	leaveq 
  403df7:	c3                   	retq   

0000000000403df8 <Fmt_vfmt>:
  403df8:	55                   	push   %rbp
  403df9:	48 89 e5             	mov    %rsp,%rbp
  403dfc:	53                   	push   %rbx
  403dfd:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
  403e04:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  403e0b:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  403e12:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
  403e19:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  403e20:	48 83 bd c8 fe ff ff 	cmpq   $0x0,-0x138(%rbp)
  403e27:	00 
  403e28:	75 1b                	jne    403e45 <Fmt_vfmt+0x4d>
  403e2a:	ba 05 01 00 00       	mov    $0x105,%edx
  403e2f:	48 8d 35 72 0e 00 00 	lea    0xe72(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  403e36:	48 8d 05 6b 1f 20 00 	lea    0x201f6b(%rip),%rax        # 605da8 <Assert_Failed>
  403e3d:	48 89 c7             	mov    %rax,%rdi
  403e40:	e8 9b d8 ff ff       	callq  4016e0 <Except_raise>
  403e45:	48 83 bd b8 fe ff ff 	cmpq   $0x0,-0x148(%rbp)
  403e4c:	00 
  403e4d:	0f 85 bf 04 00 00    	jne    404312 <Fmt_vfmt+0x51a>
  403e53:	ba 06 01 00 00       	mov    $0x106,%edx
  403e58:	48 8d 35 49 0e 00 00 	lea    0xe49(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  403e5f:	48 8d 05 42 1f 20 00 	lea    0x201f42(%rip),%rax        # 605da8 <Assert_Failed>
  403e66:	48 89 c7             	mov    %rax,%rdi
  403e69:	e8 72 d8 ff ff       	callq  4016e0 <Except_raise>
  403e6e:	e9 a0 04 00 00       	jmpq   404313 <Fmt_vfmt+0x51b>
  403e73:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403e7a:	0f b6 00             	movzbl (%rax),%eax
  403e7d:	3c 25                	cmp    $0x25,%al
  403e7f:	75 16                	jne    403e97 <Fmt_vfmt+0x9f>
  403e81:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  403e88:	01 
  403e89:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403e90:	0f b6 00             	movzbl (%rax),%eax
  403e93:	3c 25                	cmp    $0x25,%al
  403e95:	75 2f                	jne    403ec6 <Fmt_vfmt+0xce>
  403e97:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403e9e:	0f b6 00             	movzbl (%rax),%eax
  403ea1:	0f b6 c0             	movzbl %al,%eax
  403ea4:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  403eab:	01 
  403eac:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  403eb3:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  403eba:	48 89 d6             	mov    %rdx,%rsi
  403ebd:	89 c7                	mov    %eax,%edi
  403ebf:	ff d1                	callq  *%rcx
  403ec1:	e9 4d 04 00 00       	jmpq   404313 <Fmt_vfmt+0x51b>
  403ec6:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  403ecd:	c7 45 e8 00 00 00 80 	movl   $0x80000000,-0x18(%rbp)
  403ed4:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
  403edb:	ba 00 01 00 00       	mov    $0x100,%edx
  403ee0:	be 00 00 00 00       	mov    $0x0,%esi
  403ee5:	48 89 c7             	mov    %rax,%rdi
  403ee8:	e8 53 cd ff ff       	callq  400c40 <memset@plt>
  403eed:	48 8d 05 2c 2a 20 00 	lea    0x202a2c(%rip),%rax        # 606920 <Fmt_flags>
  403ef4:	48 8b 00             	mov    (%rax),%rax
  403ef7:	48 85 c0             	test   %rax,%rax
  403efa:	0f 84 8f 00 00 00    	je     403f8f <Fmt_vfmt+0x197>
  403f00:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403f07:	0f b6 00             	movzbl (%rax),%eax
  403f0a:	88 45 e7             	mov    %al,-0x19(%rbp)
  403f0d:	eb 5d                	jmp    403f6c <Fmt_vfmt+0x174>
  403f0f:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  403f13:	48 98                	cltq   
  403f15:	0f b6 84 05 d0 fe ff 	movzbl -0x130(%rbp,%rax,1),%eax
  403f1c:	ff 
  403f1d:	3c ff                	cmp    $0xff,%al
  403f1f:	75 1b                	jne    403f3c <Fmt_vfmt+0x144>
  403f21:	ba 12 01 00 00       	mov    $0x112,%edx
  403f26:	48 8d 35 7b 0d 00 00 	lea    0xd7b(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  403f2d:	48 8d 05 74 1e 20 00 	lea    0x201e74(%rip),%rax        # 605da8 <Assert_Failed>
  403f34:	48 89 c7             	mov    %rax,%rdi
  403f37:	e8 a4 d7 ff ff       	callq  4016e0 <Except_raise>
  403f3c:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  403f40:	48 63 d0             	movslq %eax,%rdx
  403f43:	0f b6 94 15 d0 fe ff 	movzbl -0x130(%rbp,%rdx,1),%edx
  403f4a:	ff 
  403f4b:	83 c2 01             	add    $0x1,%edx
  403f4e:	48 98                	cltq   
  403f50:	88 94 05 d0 fe ff ff 	mov    %dl,-0x130(%rbp,%rax,1)
  403f57:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  403f5e:	01 
  403f5f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403f66:	0f b6 00             	movzbl (%rax),%eax
  403f69:	88 45 e7             	mov    %al,-0x19(%rbp)
  403f6c:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
  403f70:	74 1d                	je     403f8f <Fmt_vfmt+0x197>
  403f72:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  403f76:	48 8d 05 a3 29 20 00 	lea    0x2029a3(%rip),%rax        # 606920 <Fmt_flags>
  403f7d:	48 8b 00             	mov    (%rax),%rax
  403f80:	89 d6                	mov    %edx,%esi
  403f82:	48 89 c7             	mov    %rax,%rdi
  403f85:	e8 76 cc ff ff       	callq  400c00 <strchr@plt>
  403f8a:	48 85 c0             	test   %rax,%rax
  403f8d:	75 80                	jne    403f0f <Fmt_vfmt+0x117>
  403f8f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403f96:	0f b6 00             	movzbl (%rax),%eax
  403f99:	3c 2a                	cmp    $0x2a,%al
  403f9b:	74 30                	je     403fcd <Fmt_vfmt+0x1d5>
  403f9d:	e8 8e cd ff ff       	callq  400d30 <__ctype_b_loc@plt>
  403fa2:	48 8b 10             	mov    (%rax),%rdx
  403fa5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403fac:	0f b6 00             	movzbl (%rax),%eax
  403faf:	48 0f be c0          	movsbq %al,%rax
  403fb3:	48 01 c0             	add    %rax,%rax
  403fb6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  403fba:	0f b7 00             	movzwl (%rax),%eax
  403fbd:	0f b7 c0             	movzwl %ax,%eax
  403fc0:	25 00 08 00 00       	and    $0x800,%eax
  403fc5:	85 c0                	test   %eax,%eax
  403fc7:	0f 84 26 01 00 00    	je     4040f3 <Fmt_vfmt+0x2fb>
  403fcd:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403fd4:	0f b6 00             	movzbl (%rax),%eax
  403fd7:	3c 2a                	cmp    $0x2a,%al
  403fd9:	75 6b                	jne    404046 <Fmt_vfmt+0x24e>
  403fdb:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  403fe2:	8b 10                	mov    (%rax),%edx
  403fe4:	83 fa 30             	cmp    $0x30,%edx
  403fe7:	73 15                	jae    403ffe <Fmt_vfmt+0x206>
  403fe9:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403fed:	8b 10                	mov    (%rax),%edx
  403fef:	89 d2                	mov    %edx,%edx
  403ff1:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403ff5:	8b 08                	mov    (%rax),%ecx
  403ff7:	83 c1 08             	add    $0x8,%ecx
  403ffa:	89 08                	mov    %ecx,(%rax)
  403ffc:	eb 0f                	jmp    40400d <Fmt_vfmt+0x215>
  403ffe:	48 8b 48 08          	mov    0x8(%rax),%rcx
  404002:	48 89 ca             	mov    %rcx,%rdx
  404005:	48 83 c1 08          	add    $0x8,%rcx
  404009:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40400d:	48 89 d0             	mov    %rdx,%rax
  404010:	8b 00                	mov    (%rax),%eax
  404012:	89 45 e0             	mov    %eax,-0x20(%rbp)
  404015:	81 7d e0 00 00 00 80 	cmpl   $0x80000000,-0x20(%rbp)
  40401c:	75 1b                	jne    404039 <Fmt_vfmt+0x241>
  40401e:	ba 1a 01 00 00       	mov    $0x11a,%edx
  404023:	48 8d 35 7e 0c 00 00 	lea    0xc7e(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  40402a:	48 8d 05 77 1d 20 00 	lea    0x201d77(%rip),%rax        # 605da8 <Assert_Failed>
  404031:	48 89 c7             	mov    %rax,%rdi
  404034:	e8 a7 d6 ff ff       	callq  4016e0 <Except_raise>
  404039:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  404040:	01 
  404041:	e9 a7 00 00 00       	jmpq   4040ed <Fmt_vfmt+0x2f5>
  404046:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  40404d:	eb 6e                	jmp    4040bd <Fmt_vfmt+0x2c5>
  40404f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404056:	0f b6 00             	movzbl (%rax),%eax
  404059:	0f be c0             	movsbl %al,%eax
  40405c:	83 e8 30             	sub    $0x30,%eax
  40405f:	89 45 d8             	mov    %eax,-0x28(%rbp)
  404062:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  404067:	89 c1                	mov    %eax,%ecx
  404069:	2b 4d d8             	sub    -0x28(%rbp),%ecx
  40406c:	ba 67 66 66 66       	mov    $0x66666667,%edx
  404071:	89 c8                	mov    %ecx,%eax
  404073:	f7 ea                	imul   %edx
  404075:	c1 fa 02             	sar    $0x2,%edx
  404078:	89 c8                	mov    %ecx,%eax
  40407a:	c1 f8 1f             	sar    $0x1f,%eax
  40407d:	89 d1                	mov    %edx,%ecx
  40407f:	29 c1                	sub    %eax,%ecx
  404081:	89 c8                	mov    %ecx,%eax
  404083:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  404086:	7d 1b                	jge    4040a3 <Fmt_vfmt+0x2ab>
  404088:	ba 1f 01 00 00       	mov    $0x11f,%edx
  40408d:	48 8d 35 14 0c 00 00 	lea    0xc14(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  404094:	48 8d 05 0d 1d 20 00 	lea    0x201d0d(%rip),%rax        # 605da8 <Assert_Failed>
  40409b:	48 89 c7             	mov    %rax,%rdi
  40409e:	e8 3d d6 ff ff       	callq  4016e0 <Except_raise>
  4040a3:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4040a6:	89 d0                	mov    %edx,%eax
  4040a8:	c1 e0 02             	shl    $0x2,%eax
  4040ab:	01 d0                	add    %edx,%eax
  4040ad:	01 c0                	add    %eax,%eax
  4040af:	03 45 d8             	add    -0x28(%rbp),%eax
  4040b2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4040b5:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4040bc:	01 
  4040bd:	e8 6e cc ff ff       	callq  400d30 <__ctype_b_loc@plt>
  4040c2:	48 8b 10             	mov    (%rax),%rdx
  4040c5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4040cc:	0f b6 00             	movzbl (%rax),%eax
  4040cf:	48 0f be c0          	movsbq %al,%rax
  4040d3:	48 01 c0             	add    %rax,%rax
  4040d6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  4040da:	0f b7 00             	movzwl (%rax),%eax
  4040dd:	0f b7 c0             	movzwl %ax,%eax
  4040e0:	25 00 08 00 00       	and    $0x800,%eax
  4040e5:	85 c0                	test   %eax,%eax
  4040e7:	0f 85 62 ff ff ff    	jne    40404f <Fmt_vfmt+0x257>
  4040ed:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4040f0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4040f3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4040fa:	0f b6 00             	movzbl (%rax),%eax
  4040fd:	3c 2e                	cmp    $0x2e,%al
  4040ff:	0f 85 6c 01 00 00    	jne    404271 <Fmt_vfmt+0x479>
  404105:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40410c:	01 
  40410d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404114:	0f b6 00             	movzbl (%rax),%eax
  404117:	3c 2a                	cmp    $0x2a,%al
  404119:	74 30                	je     40414b <Fmt_vfmt+0x353>
  40411b:	e8 10 cc ff ff       	callq  400d30 <__ctype_b_loc@plt>
  404120:	48 8b 10             	mov    (%rax),%rdx
  404123:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40412a:	0f b6 00             	movzbl (%rax),%eax
  40412d:	48 0f be c0          	movsbq %al,%rax
  404131:	48 01 c0             	add    %rax,%rax
  404134:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404138:	0f b7 00             	movzwl (%rax),%eax
  40413b:	0f b7 c0             	movzwl %ax,%eax
  40413e:	25 00 08 00 00       	and    $0x800,%eax
  404143:	85 c0                	test   %eax,%eax
  404145:	0f 84 26 01 00 00    	je     404271 <Fmt_vfmt+0x479>
  40414b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404152:	0f b6 00             	movzbl (%rax),%eax
  404155:	3c 2a                	cmp    $0x2a,%al
  404157:	75 6b                	jne    4041c4 <Fmt_vfmt+0x3cc>
  404159:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  404160:	8b 10                	mov    (%rax),%edx
  404162:	83 fa 30             	cmp    $0x30,%edx
  404165:	73 15                	jae    40417c <Fmt_vfmt+0x384>
  404167:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40416b:	8b 10                	mov    (%rax),%edx
  40416d:	89 d2                	mov    %edx,%edx
  40416f:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  404173:	8b 08                	mov    (%rax),%ecx
  404175:	83 c1 08             	add    $0x8,%ecx
  404178:	89 08                	mov    %ecx,(%rax)
  40417a:	eb 0f                	jmp    40418b <Fmt_vfmt+0x393>
  40417c:	48 8b 48 08          	mov    0x8(%rax),%rcx
  404180:	48 89 ca             	mov    %rcx,%rdx
  404183:	48 83 c1 08          	add    $0x8,%rcx
  404187:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40418b:	48 89 d0             	mov    %rdx,%rax
  40418e:	8b 00                	mov    (%rax),%eax
  404190:	89 45 dc             	mov    %eax,-0x24(%rbp)
  404193:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  40419a:	75 1b                	jne    4041b7 <Fmt_vfmt+0x3bf>
  40419c:	ba 28 01 00 00       	mov    $0x128,%edx
  4041a1:	48 8d 35 00 0b 00 00 	lea    0xb00(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  4041a8:	48 8d 05 f9 1b 20 00 	lea    0x201bf9(%rip),%rax        # 605da8 <Assert_Failed>
  4041af:	48 89 c7             	mov    %rax,%rdi
  4041b2:	e8 29 d5 ff ff       	callq  4016e0 <Except_raise>
  4041b7:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4041be:	01 
  4041bf:	e9 a7 00 00 00       	jmpq   40426b <Fmt_vfmt+0x473>
  4041c4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  4041cb:	eb 6e                	jmp    40423b <Fmt_vfmt+0x443>
  4041cd:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4041d4:	0f b6 00             	movzbl (%rax),%eax
  4041d7:	0f be c0             	movsbl %al,%eax
  4041da:	83 e8 30             	sub    $0x30,%eax
  4041dd:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4041e0:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  4041e5:	89 c1                	mov    %eax,%ecx
  4041e7:	2b 4d d4             	sub    -0x2c(%rbp),%ecx
  4041ea:	ba 67 66 66 66       	mov    $0x66666667,%edx
  4041ef:	89 c8                	mov    %ecx,%eax
  4041f1:	f7 ea                	imul   %edx
  4041f3:	c1 fa 02             	sar    $0x2,%edx
  4041f6:	89 c8                	mov    %ecx,%eax
  4041f8:	c1 f8 1f             	sar    $0x1f,%eax
  4041fb:	89 d1                	mov    %edx,%ecx
  4041fd:	29 c1                	sub    %eax,%ecx
  4041ff:	89 c8                	mov    %ecx,%eax
  404201:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  404204:	7d 1b                	jge    404221 <Fmt_vfmt+0x429>
  404206:	ba 2d 01 00 00       	mov    $0x12d,%edx
  40420b:	48 8d 35 96 0a 00 00 	lea    0xa96(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  404212:	48 8d 05 8f 1b 20 00 	lea    0x201b8f(%rip),%rax        # 605da8 <Assert_Failed>
  404219:	48 89 c7             	mov    %rax,%rdi
  40421c:	e8 bf d4 ff ff       	callq  4016e0 <Except_raise>
  404221:	8b 55 dc             	mov    -0x24(%rbp),%edx
  404224:	89 d0                	mov    %edx,%eax
  404226:	c1 e0 02             	shl    $0x2,%eax
  404229:	01 d0                	add    %edx,%eax
  40422b:	01 c0                	add    %eax,%eax
  40422d:	03 45 d4             	add    -0x2c(%rbp),%eax
  404230:	89 45 dc             	mov    %eax,-0x24(%rbp)
  404233:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40423a:	01 
  40423b:	e8 f0 ca ff ff       	callq  400d30 <__ctype_b_loc@plt>
  404240:	48 8b 10             	mov    (%rax),%rdx
  404243:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40424a:	0f b6 00             	movzbl (%rax),%eax
  40424d:	48 0f be c0          	movsbq %al,%rax
  404251:	48 01 c0             	add    %rax,%rax
  404254:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404258:	0f b7 00             	movzwl (%rax),%eax
  40425b:	0f b7 c0             	movzwl %ax,%eax
  40425e:	25 00 08 00 00       	and    $0x800,%eax
  404263:	85 c0                	test   %eax,%eax
  404265:	0f 85 62 ff ff ff    	jne    4041cd <Fmt_vfmt+0x3d5>
  40426b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40426e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  404271:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404278:	0f b6 00             	movzbl (%rax),%eax
  40427b:	88 45 d3             	mov    %al,-0x2d(%rbp)
  40427e:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  404285:	01 
  404286:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  40428a:	48 98                	cltq   
  40428c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  404293:	00 
  404294:	48 8d 05 85 1e 20 00 	lea    0x201e85(%rip),%rax        # 606120 <cvt>
  40429b:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  40429f:	48 85 c0             	test   %rax,%rax
  4042a2:	75 1b                	jne    4042bf <Fmt_vfmt+0x4c7>
  4042a4:	ba 33 01 00 00       	mov    $0x133,%edx
  4042a9:	48 8d 35 f8 09 00 00 	lea    0x9f8(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  4042b0:	48 8d 05 f1 1a 20 00 	lea    0x201af1(%rip),%rax        # 605da8 <Assert_Failed>
  4042b7:	48 89 c7             	mov    %rax,%rdi
  4042ba:	e8 21 d4 ff ff       	callq  4016e0 <Except_raise>
  4042bf:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  4042c3:	48 98                	cltq   
  4042c5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4042cc:	00 
  4042cd:	48 8d 05 4c 1e 20 00 	lea    0x201e4c(%rip),%rax        # 606120 <cvt>
  4042d4:	4c 8b 14 02          	mov    (%rdx,%rax,1),%r10
  4042d8:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  4042dc:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
  4042e0:	48 8d bd d0 fe ff ff 	lea    -0x130(%rbp),%rdi
  4042e7:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  4042ee:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4042f5:	48 8b 9d b0 fe ff ff 	mov    -0x150(%rbp),%rbx
  4042fc:	8b 75 e8             	mov    -0x18(%rbp),%esi
  4042ff:	89 34 24             	mov    %esi,(%rsp)
  404302:	45 89 c1             	mov    %r8d,%r9d
  404305:	49 89 f8             	mov    %rdi,%r8
  404308:	48 89 de             	mov    %rbx,%rsi
  40430b:	89 c7                	mov    %eax,%edi
  40430d:	41 ff d2             	callq  *%r10
  404310:	eb 01                	jmp    404313 <Fmt_vfmt+0x51b>
  404312:	90                   	nop
  404313:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40431a:	0f b6 00             	movzbl (%rax),%eax
  40431d:	84 c0                	test   %al,%al
  40431f:	0f 85 4e fb ff ff    	jne    403e73 <Fmt_vfmt+0x7b>
  404325:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
  40432c:	5b                   	pop    %rbx
  40432d:	c9                   	leaveq 
  40432e:	c3                   	retq   

000000000040432f <Fmt_register>:
  40432f:	55                   	push   %rbp
  404330:	48 89 e5             	mov    %rsp,%rbp
  404333:	48 83 ec 20          	sub    $0x20,%rsp
  404337:	89 7d ec             	mov    %edi,-0x14(%rbp)
  40433a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40433e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  404342:	7e 09                	jle    40434d <Fmt_register+0x1e>
  404344:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
  40434b:	7e 1d                	jle    40436a <Fmt_register+0x3b>
  40434d:	ba 3a 01 00 00       	mov    $0x13a,%edx
  404352:	48 8d 35 4f 09 00 00 	lea    0x94f(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  404359:	48 8d 05 48 1a 20 00 	lea    0x201a48(%rip),%rax        # 605da8 <Assert_Failed>
  404360:	48 89 c7             	mov    %rax,%rdi
  404363:	e8 78 d3 ff ff       	callq  4016e0 <Except_raise>
  404368:	eb 01                	jmp    40436b <Fmt_register+0x3c>
  40436a:	90                   	nop
  40436b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40436e:	48 98                	cltq   
  404370:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  404377:	00 
  404378:	48 8d 05 a1 1d 20 00 	lea    0x201da1(%rip),%rax        # 606120 <cvt>
  40437f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  404383:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404387:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40438a:	48 98                	cltq   
  40438c:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  404393:	00 
  404394:	48 8d 05 85 1d 20 00 	lea    0x201d85(%rip),%rax        # 606120 <cvt>
  40439b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40439f:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
  4043a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4043a7:	c9                   	leaveq 
  4043a8:	c3                   	retq   

00000000004043a9 <Fmt_putd>:
  4043a9:	55                   	push   %rbp
  4043aa:	48 89 e5             	mov    %rsp,%rbp
  4043ad:	48 83 ec 50          	sub    $0x50,%rsp
  4043b1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4043b5:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4043b8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4043bc:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  4043c0:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  4043c4:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  4043c8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4043cd:	75 1b                	jne    4043ea <Fmt_putd+0x41>
  4043cf:	ba 43 01 00 00       	mov    $0x143,%edx
  4043d4:	48 8d 35 cd 08 00 00 	lea    0x8cd(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  4043db:	48 8d 05 c6 19 20 00 	lea    0x2019c6(%rip),%rax        # 605da8 <Assert_Failed>
  4043e2:	48 89 c7             	mov    %rax,%rdi
  4043e5:	e8 f6 d2 ff ff       	callq  4016e0 <Except_raise>
  4043ea:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  4043ee:	79 1b                	jns    40440b <Fmt_putd+0x62>
  4043f0:	ba 44 01 00 00       	mov    $0x144,%edx
  4043f5:	48 8d 35 ac 08 00 00 	lea    0x8ac(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  4043fc:	48 8d 05 a5 19 20 00 	lea    0x2019a5(%rip),%rax        # 605da8 <Assert_Failed>
  404403:	48 89 c7             	mov    %rax,%rdi
  404406:	e8 d5 d2 ff ff       	callq  4016e0 <Except_raise>
  40440b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  404410:	75 1b                	jne    40442d <Fmt_putd+0x84>
  404412:	ba 45 01 00 00       	mov    $0x145,%edx
  404417:	48 8d 35 8a 08 00 00 	lea    0x88a(%rip),%rsi        # 404ca8 <_IO_stdin_used+0x350>
  40441e:	48 8d 05 83 19 20 00 	lea    0x201983(%rip),%rax        # 605da8 <Assert_Failed>
  404425:	48 89 c7             	mov    %rax,%rdi
  404428:	e8 b3 d2 ff ff       	callq  4016e0 <Except_raise>
  40442d:	81 7d b4 00 00 00 80 	cmpl   $0x80000000,-0x4c(%rbp)
  404434:	75 07                	jne    40443d <Fmt_putd+0x94>
  404436:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  40443d:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
  404441:	79 0e                	jns    404451 <Fmt_putd+0xa8>
  404443:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404447:	48 83 c0 2d          	add    $0x2d,%rax
  40444b:	c6 00 01             	movb   $0x1,(%rax)
  40444e:	f7 5d b4             	negl   -0x4c(%rbp)
  404451:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  404455:	78 0b                	js     404462 <Fmt_putd+0xb9>
  404457:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40445b:	48 83 c0 30          	add    $0x30,%rax
  40445f:	c6 00 00             	movb   $0x0,(%rax)
  404462:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  404466:	7e 2e                	jle    404496 <Fmt_putd+0xed>
  404468:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40446c:	0f b6 00             	movzbl (%rax),%eax
  40446f:	3c 2d                	cmp    $0x2d,%al
  404471:	74 0b                	je     40447e <Fmt_putd+0xd5>
  404473:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404477:	0f b6 00             	movzbl (%rax),%eax
  40447a:	3c 2b                	cmp    $0x2b,%al
  40447c:	75 18                	jne    404496 <Fmt_putd+0xed>
  40447e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404482:	0f b6 00             	movzbl (%rax),%eax
  404485:	0f be c0             	movsbl %al,%eax
  404488:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40448b:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  404490:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
  404494:	eb 37                	jmp    4044cd <Fmt_putd+0x124>
  404496:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40449a:	48 83 c0 2b          	add    $0x2b,%rax
  40449e:	0f b6 00             	movzbl (%rax),%eax
  4044a1:	84 c0                	test   %al,%al
  4044a3:	74 09                	je     4044ae <Fmt_putd+0x105>
  4044a5:	c7 45 fc 2b 00 00 00 	movl   $0x2b,-0x4(%rbp)
  4044ac:	eb 1f                	jmp    4044cd <Fmt_putd+0x124>
  4044ae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4044b2:	48 83 c0 20          	add    $0x20,%rax
  4044b6:	0f b6 00             	movzbl (%rax),%eax
  4044b9:	84 c0                	test   %al,%al
  4044bb:	74 09                	je     4044c6 <Fmt_putd+0x11d>
  4044bd:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)
  4044c4:	eb 07                	jmp    4044cd <Fmt_putd+0x124>
  4044c6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4044cd:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4044d1:	79 07                	jns    4044da <Fmt_putd+0x131>
  4044d3:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  4044da:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4044dd:	3b 45 10             	cmp    0x10(%rbp),%eax
  4044e0:	7d 08                	jge    4044ea <Fmt_putd+0x141>
  4044e2:	8b 45 10             	mov    0x10(%rbp),%eax
  4044e5:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4044e8:	eb 26                	jmp    404510 <Fmt_putd+0x167>
  4044ea:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4044ee:	75 1a                	jne    40450a <Fmt_putd+0x161>
  4044f0:	83 7d d4 01          	cmpl   $0x1,-0x2c(%rbp)
  4044f4:	75 14                	jne    40450a <Fmt_putd+0x161>
  4044f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4044fa:	0f b6 00             	movzbl (%rax),%eax
  4044fd:	3c 30                	cmp    $0x30,%al
  4044ff:	75 09                	jne    40450a <Fmt_putd+0x161>
  404501:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  404508:	eb 06                	jmp    404510 <Fmt_putd+0x167>
  40450a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40450d:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404510:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404514:	74 04                	je     40451a <Fmt_putd+0x171>
  404516:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  40451a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40451e:	48 83 c0 2d          	add    $0x2d,%rax
  404522:	0f b6 00             	movzbl (%rax),%eax
  404525:	84 c0                	test   %al,%al
  404527:	74 21                	je     40454a <Fmt_putd+0x1a1>
  404529:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40452d:	0f 84 bc 00 00 00    	je     4045ef <Fmt_putd+0x246>
  404533:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404537:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40453a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40453e:	48 89 d6             	mov    %rdx,%rsi
  404541:	89 c7                	mov    %eax,%edi
  404543:	ff d1                	callq  *%rcx
  404545:	e9 a5 00 00 00       	jmpq   4045ef <Fmt_putd+0x246>
  40454a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40454e:	48 83 c0 30          	add    $0x30,%rax
  404552:	0f b6 00             	movzbl (%rax),%eax
  404555:	84 c0                	test   %al,%al
  404557:	74 4c                	je     4045a5 <Fmt_putd+0x1fc>
  404559:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40455d:	74 12                	je     404571 <Fmt_putd+0x1c8>
  40455f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404563:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404566:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40456a:	48 89 d6             	mov    %rdx,%rsi
  40456d:	89 c7                	mov    %eax,%edi
  40456f:	ff d1                	callq  *%rcx
  404571:	8b 45 f8             	mov    -0x8(%rbp),%eax
  404574:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  404577:	89 d1                	mov    %edx,%ecx
  404579:	29 c1                	sub    %eax,%ecx
  40457b:	89 c8                	mov    %ecx,%eax
  40457d:	89 45 f4             	mov    %eax,-0xc(%rbp)
  404580:	eb 12                	jmp    404594 <Fmt_putd+0x1eb>
  404582:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404586:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40458a:	48 89 c6             	mov    %rax,%rsi
  40458d:	bf 30 00 00 00       	mov    $0x30,%edi
  404592:	ff d2                	callq  *%rdx
  404594:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  404598:	0f 9f c0             	setg   %al
  40459b:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  40459f:	84 c0                	test   %al,%al
  4045a1:	75 df                	jne    404582 <Fmt_putd+0x1d9>
  4045a3:	eb 4a                	jmp    4045ef <Fmt_putd+0x246>
  4045a5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4045a8:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  4045ab:	89 d1                	mov    %edx,%ecx
  4045ad:	29 c1                	sub    %eax,%ecx
  4045af:	89 c8                	mov    %ecx,%eax
  4045b1:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4045b4:	eb 12                	jmp    4045c8 <Fmt_putd+0x21f>
  4045b6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4045ba:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4045be:	48 89 c6             	mov    %rax,%rsi
  4045c1:	bf 20 00 00 00       	mov    $0x20,%edi
  4045c6:	ff d2                	callq  *%rdx
  4045c8:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  4045cc:	0f 9f c0             	setg   %al
  4045cf:	83 6d f0 01          	subl   $0x1,-0x10(%rbp)
  4045d3:	84 c0                	test   %al,%al
  4045d5:	75 df                	jne    4045b6 <Fmt_putd+0x20d>
  4045d7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4045db:	74 12                	je     4045ef <Fmt_putd+0x246>
  4045dd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4045e1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4045e4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4045e8:	48 89 d6             	mov    %rdx,%rsi
  4045eb:	89 c7                	mov    %eax,%edi
  4045ed:	ff d1                	callq  *%rcx
  4045ef:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4045f2:	8b 55 10             	mov    0x10(%rbp),%edx
  4045f5:	89 d1                	mov    %edx,%ecx
  4045f7:	29 c1                	sub    %eax,%ecx
  4045f9:	89 c8                	mov    %ecx,%eax
  4045fb:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4045fe:	eb 12                	jmp    404612 <Fmt_putd+0x269>
  404600:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404604:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404608:	48 89 c6             	mov    %rax,%rsi
  40460b:	bf 30 00 00 00       	mov    $0x30,%edi
  404610:	ff d2                	callq  *%rdx
  404612:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  404616:	0f 9f c0             	setg   %al
  404619:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
  40461d:	84 c0                	test   %al,%al
  40461f:	75 df                	jne    404600 <Fmt_putd+0x257>
  404621:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  404628:	eb 22                	jmp    40464c <Fmt_putd+0x2a3>
  40462a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40462e:	0f b6 00             	movzbl (%rax),%eax
  404631:	0f b6 c0             	movzbl %al,%eax
  404634:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  404639:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40463d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404641:	48 89 d6             	mov    %rdx,%rsi
  404644:	89 c7                	mov    %eax,%edi
  404646:	ff d1                	callq  *%rcx
  404648:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  40464c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40464f:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  404652:	7c d6                	jl     40462a <Fmt_putd+0x281>
  404654:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404658:	48 83 c0 2d          	add    $0x2d,%rax
  40465c:	0f b6 00             	movzbl (%rax),%eax
  40465f:	84 c0                	test   %al,%al
  404661:	74 32                	je     404695 <Fmt_putd+0x2ec>
  404663:	8b 45 f8             	mov    -0x8(%rbp),%eax
  404666:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  404669:	89 d1                	mov    %edx,%ecx
  40466b:	29 c1                	sub    %eax,%ecx
  40466d:	89 c8                	mov    %ecx,%eax
  40466f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  404672:	eb 12                	jmp    404686 <Fmt_putd+0x2dd>
  404674:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404678:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40467c:	48 89 c6             	mov    %rax,%rsi
  40467f:	bf 20 00 00 00       	mov    $0x20,%edi
  404684:	ff d2                	callq  *%rdx
  404686:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40468a:	0f 9f c0             	setg   %al
  40468d:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  404691:	84 c0                	test   %al,%al
  404693:	75 df                	jne    404674 <Fmt_putd+0x2cb>
  404695:	c9                   	leaveq 
  404696:	c3                   	retq   
  404697:	90                   	nop

0000000000404698 <Mem_alloc>:
  404698:	55                   	push   %rbp
  404699:	48 89 e5             	mov    %rsp,%rbp
  40469c:	48 83 ec 30          	sub    $0x30,%rsp
  4046a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4046a4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4046a8:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4046ab:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4046b0:	7f 1b                	jg     4046cd <Mem_alloc+0x35>
  4046b2:	ba 0a 00 00 00       	mov    $0xa,%edx
  4046b7:	48 8d 35 30 06 00 00 	lea    0x630(%rip),%rsi        # 404cee <_IO_stdin_used+0x396>
  4046be:	48 8d 05 e3 16 20 00 	lea    0x2016e3(%rip),%rax        # 605da8 <Assert_Failed>
  4046c5:	48 89 c7             	mov    %rax,%rdi
  4046c8:	e8 13 d0 ff ff       	callq  4016e0 <Except_raise>
  4046cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4046d1:	48 89 c7             	mov    %rax,%rdi
  4046d4:	e8 b7 c5 ff ff       	callq  400c90 <malloc@plt>
  4046d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4046dd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4046e2:	75 3d                	jne    404721 <Mem_alloc+0x89>
  4046e4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4046e9:	75 1d                	jne    404708 <Mem_alloc+0x70>
  4046eb:	ba 0f 00 00 00       	mov    $0xf,%edx
  4046f0:	48 8d 35 f7 05 00 00 	lea    0x5f7(%rip),%rsi        # 404cee <_IO_stdin_used+0x396>
  4046f7:	48 8d 05 ba 16 20 00 	lea    0x2016ba(%rip),%rax        # 605db8 <Mem_Failed>
  4046fe:	48 89 c7             	mov    %rax,%rdi
  404701:	e8 da cf ff ff       	callq  4016e0 <Except_raise>
  404706:	eb 19                	jmp    404721 <Mem_alloc+0x89>
  404708:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40470b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40470f:	48 89 c6             	mov    %rax,%rsi
  404712:	48 8d 05 9f 16 20 00 	lea    0x20169f(%rip),%rax        # 605db8 <Mem_Failed>
  404719:	48 89 c7             	mov    %rax,%rdi
  40471c:	e8 bf cf ff ff       	callq  4016e0 <Except_raise>
  404721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404725:	c9                   	leaveq 
  404726:	c3                   	retq   

0000000000404727 <Mem_calloc>:
  404727:	55                   	push   %rbp
  404728:	48 89 e5             	mov    %rsp,%rbp
  40472b:	48 83 ec 30          	sub    $0x30,%rsp
  40472f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404733:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  404737:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40473b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40473e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404743:	7f 1b                	jg     404760 <Mem_calloc+0x39>
  404745:	ba 18 00 00 00       	mov    $0x18,%edx
  40474a:	48 8d 35 9d 05 00 00 	lea    0x59d(%rip),%rsi        # 404cee <_IO_stdin_used+0x396>
  404751:	48 8d 05 50 16 20 00 	lea    0x201650(%rip),%rax        # 605da8 <Assert_Failed>
  404758:	48 89 c7             	mov    %rax,%rdi
  40475b:	e8 80 cf ff ff       	callq  4016e0 <Except_raise>
  404760:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  404765:	7f 1b                	jg     404782 <Mem_calloc+0x5b>
  404767:	ba 19 00 00 00       	mov    $0x19,%edx
  40476c:	48 8d 35 7b 05 00 00 	lea    0x57b(%rip),%rsi        # 404cee <_IO_stdin_used+0x396>
  404773:	48 8d 05 2e 16 20 00 	lea    0x20162e(%rip),%rax        # 605da8 <Assert_Failed>
  40477a:	48 89 c7             	mov    %rax,%rdi
  40477d:	e8 5e cf ff ff       	callq  4016e0 <Except_raise>
  404782:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  404786:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40478a:	48 89 d6             	mov    %rdx,%rsi
  40478d:	48 89 c7             	mov    %rax,%rdi
  404790:	e8 cb c4 ff ff       	callq  400c60 <calloc@plt>
  404795:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  404799:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40479e:	75 3d                	jne    4047dd <Mem_calloc+0xb6>
  4047a0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4047a5:	75 1d                	jne    4047c4 <Mem_calloc+0x9d>
  4047a7:	ba 1e 00 00 00       	mov    $0x1e,%edx
  4047ac:	48 8d 35 3b 05 00 00 	lea    0x53b(%rip),%rsi        # 404cee <_IO_stdin_used+0x396>
  4047b3:	48 8d 05 fe 15 20 00 	lea    0x2015fe(%rip),%rax        # 605db8 <Mem_Failed>
  4047ba:	48 89 c7             	mov    %rax,%rdi
  4047bd:	e8 1e cf ff ff       	callq  4016e0 <Except_raise>
  4047c2:	eb 19                	jmp    4047dd <Mem_calloc+0xb6>
  4047c4:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4047c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4047cb:	48 89 c6             	mov    %rax,%rsi
  4047ce:	48 8d 05 e3 15 20 00 	lea    0x2015e3(%rip),%rax        # 605db8 <Mem_Failed>
  4047d5:	48 89 c7             	mov    %rax,%rdi
  4047d8:	e8 03 cf ff ff       	callq  4016e0 <Except_raise>
  4047dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4047e1:	c9                   	leaveq 
  4047e2:	c3                   	retq   

00000000004047e3 <Mem_free>:
  4047e3:	55                   	push   %rbp
  4047e4:	48 89 e5             	mov    %rsp,%rbp
  4047e7:	48 83 ec 20          	sub    $0x20,%rsp
  4047eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4047ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4047f3:	89 55 ec             	mov    %edx,-0x14(%rbp)
  4047f6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4047fb:	74 0c                	je     404809 <Mem_free+0x26>
  4047fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404801:	48 89 c7             	mov    %rax,%rdi
  404804:	e8 a7 c3 ff ff       	callq  400bb0 <free@plt>
  404809:	c9                   	leaveq 
  40480a:	c3                   	retq   

000000000040480b <Mem_resize>:
  40480b:	55                   	push   %rbp
  40480c:	48 89 e5             	mov    %rsp,%rbp
  40480f:	48 83 ec 20          	sub    $0x20,%rsp
  404813:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404817:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40481b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40481f:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  404822:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404827:	75 1b                	jne    404844 <Mem_resize+0x39>
  404829:	ba 2a 00 00 00       	mov    $0x2a,%edx
  40482e:	48 8d 35 b9 04 00 00 	lea    0x4b9(%rip),%rsi        # 404cee <_IO_stdin_used+0x396>
  404835:	48 8d 05 6c 15 20 00 	lea    0x20156c(%rip),%rax        # 605da8 <Assert_Failed>
  40483c:	48 89 c7             	mov    %rax,%rdi
  40483f:	e8 9c ce ff ff       	callq  4016e0 <Except_raise>
  404844:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  404849:	7f 1b                	jg     404866 <Mem_resize+0x5b>
  40484b:	ba 2b 00 00 00       	mov    $0x2b,%edx
  404850:	48 8d 35 97 04 00 00 	lea    0x497(%rip),%rsi        # 404cee <_IO_stdin_used+0x396>
  404857:	48 8d 05 4a 15 20 00 	lea    0x20154a(%rip),%rax        # 605da8 <Assert_Failed>
  40485e:	48 89 c7             	mov    %rax,%rdi
  404861:	e8 7a ce ff ff       	callq  4016e0 <Except_raise>
  404866:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40486a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40486e:	48 89 d6             	mov    %rdx,%rsi
  404871:	48 89 c7             	mov    %rax,%rdi
  404874:	e8 47 c4 ff ff       	callq  400cc0 <realloc@plt>
  404879:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40487d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404882:	75 3d                	jne    4048c1 <Mem_resize+0xb6>
  404884:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404889:	75 1d                	jne    4048a8 <Mem_resize+0x9d>
  40488b:	ba 30 00 00 00       	mov    $0x30,%edx
  404890:	48 8d 35 57 04 00 00 	lea    0x457(%rip),%rsi        # 404cee <_IO_stdin_used+0x396>
  404897:	48 8d 05 1a 15 20 00 	lea    0x20151a(%rip),%rax        # 605db8 <Mem_Failed>
  40489e:	48 89 c7             	mov    %rax,%rdi
  4048a1:	e8 3a ce ff ff       	callq  4016e0 <Except_raise>
  4048a6:	eb 19                	jmp    4048c1 <Mem_resize+0xb6>
  4048a8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4048ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4048af:	48 89 c6             	mov    %rax,%rsi
  4048b2:	48 8d 05 ff 14 20 00 	lea    0x2014ff(%rip),%rax        # 605db8 <Mem_Failed>
  4048b9:	48 89 c7             	mov    %rax,%rdi
  4048bc:	e8 1f ce ff ff       	callq  4016e0 <Except_raise>
  4048c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4048c5:	c9                   	leaveq 
  4048c6:	c3                   	retq   
  4048c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4048ce:	00 00 

00000000004048d0 <__libc_csu_init>:
  4048d0:	f3 0f 1e fa          	endbr64 
  4048d4:	41 57                	push   %r15
  4048d6:	49 89 d7             	mov    %rdx,%r15
  4048d9:	41 56                	push   %r14
  4048db:	49 89 f6             	mov    %rsi,%r14
  4048de:	41 55                	push   %r13
  4048e0:	41 89 fd             	mov    %edi,%r13d
  4048e3:	41 54                	push   %r12
  4048e5:	4c 8d 25 ac 14 20 00 	lea    0x2014ac(%rip),%r12        # 605d98 <__frame_dummy_init_array_entry>
  4048ec:	55                   	push   %rbp
  4048ed:	48 8d 2d ac 14 20 00 	lea    0x2014ac(%rip),%rbp        # 605da0 <__init_array_end>
  4048f4:	53                   	push   %rbx
  4048f5:	4c 29 e5             	sub    %r12,%rbp
  4048f8:	48 83 ec 08          	sub    $0x8,%rsp
  4048fc:	e8 7f c2 ff ff       	callq  400b80 <_init>
  404901:	48 c1 fd 03          	sar    $0x3,%rbp
  404905:	74 1f                	je     404926 <__libc_csu_init+0x56>
  404907:	31 db                	xor    %ebx,%ebx
  404909:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  404910:	4c 89 fa             	mov    %r15,%rdx
  404913:	4c 89 f6             	mov    %r14,%rsi
  404916:	44 89 ef             	mov    %r13d,%edi
  404919:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40491d:	48 83 c3 01          	add    $0x1,%rbx
  404921:	48 39 dd             	cmp    %rbx,%rbp
  404924:	75 ea                	jne    404910 <__libc_csu_init+0x40>
  404926:	48 83 c4 08          	add    $0x8,%rsp
  40492a:	5b                   	pop    %rbx
  40492b:	5d                   	pop    %rbp
  40492c:	41 5c                	pop    %r12
  40492e:	41 5d                	pop    %r13
  404930:	41 5e                	pop    %r14
  404932:	41 5f                	pop    %r15
  404934:	c3                   	retq   

0000000000404935 <.annobin___libc_csu_fini.start>:
  404935:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40493c:	00 00 00 00 

0000000000404940 <__libc_csu_fini>:
  404940:	f3 0f 1e fa          	endbr64 
  404944:	c3                   	retq   

Disassembly of section .fini:

0000000000404948 <_fini>:
  404948:	f3 0f 1e fa          	endbr64 
  40494c:	48 83 ec 08          	sub    $0x8,%rsp
  404950:	48 83 c4 08          	add    $0x8,%rsp
  404954:	c3                   	retq   
