
./um:     file format elf64-x86-64


Disassembly of section .init:

0000000000400b98 <_init>:
  400b98:	f3 0f 1e fa          	endbr64 
  400b9c:	48 83 ec 08          	sub    $0x8,%rsp
  400ba0:	48 8b 05 41 54 20 00 	mov    0x205441(%rip),%rax        # 605fe8 <__gmon_start__@Base>
  400ba7:	48 85 c0             	test   %rax,%rax
  400baa:	74 02                	je     400bae <_init+0x16>
  400bac:	ff d0                	callq  *%rax
  400bae:	48 83 c4 08          	add    $0x8,%rsp
  400bb2:	c3                   	retq   

Disassembly of section .plt:

0000000000400bc0 <.plt>:
  400bc0:	ff 35 42 54 20 00    	pushq  0x205442(%rip)        # 606008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400bc6:	ff 25 44 54 20 00    	jmpq   *0x205444(%rip)        # 606010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400bcc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400bd0 <free@plt>:
  400bd0:	ff 25 42 54 20 00    	jmpq   *0x205442(%rip)        # 606018 <free@GLIBC_2.2.5>
  400bd6:	68 00 00 00 00       	pushq  $0x0
  400bdb:	e9 e0 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400be0 <putchar@plt>:
  400be0:	ff 25 3a 54 20 00    	jmpq   *0x20543a(%rip)        # 606020 <putchar@GLIBC_2.2.5>
  400be6:	68 01 00 00 00       	pushq  $0x1
  400beb:	e9 d0 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400bf0 <abort@plt>:
  400bf0:	ff 25 32 54 20 00    	jmpq   *0x205432(%rip)        # 606028 <abort@GLIBC_2.2.5>
  400bf6:	68 02 00 00 00       	pushq  $0x2
  400bfb:	e9 c0 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c00 <fclose@plt>:
  400c00:	ff 25 2a 54 20 00    	jmpq   *0x20542a(%rip)        # 606030 <fclose@GLIBC_2.2.5>
  400c06:	68 03 00 00 00       	pushq  $0x3
  400c0b:	e9 b0 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c10 <strlen@plt>:
  400c10:	ff 25 22 54 20 00    	jmpq   *0x205422(%rip)        # 606038 <strlen@GLIBC_2.2.5>
  400c16:	68 04 00 00 00       	pushq  $0x4
  400c1b:	e9 a0 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c20 <strchr@plt>:
  400c20:	ff 25 1a 54 20 00    	jmpq   *0x20541a(%rip)        # 606040 <strchr@GLIBC_2.2.5>
  400c26:	68 05 00 00 00       	pushq  $0x5
  400c2b:	e9 90 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c30 <printf@plt>:
  400c30:	ff 25 12 54 20 00    	jmpq   *0x205412(%rip)        # 606048 <printf@GLIBC_2.2.5>
  400c36:	68 06 00 00 00       	pushq  $0x6
  400c3b:	e9 80 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c40 <rewind@plt>:
  400c40:	ff 25 0a 54 20 00    	jmpq   *0x20540a(%rip)        # 606050 <rewind@GLIBC_2.2.5>
  400c46:	68 07 00 00 00       	pushq  $0x7
  400c4b:	e9 70 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c50 <_IO_putc@plt>:
  400c50:	ff 25 02 54 20 00    	jmpq   *0x205402(%rip)        # 606058 <_IO_putc@GLIBC_2.2.5>
  400c56:	68 08 00 00 00       	pushq  $0x8
  400c5b:	e9 60 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c60 <memset@plt>:
  400c60:	ff 25 fa 53 20 00    	jmpq   *0x2053fa(%rip)        # 606060 <memset@GLIBC_2.2.5>
  400c66:	68 09 00 00 00       	pushq  $0x9
  400c6b:	e9 50 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c70 <_setjmp@plt>:
  400c70:	ff 25 f2 53 20 00    	jmpq   *0x2053f2(%rip)        # 606068 <_setjmp@GLIBC_2.2.5>
  400c76:	68 0a 00 00 00       	pushq  $0xa
  400c7b:	e9 40 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c80 <calloc@plt>:
  400c80:	ff 25 ea 53 20 00    	jmpq   *0x2053ea(%rip)        # 606070 <calloc@GLIBC_2.2.5>
  400c86:	68 0b 00 00 00       	pushq  $0xb
  400c8b:	e9 30 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400c90 <fprintf@plt>:
  400c90:	ff 25 e2 53 20 00    	jmpq   *0x2053e2(%rip)        # 606078 <fprintf@GLIBC_2.2.5>
  400c96:	68 0c 00 00 00       	pushq  $0xc
  400c9b:	e9 20 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400ca0 <ftell@plt>:
  400ca0:	ff 25 da 53 20 00    	jmpq   *0x2053da(%rip)        # 606080 <ftell@GLIBC_2.2.5>
  400ca6:	68 0d 00 00 00       	pushq  $0xd
  400cab:	e9 10 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400cb0 <malloc@plt>:
  400cb0:	ff 25 d2 53 20 00    	jmpq   *0x2053d2(%rip)        # 606088 <malloc@GLIBC_2.2.5>
  400cb6:	68 0e 00 00 00       	pushq  $0xe
  400cbb:	e9 00 ff ff ff       	jmpq   400bc0 <.plt>

0000000000400cc0 <fflush@plt>:
  400cc0:	ff 25 ca 53 20 00    	jmpq   *0x2053ca(%rip)        # 606090 <fflush@GLIBC_2.2.5>
  400cc6:	68 0f 00 00 00       	pushq  $0xf
  400ccb:	e9 f0 fe ff ff       	jmpq   400bc0 <.plt>

0000000000400cd0 <fseek@plt>:
  400cd0:	ff 25 c2 53 20 00    	jmpq   *0x2053c2(%rip)        # 606098 <fseek@GLIBC_2.2.5>
  400cd6:	68 10 00 00 00       	pushq  $0x10
  400cdb:	e9 e0 fe ff ff       	jmpq   400bc0 <.plt>

0000000000400ce0 <realloc@plt>:
  400ce0:	ff 25 ba 53 20 00    	jmpq   *0x2053ba(%rip)        # 6060a0 <realloc@GLIBC_2.2.5>
  400ce6:	68 11 00 00 00       	pushq  $0x11
  400ceb:	e9 d0 fe ff ff       	jmpq   400bc0 <.plt>

0000000000400cf0 <longjmp@plt>:
  400cf0:	ff 25 b2 53 20 00    	jmpq   *0x2053b2(%rip)        # 6060a8 <longjmp@GLIBC_2.2.5>
  400cf6:	68 12 00 00 00       	pushq  $0x12
  400cfb:	e9 c0 fe ff ff       	jmpq   400bc0 <.plt>

0000000000400d00 <fopen@plt>:
  400d00:	ff 25 aa 53 20 00    	jmpq   *0x2053aa(%rip)        # 6060b0 <fopen@GLIBC_2.2.5>
  400d06:	68 13 00 00 00       	pushq  $0x13
  400d0b:	e9 b0 fe ff ff       	jmpq   400bc0 <.plt>

0000000000400d10 <sprintf@plt>:
  400d10:	ff 25 a2 53 20 00    	jmpq   *0x2053a2(%rip)        # 6060b8 <sprintf@GLIBC_2.2.5>
  400d16:	68 14 00 00 00       	pushq  $0x14
  400d1b:	e9 a0 fe ff ff       	jmpq   400bc0 <.plt>

0000000000400d20 <exit@plt>:
  400d20:	ff 25 9a 53 20 00    	jmpq   *0x20539a(%rip)        # 6060c0 <exit@GLIBC_2.2.5>
  400d26:	68 15 00 00 00       	pushq  $0x15
  400d2b:	e9 90 fe ff ff       	jmpq   400bc0 <.plt>

0000000000400d30 <fwrite@plt>:
  400d30:	ff 25 92 53 20 00    	jmpq   *0x205392(%rip)        # 6060c8 <fwrite@GLIBC_2.2.5>
  400d36:	68 16 00 00 00       	pushq  $0x16
  400d3b:	e9 80 fe ff ff       	jmpq   400bc0 <.plt>

0000000000400d40 <getc@plt>:
  400d40:	ff 25 8a 53 20 00    	jmpq   *0x20538a(%rip)        # 6060d0 <getc@GLIBC_2.2.5>
  400d46:	68 17 00 00 00       	pushq  $0x17
  400d4b:	e9 70 fe ff ff       	jmpq   400bc0 <.plt>

0000000000400d50 <__ctype_b_loc@plt>:
  400d50:	ff 25 82 53 20 00    	jmpq   *0x205382(%rip)        # 6060d8 <__ctype_b_loc@GLIBC_2.3>
  400d56:	68 18 00 00 00       	pushq  $0x18
  400d5b:	e9 60 fe ff ff       	jmpq   400bc0 <.plt>

Disassembly of section .text:

0000000000400d60 <main>:
  400d60:	48 83 ec 08          	sub    $0x8,%rsp
  400d64:	83 ff 02             	cmp    $0x2,%edi
  400d67:	74 25                	je     400d8e <main+0x2e>
  400d69:	ba 1c 00 00 00       	mov    $0x1c,%edx
  400d6e:	be 01 00 00 00       	mov    $0x1,%esi
  400d73:	bf 86 49 40 00       	mov    $0x404986,%edi
  400d78:	48 8b 0d e1 5b 20 00 	mov    0x205be1(%rip),%rcx        # 606960 <stderr@@GLIBC_2.2.5>
  400d7f:	e8 ac ff ff ff       	callq  400d30 <fwrite@plt>
  400d84:	b8 01 00 00 00       	mov    $0x1,%eax
  400d89:	48 83 c4 08          	add    $0x8,%rsp
  400d8d:	c3                   	retq   
  400d8e:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400d92:	be a3 49 40 00       	mov    $0x4049a3,%esi
  400d97:	e8 64 ff ff ff       	callq  400d00 <fopen@plt>
  400d9c:	48 85 c0             	test   %rax,%rax
  400d9f:	75 1d                	jne    400dbe <main+0x5e>
  400da1:	ba 1a 00 00 00       	mov    $0x1a,%edx
  400da6:	be 01 00 00 00       	mov    $0x1,%esi
  400dab:	bf a5 49 40 00       	mov    $0x4049a5,%edi
  400db0:	48 8b 0d a9 5b 20 00 	mov    0x205ba9(%rip),%rcx        # 606960 <stderr@@GLIBC_2.2.5>
  400db7:	e8 74 ff ff ff       	callq  400d30 <fwrite@plt>
  400dbc:	eb c6                	jmp    400d84 <main+0x24>
  400dbe:	48 89 c7             	mov    %rax,%rdi
  400dc1:	e8 7a 08 00 00       	callq  401640 <start_um>

0000000000400dc6 <.annobin_elf_init.c.hot>:
  400dc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400dcd:	00 00 00 

0000000000400dd0 <_start>:
  400dd0:	f3 0f 1e fa          	endbr64 
  400dd4:	31 ed                	xor    %ebp,%ebp
  400dd6:	49 89 d1             	mov    %rdx,%r9
  400dd9:	5e                   	pop    %rsi
  400dda:	48 89 e2             	mov    %rsp,%rdx
  400ddd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400de1:	50                   	push   %rax
  400de2:	54                   	push   %rsp
  400de3:	49 c7 c0 60 49 40 00 	mov    $0x404960,%r8
  400dea:	48 c7 c1 f0 48 40 00 	mov    $0x4048f0,%rcx
  400df1:	48 c7 c7 60 0d 40 00 	mov    $0x400d60,%rdi
  400df8:	ff 15 e2 51 20 00    	callq  *0x2051e2(%rip)        # 605fe0 <__libc_start_main@GLIBC_2.2.5>
  400dfe:	f4                   	hlt    

0000000000400dff <.annobin_init.c>:
  400dff:	90                   	nop

0000000000400e00 <_dl_relocate_static_pie>:
  400e00:	f3 0f 1e fa          	endbr64 
  400e04:	c3                   	retq   

0000000000400e05 <.annobin__dl_relocate_static_pie.end>:
  400e05:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e0c:	00 00 00 
  400e0f:	90                   	nop

0000000000400e10 <deregister_tm_clones>:
  400e10:	48 8d 3d 19 5b 20 00 	lea    0x205b19(%rip),%rdi        # 606930 <__TMC_END__>
  400e17:	48 8d 05 12 5b 20 00 	lea    0x205b12(%rip),%rax        # 606930 <__TMC_END__>
  400e1e:	48 39 f8             	cmp    %rdi,%rax
  400e21:	74 15                	je     400e38 <deregister_tm_clones+0x28>
  400e23:	48 8b 05 a6 51 20 00 	mov    0x2051a6(%rip),%rax        # 605fd0 <_ITM_deregisterTMCloneTable@Base>
  400e2a:	48 85 c0             	test   %rax,%rax
  400e2d:	74 09                	je     400e38 <deregister_tm_clones+0x28>
  400e2f:	ff e0                	jmpq   *%rax
  400e31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400e38:	c3                   	retq   
  400e39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400e40 <register_tm_clones>:
  400e40:	48 8d 3d e9 5a 20 00 	lea    0x205ae9(%rip),%rdi        # 606930 <__TMC_END__>
  400e47:	48 8d 35 e2 5a 20 00 	lea    0x205ae2(%rip),%rsi        # 606930 <__TMC_END__>
  400e4e:	48 29 fe             	sub    %rdi,%rsi
  400e51:	48 89 f0             	mov    %rsi,%rax
  400e54:	48 c1 ee 3f          	shr    $0x3f,%rsi
  400e58:	48 c1 f8 03          	sar    $0x3,%rax
  400e5c:	48 01 c6             	add    %rax,%rsi
  400e5f:	48 d1 fe             	sar    %rsi
  400e62:	74 14                	je     400e78 <register_tm_clones+0x38>
  400e64:	48 8b 05 85 51 20 00 	mov    0x205185(%rip),%rax        # 605ff0 <_ITM_registerTMCloneTable@Base>
  400e6b:	48 85 c0             	test   %rax,%rax
  400e6e:	74 08                	je     400e78 <register_tm_clones+0x38>
  400e70:	ff e0                	jmpq   *%rax
  400e72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400e78:	c3                   	retq   
  400e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400e80 <__do_global_dtors_aux>:
  400e80:	f3 0f 1e fa          	endbr64 
  400e84:	80 3d dd 5a 20 00 00 	cmpb   $0x0,0x205add(%rip)        # 606968 <completed.0>
  400e8b:	75 13                	jne    400ea0 <__do_global_dtors_aux+0x20>
  400e8d:	55                   	push   %rbp
  400e8e:	48 89 e5             	mov    %rsp,%rbp
  400e91:	e8 7a ff ff ff       	callq  400e10 <deregister_tm_clones>
  400e96:	c6 05 cb 5a 20 00 01 	movb   $0x1,0x205acb(%rip)        # 606968 <completed.0>
  400e9d:	5d                   	pop    %rbp
  400e9e:	c3                   	retq   
  400e9f:	90                   	nop
  400ea0:	c3                   	retq   
  400ea1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400ea8:	00 00 00 00 
  400eac:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400eb0 <frame_dummy>:
  400eb0:	f3 0f 1e fa          	endbr64 
  400eb4:	eb 8a                	jmp    400e40 <register_tm_clones>
  400eb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400ebd:	00 00 00 

0000000000400ec0 <load_program.part.0>:
  400ec0:	41 55                	push   %r13
  400ec2:	41 54                	push   %r12
  400ec4:	41 89 fc             	mov    %edi,%r12d
  400ec7:	55                   	push   %rbp
  400ec8:	53                   	push   %rbx
  400ec9:	48 83 ec 08          	sub    $0x8,%rsp
  400ecd:	48 8b 05 bc 5a 20 00 	mov    0x205abc(%rip),%rax        # 606990 <segment_lengths>
  400ed4:	42 8b 1c a0          	mov    (%rax,%r12,4),%ebx
  400ed8:	48 8b 05 c1 5a 20 00 	mov    0x205ac1(%rip),%rax        # 6069a0 <segment_sequence>
  400edf:	48 8b 38             	mov    (%rax),%rdi
  400ee2:	48 89 dd             	mov    %rbx,%rbp
  400ee5:	e8 e6 fc ff ff       	callq  400bd0 <free@plt>
  400eea:	4c 8b 2d af 5a 20 00 	mov    0x205aaf(%rip),%r13        # 6069a0 <segment_sequence>
  400ef1:	48 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%rdi
  400ef8:	00 
  400ef9:	e8 b2 fd ff ff       	callq  400cb0 <malloc@plt>
  400efe:	49 89 45 00          	mov    %rax,0x0(%r13)
  400f02:	85 db                	test   %ebx,%ebx
  400f04:	74 19                	je     400f1f <load_program.part.0+0x5f>
  400f06:	4b 8b 74 e5 00       	mov    0x0(%r13,%r12,8),%rsi
  400f0b:	31 d2                	xor    %edx,%edx
  400f0d:	0f 1f 00             	nopl   (%rax)
  400f10:	8b 0c 96             	mov    (%rsi,%rdx,4),%ecx
  400f13:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  400f16:	48 83 c2 01          	add    $0x1,%rdx
  400f1a:	48 39 da             	cmp    %rbx,%rdx
  400f1d:	75 f1                	jne    400f10 <load_program.part.0+0x50>
  400f1f:	48 8b 05 6a 5a 20 00 	mov    0x205a6a(%rip),%rax        # 606990 <segment_lengths>
  400f26:	89 28                	mov    %ebp,(%rax)
  400f28:	48 83 c4 08          	add    $0x8,%rsp
  400f2c:	5b                   	pop    %rbx
  400f2d:	5d                   	pop    %rbp
  400f2e:	41 5c                	pop    %r12
  400f30:	41 5d                	pop    %r13
  400f32:	c3                   	retq   
  400f33:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  400f3a:	00 00 00 00 
  400f3e:	66 90                	xchg   %ax,%ax

0000000000400f40 <load_initial_segment>:
  400f40:	41 56                	push   %r14
  400f42:	ba 02 00 00 00       	mov    $0x2,%edx
  400f47:	31 f6                	xor    %esi,%esi
  400f49:	41 55                	push   %r13
  400f4b:	41 54                	push   %r12
  400f4d:	49 89 fc             	mov    %rdi,%r12
  400f50:	55                   	push   %rbp
  400f51:	53                   	push   %rbx
  400f52:	e8 79 fd ff ff       	callq  400cd0 <fseek@plt>
  400f57:	4c 89 e7             	mov    %r12,%rdi
  400f5a:	e8 41 fd ff ff       	callq  400ca0 <ftell@plt>
  400f5f:	4c 89 e7             	mov    %r12,%rdi
  400f62:	49 89 c6             	mov    %rax,%r14
  400f65:	e8 d6 fc ff ff       	callq  400c40 <rewind@plt>
  400f6a:	49 63 fe             	movslq %r14d,%rdi
  400f6d:	48 c1 e7 02          	shl    $0x2,%rdi
  400f71:	e8 3a fd ff ff       	callq  400cb0 <malloc@plt>
  400f76:	49 89 c5             	mov    %rax,%r13
  400f79:	48 85 c0             	test   %rax,%rax
  400f7c:	0f 84 02 01 00 00    	je     401084 <load_initial_segment+0x144>
  400f82:	4c 89 e7             	mov    %r12,%rdi
  400f85:	e8 b6 fd ff ff       	callq  400d40 <getc@plt>
  400f8a:	83 f8 ff             	cmp    $0xffffffff,%eax
  400f8d:	74 64                	je     400ff3 <load_initial_segment+0xb3>
  400f8f:	31 db                	xor    %ebx,%ebx
  400f91:	31 ed                	xor    %ebp,%ebp
  400f93:	eb 2e                	jmp    400fc3 <load_initial_segment+0x83>
  400f95:	0f 1f 00             	nopl   (%rax)
  400f98:	83 fa 01             	cmp    $0x1,%edx
  400f9b:	0f 84 7f 00 00 00    	je     401020 <load_initial_segment+0xe0>
  400fa1:	83 fa 02             	cmp    $0x2,%edx
  400fa4:	0f 84 96 00 00 00    	je     401040 <load_initial_segment+0x100>
  400faa:	83 fa 03             	cmp    $0x3,%edx
  400fad:	0f 84 ad 00 00 00    	je     401060 <load_initial_segment+0x120>
  400fb3:	4c 89 e7             	mov    %r12,%rdi
  400fb6:	83 c3 01             	add    $0x1,%ebx
  400fb9:	e8 82 fd ff ff       	callq  400d40 <getc@plt>
  400fbe:	83 f8 ff             	cmp    $0xffffffff,%eax
  400fc1:	74 30                	je     400ff3 <load_initial_segment+0xb3>
  400fc3:	89 da                	mov    %ebx,%edx
  400fc5:	0f b6 c8             	movzbl %al,%ecx
  400fc8:	83 e2 03             	and    $0x3,%edx
  400fcb:	75 cb                	jne    400f98 <load_initial_segment+0x58>
  400fcd:	89 ef                	mov    %ebp,%edi
  400fcf:	0f b6 c8             	movzbl %al,%ecx
  400fd2:	ba 18 00 00 00       	mov    $0x18,%edx
  400fd7:	be 08 00 00 00       	mov    $0x8,%esi
  400fdc:	e8 4f 0a 00 00       	callq  401a30 <Bitpack_newu>
  400fe1:	4c 89 e7             	mov    %r12,%rdi
  400fe4:	83 c3 01             	add    $0x1,%ebx
  400fe7:	89 c5                	mov    %eax,%ebp
  400fe9:	e8 52 fd ff ff       	callq  400d40 <getc@plt>
  400fee:	83 f8 ff             	cmp    $0xffffffff,%eax
  400ff1:	75 d0                	jne    400fc3 <load_initial_segment+0x83>
  400ff3:	4c 89 e7             	mov    %r12,%rdi
  400ff6:	e8 05 fc ff ff       	callq  400c00 <fclose@plt>
  400ffb:	48 8b 05 9e 59 20 00 	mov    0x20599e(%rip),%rax        # 6069a0 <segment_sequence>
  401002:	4c 89 28             	mov    %r13,(%rax)
  401005:	48 8b 05 84 59 20 00 	mov    0x205984(%rip),%rax        # 606990 <segment_lengths>
  40100c:	44 89 30             	mov    %r14d,(%rax)
  40100f:	5b                   	pop    %rbx
  401010:	83 05 85 59 20 00 01 	addl   $0x1,0x205985(%rip)        # 60699c <seq_size>
  401017:	5d                   	pop    %rbp
  401018:	41 5c                	pop    %r12
  40101a:	41 5d                	pop    %r13
  40101c:	41 5e                	pop    %r14
  40101e:	c3                   	retq   
  40101f:	90                   	nop
  401020:	89 ef                	mov    %ebp,%edi
  401022:	ba 10 00 00 00       	mov    $0x10,%edx
  401027:	be 08 00 00 00       	mov    $0x8,%esi
  40102c:	e8 ff 09 00 00       	callq  401a30 <Bitpack_newu>
  401031:	89 c5                	mov    %eax,%ebp
  401033:	e9 7b ff ff ff       	jmpq   400fb3 <load_initial_segment+0x73>
  401038:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40103f:	00 
  401040:	89 ef                	mov    %ebp,%edi
  401042:	ba 08 00 00 00       	mov    $0x8,%edx
  401047:	be 08 00 00 00       	mov    $0x8,%esi
  40104c:	e8 df 09 00 00       	callq  401a30 <Bitpack_newu>
  401051:	89 c5                	mov    %eax,%ebp
  401053:	e9 5b ff ff ff       	jmpq   400fb3 <load_initial_segment+0x73>
  401058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40105f:	00 
  401060:	89 ef                	mov    %ebp,%edi
  401062:	31 d2                	xor    %edx,%edx
  401064:	be 08 00 00 00       	mov    $0x8,%esi
  401069:	31 ed                	xor    %ebp,%ebp
  40106b:	e8 c0 09 00 00       	callq  401a30 <Bitpack_newu>
  401070:	49 89 c0             	mov    %rax,%r8
  401073:	89 d8                	mov    %ebx,%eax
  401075:	c1 f8 02             	sar    $0x2,%eax
  401078:	48 98                	cltq   
  40107a:	45 89 44 85 00       	mov    %r8d,0x0(%r13,%rax,4)
  40107f:	e9 2f ff ff ff       	jmpq   400fb3 <load_initial_segment+0x73>
  401084:	ba 8e 00 00 00       	mov    $0x8e,%edx
  401089:	be 7c 49 40 00       	mov    $0x40497c,%esi
  40108e:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401093:	e8 68 06 00 00       	callq  401700 <Except_raise>
  401098:	e9 e5 fe ff ff       	jmpq   400f82 <load_initial_segment+0x42>
  40109d:	0f 1f 00             	nopl   (%rax)

00000000004010a0 <initialize_memory>:
  4010a0:	55                   	push   %rbp
  4010a1:	48 89 fd             	mov    %rdi,%rbp
  4010a4:	bf 00 04 00 00       	mov    $0x400,%edi
  4010a9:	c7 05 e5 58 20 00 80 	movl   $0x80,0x2058e5(%rip)        # 606998 <seq_capacity>
  4010b0:	00 00 00 
  4010b3:	e8 f8 fb ff ff       	callq  400cb0 <malloc@plt>
  4010b8:	48 89 05 e1 58 20 00 	mov    %rax,0x2058e1(%rip)        # 6069a0 <segment_sequence>
  4010bf:	48 85 c0             	test   %rax,%rax
  4010c2:	74 40                	je     401104 <initialize_memory+0x64>
  4010c4:	bf 00 02 00 00       	mov    $0x200,%edi
  4010c9:	e8 e2 fb ff ff       	callq  400cb0 <malloc@plt>
  4010ce:	48 89 05 bb 58 20 00 	mov    %rax,0x2058bb(%rip)        # 606990 <segment_lengths>
  4010d5:	48 85 c0             	test   %rax,%rax
  4010d8:	74 5f                	je     401139 <initialize_memory+0x99>
  4010da:	48 89 ef             	mov    %rbp,%rdi
  4010dd:	e8 5e fe ff ff       	callq  400f40 <load_initial_segment>
  4010e2:	bf 00 04 00 00       	mov    $0x400,%edi
  4010e7:	c7 05 8f 58 20 00 80 	movl   $0x80,0x20588f(%rip)        # 606980 <rec_capacity>
  4010ee:	00 00 00 
  4010f1:	e8 ba fb ff ff       	callq  400cb0 <malloc@plt>
  4010f6:	48 89 05 8b 58 20 00 	mov    %rax,0x20588b(%rip)        # 606988 <recycled_ids>
  4010fd:	48 85 c0             	test   %rax,%rax
  401100:	74 22                	je     401124 <initialize_memory+0x84>
  401102:	5d                   	pop    %rbp
  401103:	c3                   	retq   
  401104:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401109:	ba 77 00 00 00       	mov    $0x77,%edx
  40110e:	be 7c 49 40 00       	mov    $0x40497c,%esi
  401113:	e8 e8 05 00 00       	callq  401700 <Except_raise>
  401118:	8b 3d 7a 58 20 00    	mov    0x20587a(%rip),%edi        # 606998 <seq_capacity>
  40111e:	48 c1 e7 02          	shl    $0x2,%rdi
  401122:	eb a5                	jmp    4010c9 <initialize_memory+0x29>
  401124:	ba 80 00 00 00       	mov    $0x80,%edx
  401129:	be 7c 49 40 00       	mov    $0x40497c,%esi
  40112e:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401133:	5d                   	pop    %rbp
  401134:	e9 c7 05 00 00       	jmpq   401700 <Except_raise>
  401139:	ba 7a 00 00 00       	mov    $0x7a,%edx
  40113e:	be 7c 49 40 00       	mov    $0x40497c,%esi
  401143:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401148:	e8 b3 05 00 00       	callq  401700 <Except_raise>
  40114d:	eb 8b                	jmp    4010da <initialize_memory+0x3a>
  40114f:	90                   	nop

0000000000401150 <map_segment>:
  401150:	55                   	push   %rbp
  401151:	89 ff                	mov    %edi,%edi
  401153:	be 04 00 00 00       	mov    $0x4,%esi
  401158:	53                   	push   %rbx
  401159:	48 89 fb             	mov    %rdi,%rbx
  40115c:	48 83 ec 08          	sub    $0x8,%rsp
  401160:	e8 1b fb ff ff       	callq  400c80 <calloc@plt>
  401165:	48 8b 3d 34 58 20 00 	mov    0x205834(%rip),%rdi        # 6069a0 <segment_sequence>
  40116c:	48 89 c5             	mov    %rax,%rbp
  40116f:	8b 05 0f 58 20 00    	mov    0x20580f(%rip),%eax        # 606984 <rec_size>
  401175:	85 c0                	test   %eax,%eax
  401177:	75 37                	jne    4011b0 <map_segment+0x60>
  401179:	8b 05 1d 58 20 00    	mov    0x20581d(%rip),%eax        # 60699c <seq_size>
  40117f:	3b 05 13 58 20 00    	cmp    0x205813(%rip),%eax        # 606998 <seq_capacity>
  401185:	74 51                	je     4011d8 <map_segment+0x88>
  401187:	89 c2                	mov    %eax,%edx
  401189:	8d 48 01             	lea    0x1(%rax),%ecx
  40118c:	48 89 2c d7          	mov    %rbp,(%rdi,%rdx,8)
  401190:	89 0d 06 58 20 00    	mov    %ecx,0x205806(%rip)        # 60699c <seq_size>
  401196:	48 8b 0d f3 57 20 00 	mov    0x2057f3(%rip),%rcx        # 606990 <segment_lengths>
  40119d:	89 1c 91             	mov    %ebx,(%rcx,%rdx,4)
  4011a0:	48 83 c4 08          	add    $0x8,%rsp
  4011a4:	5b                   	pop    %rbx
  4011a5:	5d                   	pop    %rbp
  4011a6:	c3                   	retq   
  4011a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4011ae:	00 00 
  4011b0:	48 8b 15 d1 57 20 00 	mov    0x2057d1(%rip),%rdx        # 606988 <recycled_ids>
  4011b7:	83 e8 01             	sub    $0x1,%eax
  4011ba:	89 05 c4 57 20 00    	mov    %eax,0x2057c4(%rip)        # 606984 <rec_size>
  4011c0:	48 8d 14 82          	lea    (%rdx,%rax,4),%rdx
  4011c4:	8b 02                	mov    (%rdx),%eax
  4011c6:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
  4011cc:	89 c2                	mov    %eax,%edx
  4011ce:	48 89 2c d7          	mov    %rbp,(%rdi,%rdx,8)
  4011d2:	eb c2                	jmp    401196 <map_segment+0x46>
  4011d4:	0f 1f 40 00          	nopl   0x0(%rax)
  4011d8:	8d 74 00 02          	lea    0x2(%rax,%rax,1),%esi
  4011dc:	89 35 b6 57 20 00    	mov    %esi,0x2057b6(%rip)        # 606998 <seq_capacity>
  4011e2:	48 c1 e6 03          	shl    $0x3,%rsi
  4011e6:	e8 f5 fa ff ff       	callq  400ce0 <realloc@plt>
  4011eb:	8b 35 a7 57 20 00    	mov    0x2057a7(%rip),%esi        # 606998 <seq_capacity>
  4011f1:	48 8b 3d 98 57 20 00 	mov    0x205798(%rip),%rdi        # 606990 <segment_lengths>
  4011f8:	48 89 05 a1 57 20 00 	mov    %rax,0x2057a1(%rip)        # 6069a0 <segment_sequence>
  4011ff:	48 c1 e6 02          	shl    $0x2,%rsi
  401203:	e8 d8 fa ff ff       	callq  400ce0 <realloc@plt>
  401208:	48 8b 3d 91 57 20 00 	mov    0x205791(%rip),%rdi        # 6069a0 <segment_sequence>
  40120f:	48 89 05 7a 57 20 00 	mov    %rax,0x20577a(%rip)        # 606990 <segment_lengths>
  401216:	8b 05 80 57 20 00    	mov    0x205780(%rip),%eax        # 60699c <seq_size>
  40121c:	e9 66 ff ff ff       	jmpq   401187 <map_segment+0x37>
  401221:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401228:	00 00 00 00 
  40122c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401230 <unmap_segment>:
  401230:	55                   	push   %rbp
  401231:	89 fd                	mov    %edi,%ebp
  401233:	53                   	push   %rbx
  401234:	48 89 eb             	mov    %rbp,%rbx
  401237:	48 83 ec 08          	sub    $0x8,%rsp
  40123b:	48 8b 05 5e 57 20 00 	mov    0x20575e(%rip),%rax        # 6069a0 <segment_sequence>
  401242:	48 8b 3c e8          	mov    (%rax,%rbp,8),%rdi
  401246:	e8 85 f9 ff ff       	callq  400bd0 <free@plt>
  40124b:	48 8b 05 4e 57 20 00 	mov    0x20574e(%rip),%rax        # 6069a0 <segment_sequence>
  401252:	8b 15 2c 57 20 00    	mov    0x20572c(%rip),%edx        # 606984 <rec_size>
  401258:	3b 15 22 57 20 00    	cmp    0x205722(%rip),%edx        # 606980 <rec_capacity>
  40125e:	48 c7 04 e8 00 00 00 	movq   $0x0,(%rax,%rbp,8)
  401265:	00 
  401266:	74 28                	je     401290 <unmap_segment+0x60>
  401268:	48 8b 05 19 57 20 00 	mov    0x205719(%rip),%rax        # 606988 <recycled_ids>
  40126f:	89 1c 90             	mov    %ebx,(%rax,%rdx,4)
  401272:	48 8b 05 17 57 20 00 	mov    0x205717(%rip),%rax        # 606990 <segment_lengths>
  401279:	c7 04 a8 00 00 00 00 	movl   $0x0,(%rax,%rbp,4)
  401280:	83 05 fd 56 20 00 01 	addl   $0x1,0x2056fd(%rip)        # 606984 <rec_size>
  401287:	48 83 c4 08          	add    $0x8,%rsp
  40128b:	5b                   	pop    %rbx
  40128c:	5d                   	pop    %rbp
  40128d:	c3                   	retq   
  40128e:	66 90                	xchg   %ax,%ax
  401290:	8d 74 12 02          	lea    0x2(%rdx,%rdx,1),%esi
  401294:	48 8b 3d ed 56 20 00 	mov    0x2056ed(%rip),%rdi        # 606988 <recycled_ids>
  40129b:	89 35 df 56 20 00    	mov    %esi,0x2056df(%rip)        # 606980 <rec_capacity>
  4012a1:	48 c1 e6 02          	shl    $0x2,%rsi
  4012a5:	e8 36 fa ff ff       	callq  400ce0 <realloc@plt>
  4012aa:	8b 15 d4 56 20 00    	mov    0x2056d4(%rip),%edx        # 606984 <rec_size>
  4012b0:	48 89 05 d1 56 20 00 	mov    %rax,0x2056d1(%rip)        # 606988 <recycled_ids>
  4012b7:	eb b6                	jmp    40126f <unmap_segment+0x3f>
  4012b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004012c0 <segmented_load>:
  4012c0:	48 8b 05 d9 56 20 00 	mov    0x2056d9(%rip),%rax        # 6069a0 <segment_sequence>
  4012c7:	89 ff                	mov    %edi,%edi
  4012c9:	89 f6                	mov    %esi,%esi
  4012cb:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
  4012cf:	8b 04 b0             	mov    (%rax,%rsi,4),%eax
  4012d2:	c3                   	retq   
  4012d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4012da:	00 00 00 00 
  4012de:	66 90                	xchg   %ax,%ax

00000000004012e0 <segmented_store>:
  4012e0:	48 8b 05 b9 56 20 00 	mov    0x2056b9(%rip),%rax        # 6069a0 <segment_sequence>
  4012e7:	89 ff                	mov    %edi,%edi
  4012e9:	89 f6                	mov    %esi,%esi
  4012eb:	48 8b 04 f8          	mov    (%rax,%rdi,8),%rax
  4012ef:	89 14 b0             	mov    %edx,(%rax,%rsi,4)
  4012f2:	c3                   	retq   
  4012f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4012fa:	00 00 00 00 
  4012fe:	66 90                	xchg   %ax,%ax

0000000000401300 <load_program>:
  401300:	85 ff                	test   %edi,%edi
  401302:	75 04                	jne    401308 <load_program+0x8>
  401304:	c3                   	retq   
  401305:	0f 1f 00             	nopl   (%rax)
  401308:	e9 b3 fb ff ff       	jmpq   400ec0 <load_program.part.0>
  40130d:	0f 1f 00             	nopl   (%rax)

0000000000401310 <handle_halt>:
  401310:	8b 05 86 56 20 00    	mov    0x205686(%rip),%eax        # 60699c <seq_size>
  401316:	4c 8b 05 83 56 20 00 	mov    0x205683(%rip),%r8        # 6069a0 <segment_sequence>
  40131d:	53                   	push   %rbx
  40131e:	85 c0                	test   %eax,%eax
  401320:	74 28                	je     40134a <handle_halt+0x3a>
  401322:	31 db                	xor    %ebx,%ebx
  401324:	0f 1f 40 00          	nopl   0x0(%rax)
  401328:	89 d8                	mov    %ebx,%eax
  40132a:	49 8b 3c c0          	mov    (%r8,%rax,8),%rdi
  40132e:	48 85 ff             	test   %rdi,%rdi
  401331:	74 0c                	je     40133f <handle_halt+0x2f>
  401333:	e8 98 f8 ff ff       	callq  400bd0 <free@plt>
  401338:	4c 8b 05 61 56 20 00 	mov    0x205661(%rip),%r8        # 6069a0 <segment_sequence>
  40133f:	83 c3 01             	add    $0x1,%ebx
  401342:	39 1d 54 56 20 00    	cmp    %ebx,0x205654(%rip)        # 60699c <seq_size>
  401348:	77 de                	ja     401328 <handle_halt+0x18>
  40134a:	4c 89 c7             	mov    %r8,%rdi
  40134d:	e8 7e f8 ff ff       	callq  400bd0 <free@plt>
  401352:	48 8b 3d 37 56 20 00 	mov    0x205637(%rip),%rdi        # 606990 <segment_lengths>
  401359:	e8 72 f8 ff ff       	callq  400bd0 <free@plt>
  40135e:	48 8b 3d 23 56 20 00 	mov    0x205623(%rip),%rdi        # 606988 <recycled_ids>
  401365:	e8 66 f8 ff ff       	callq  400bd0 <free@plt>
  40136a:	31 ff                	xor    %edi,%edi
  40136c:	e8 af f9 ff ff       	callq  400d20 <exit@plt>
  401371:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401378:	00 00 00 00 
  40137c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401380 <handle_instruction>:
  401380:	89 f8                	mov    %edi,%eax
  401382:	83 05 57 56 20 00 01 	addl   $0x1,0x205657(%rip)        # 6069e0 <program_counter>
  401389:	c1 e8 1c             	shr    $0x1c,%eax
  40138c:	83 f8 0d             	cmp    $0xd,%eax
  40138f:	74 67                	je     4013f8 <handle_instruction+0x78>
  401391:	55                   	push   %rbp
  401392:	89 fa                	mov    %edi,%edx
  401394:	89 fd                	mov    %edi,%ebp
  401396:	c1 ef 06             	shr    $0x6,%edi
  401399:	53                   	push   %rbx
  40139a:	c1 ea 03             	shr    $0x3,%edx
  40139d:	83 e5 07             	and    $0x7,%ebp
  4013a0:	89 d3                	mov    %edx,%ebx
  4013a2:	89 fa                	mov    %edi,%edx
  4013a4:	83 e3 07             	and    $0x7,%ebx
  4013a7:	83 e2 07             	and    $0x7,%edx
  4013aa:	48 83 ec 08          	sub    $0x8,%rsp
  4013ae:	83 f8 0d             	cmp    $0xd,%eax
  4013b1:	77 3b                	ja     4013ee <handle_instruction+0x6e>
  4013b3:	ff 24 c5 c0 49 40 00 	jmpq   *0x4049c0(,%rax,8)
  4013ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4013c0:	48 8b 3d 79 55 20 00 	mov    0x205579(%rip),%rdi        # 606940 <stdin@@GLIBC_2.2.5>
  4013c7:	e8 74 f9 ff ff       	callq  400d40 <getc@plt>
  4013cc:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  4013d1:	89 c3                	mov    %eax,%ebx
  4013d3:	83 f8 ff             	cmp    $0xffffffff,%eax
  4013d6:	74 0d                	je     4013e5 <handle_instruction+0x65>
  4013d8:	3d ff 00 00 00       	cmp    $0xff,%eax
  4013dd:	0f 8f 0d 02 00 00    	jg     4015f0 <handle_instruction+0x270>
  4013e3:	89 da                	mov    %ebx,%edx
  4013e5:	89 e8                	mov    %ebp,%eax
  4013e7:	89 14 85 c0 69 60 00 	mov    %edx,0x6069c0(,%rax,4)
  4013ee:	48 83 c4 08          	add    $0x8,%rsp
  4013f2:	5b                   	pop    %rbx
  4013f3:	5d                   	pop    %rbp
  4013f4:	c3                   	retq   
  4013f5:	0f 1f 00             	nopl   (%rax)
  4013f8:	89 fa                	mov    %edi,%edx
  4013fa:	81 e7 ff ff ff 01    	and    $0x1ffffff,%edi
  401400:	c1 ea 19             	shr    $0x19,%edx
  401403:	83 e2 07             	and    $0x7,%edx
  401406:	89 3c 95 c0 69 60 00 	mov    %edi,0x6069c0(,%rdx,4)
  40140d:	c3                   	retq   
  40140e:	66 90                	xchg   %ax,%ax
  401410:	89 da                	mov    %ebx,%edx
  401412:	8b 3c 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%edi
  401419:	85 ff                	test   %edi,%edi
  40141b:	0f 85 a7 01 00 00    	jne    4015c8 <handle_instruction+0x248>
  401421:	89 e8                	mov    %ebp,%eax
  401423:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  40142a:	89 05 b0 55 20 00    	mov    %eax,0x2055b0(%rip)        # 6069e0 <program_counter>
  401430:	eb bc                	jmp    4013ee <handle_instruction+0x6e>
  401432:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401438:	89 e8                	mov    %ebp,%eax
  40143a:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  401441:	85 c0                	test   %eax,%eax
  401443:	74 a9                	je     4013ee <handle_instruction+0x6e>
  401445:	8b 04 9d c0 69 60 00 	mov    0x6069c0(,%rbx,4),%eax
  40144c:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  401453:	eb 99                	jmp    4013ee <handle_instruction+0x6e>
  401455:	0f 1f 00             	nopl   (%rax)
  401458:	89 e8                	mov    %ebp,%eax
  40145a:	8b 34 9d c0 69 60 00 	mov    0x6069c0(,%rbx,4),%esi
  401461:	8b 0c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ecx
  401468:	48 8b 05 31 55 20 00 	mov    0x205531(%rip),%rax        # 6069a0 <segment_sequence>
  40146f:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
  401473:	8b 04 88             	mov    (%rax,%rcx,4),%eax
  401476:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  40147d:	e9 6c ff ff ff       	jmpq   4013ee <handle_instruction+0x6e>
  401482:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401488:	89 e8                	mov    %ebp,%eax
  40148a:	8b 34 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%esi
  401491:	89 da                	mov    %ebx,%edx
  401493:	8b 0c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ecx
  40149a:	48 8b 05 ff 54 20 00 	mov    0x2054ff(%rip),%rax        # 6069a0 <segment_sequence>
  4014a1:	8b 14 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%edx
  4014a8:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
  4014ac:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  4014af:	e9 3a ff ff ff       	jmpq   4013ee <handle_instruction+0x6e>
  4014b4:	0f 1f 40 00          	nopl   0x0(%rax)
  4014b8:	89 d1                	mov    %edx,%ecx
  4014ba:	89 e8                	mov    %ebp,%eax
  4014bc:	89 da                	mov    %ebx,%edx
  4014be:	8b 04 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%eax
  4014c5:	03 04 95 c0 69 60 00 	add    0x6069c0(,%rdx,4),%eax
  4014cc:	31 d2                	xor    %edx,%edx
  4014ce:	48 f7 35 1b 4c 20 00 	divq   0x204c1b(%rip)        # 6060f0 <power>
  4014d5:	89 14 8d c0 69 60 00 	mov    %edx,0x6069c0(,%rcx,4)
  4014dc:	e9 0d ff ff ff       	jmpq   4013ee <handle_instruction+0x6e>
  4014e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4014e8:	89 d1                	mov    %edx,%ecx
  4014ea:	89 da                	mov    %ebx,%edx
  4014ec:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  4014f3:	0f af 04 ad c0 69 60 	imul   0x6069c0(,%rbp,4),%eax
  4014fa:	00 
  4014fb:	31 d2                	xor    %edx,%edx
  4014fd:	48 f7 35 ec 4b 20 00 	divq   0x204bec(%rip)        # 6060f0 <power>
  401504:	89 14 8d c0 69 60 00 	mov    %edx,0x6069c0(,%rcx,4)
  40150b:	e9 de fe ff ff       	jmpq   4013ee <handle_instruction+0x6e>
  401510:	89 d1                	mov    %edx,%ecx
  401512:	89 da                	mov    %ebx,%edx
  401514:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  40151b:	31 d2                	xor    %edx,%edx
  40151d:	f7 34 ad c0 69 60 00 	divl   0x6069c0(,%rbp,4)
  401524:	89 04 8d c0 69 60 00 	mov    %eax,0x6069c0(,%rcx,4)
  40152b:	e9 be fe ff ff       	jmpq   4013ee <handle_instruction+0x6e>
  401530:	89 d1                	mov    %edx,%ecx
  401532:	89 da                	mov    %ebx,%edx
  401534:	8b 04 95 c0 69 60 00 	mov    0x6069c0(,%rdx,4),%eax
  40153b:	23 04 ad c0 69 60 00 	and    0x6069c0(,%rbp,4),%eax
  401542:	f7 d0                	not    %eax
  401544:	89 04 8d c0 69 60 00 	mov    %eax,0x6069c0(,%rcx,4)
  40154b:	e9 9e fe ff ff       	jmpq   4013ee <handle_instruction+0x6e>
  401550:	89 e8                	mov    %ebp,%eax
  401552:	8b 3c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%edi
  401559:	e8 f2 fb ff ff       	callq  401150 <map_segment>
  40155e:	89 da                	mov    %ebx,%edx
  401560:	89 04 95 c0 69 60 00 	mov    %eax,0x6069c0(,%rdx,4)
  401567:	e9 82 fe ff ff       	jmpq   4013ee <handle_instruction+0x6e>
  40156c:	0f 1f 40 00          	nopl   0x0(%rax)
  401570:	89 e8                	mov    %ebp,%eax
  401572:	8b 3c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%edi
  401579:	48 83 c4 08          	add    $0x8,%rsp
  40157d:	5b                   	pop    %rbx
  40157e:	5d                   	pop    %rbp
  40157f:	e9 ac fc ff ff       	jmpq   401230 <unmap_segment>
  401584:	0f 1f 40 00          	nopl   0x0(%rax)
  401588:	89 e8                	mov    %ebp,%eax
  40158a:	8b 1c 85 c0 69 60 00 	mov    0x6069c0(,%rax,4),%ebx
  401591:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
  401597:	77 3f                	ja     4015d8 <handle_instruction+0x258>
  401599:	48 83 c4 08          	add    $0x8,%rsp
  40159d:	0f b6 fb             	movzbl %bl,%edi
  4015a0:	5b                   	pop    %rbx
  4015a1:	5d                   	pop    %rbp
  4015a2:	e9 39 f6 ff ff       	jmpq   400be0 <putchar@plt>
  4015a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4015ae:	00 00 
  4015b0:	31 ff                	xor    %edi,%edi
  4015b2:	89 3c 95 c0 69 60 00 	mov    %edi,0x6069c0(,%rdx,4)
  4015b9:	e9 30 fe ff ff       	jmpq   4013ee <handle_instruction+0x6e>
  4015be:	31 c0                	xor    %eax,%eax
  4015c0:	e8 4b fd ff ff       	callq  401310 <handle_halt>
  4015c5:	0f 1f 00             	nopl   (%rax)
  4015c8:	e8 f3 f8 ff ff       	callq  400ec0 <load_program.part.0>
  4015cd:	e9 4f fe ff ff       	jmpq   401421 <handle_instruction+0xa1>
  4015d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4015d8:	ba 07 02 00 00       	mov    $0x207,%edx
  4015dd:	be 7c 49 40 00       	mov    $0x40497c,%esi
  4015e2:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4015e7:	e8 14 01 00 00       	callq  401700 <Except_raise>
  4015ec:	eb ab                	jmp    401599 <handle_instruction+0x219>
  4015ee:	66 90                	xchg   %ax,%ax
  4015f0:	ba 1f 02 00 00       	mov    $0x21f,%edx
  4015f5:	be 7c 49 40 00       	mov    $0x40497c,%esi
  4015fa:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4015ff:	e8 fc 00 00 00       	callq  401700 <Except_raise>
  401604:	e9 da fd ff ff       	jmpq   4013e3 <handle_instruction+0x63>
  401609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401610 <processor_cycle>:
  401610:	48 83 ec 08          	sub    $0x8,%rsp
  401614:	0f 1f 40 00          	nopl   0x0(%rax)
  401618:	48 8b 05 81 53 20 00 	mov    0x205381(%rip),%rax        # 6069a0 <segment_sequence>
  40161f:	8b 15 bb 53 20 00    	mov    0x2053bb(%rip),%edx        # 6069e0 <program_counter>
  401625:	48 8b 00             	mov    (%rax),%rax
  401628:	8b 3c 90             	mov    (%rax,%rdx,4),%edi
  40162b:	e8 50 fd ff ff       	callq  401380 <handle_instruction>
  401630:	eb e6                	jmp    401618 <processor_cycle+0x8>
  401632:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  401639:	00 00 00 00 
  40163d:	0f 1f 00             	nopl   (%rax)

0000000000401640 <start_um>:
  401640:	48 83 ec 08          	sub    $0x8,%rsp
  401644:	e8 57 fa ff ff       	callq  4010a0 <initialize_memory>
  401649:	31 c0                	xor    %eax,%eax
  40164b:	e8 c0 ff ff ff       	callq  401610 <processor_cycle>

0000000000401650 <output_register>:
  401650:	53                   	push   %rbx
  401651:	89 fb                	mov    %edi,%ebx
  401653:	81 ff ff 00 00 00    	cmp    $0xff,%edi
  401659:	77 0d                	ja     401668 <output_register+0x18>
  40165b:	0f b6 fb             	movzbl %bl,%edi
  40165e:	5b                   	pop    %rbx
  40165f:	e9 7c f5 ff ff       	jmpq   400be0 <putchar@plt>
  401664:	0f 1f 40 00          	nopl   0x0(%rax)
  401668:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  40166d:	ba 07 02 00 00       	mov    $0x207,%edx
  401672:	be 7c 49 40 00       	mov    $0x40497c,%esi
  401677:	e8 84 00 00 00       	callq  401700 <Except_raise>
  40167c:	0f b6 fb             	movzbl %bl,%edi
  40167f:	5b                   	pop    %rbx
  401680:	e9 5b f5 ff ff       	jmpq   400be0 <putchar@plt>
  401685:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40168c:	00 00 00 00 

0000000000401690 <read_in_to_register>:
  401690:	53                   	push   %rbx
  401691:	48 8b 3d a8 52 20 00 	mov    0x2052a8(%rip),%rdi        # 606940 <stdin@@GLIBC_2.2.5>
  401698:	e8 a3 f6 ff ff       	callq  400d40 <getc@plt>
  40169d:	89 c3                	mov    %eax,%ebx
  40169f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4016a4:	83 fb ff             	cmp    $0xffffffff,%ebx
  4016a7:	74 0a                	je     4016b3 <read_in_to_register+0x23>
  4016a9:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
  4016af:	7f 07                	jg     4016b8 <read_in_to_register+0x28>
  4016b1:	89 d8                	mov    %ebx,%eax
  4016b3:	5b                   	pop    %rbx
  4016b4:	c3                   	retq   
  4016b5:	0f 1f 00             	nopl   (%rax)
  4016b8:	ba 1f 02 00 00       	mov    $0x21f,%edx
  4016bd:	be 7c 49 40 00       	mov    $0x40497c,%esi
  4016c2:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4016c7:	e8 34 00 00 00       	callq  401700 <Except_raise>
  4016cc:	89 d8                	mov    %ebx,%eax
  4016ce:	eb e3                	jmp    4016b3 <read_in_to_register+0x23>

00000000004016d0 <assert>:
  4016d0:	85 ff                	test   %edi,%edi
  4016d2:	74 0c                	je     4016e0 <assert+0x10>
  4016d4:	f3 c3                	repz retq 
  4016d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4016dd:	00 00 00 
  4016e0:	48 8d 3d c1 46 20 00 	lea    0x2046c1(%rip),%rdi        # 605da8 <Assert_Failed>
  4016e7:	48 8d 35 61 33 00 00 	lea    0x3361(%rip),%rsi        # 404a4f <_IO_stdin_used+0xd7>
  4016ee:	ba 05 00 00 00       	mov    $0x5,%edx
  4016f3:	e9 08 00 00 00       	jmpq   401700 <Except_raise>
  4016f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4016ff:	00 

0000000000401700 <Except_raise>:
  401700:	48 89 5c 24 d8       	mov    %rbx,-0x28(%rsp)
  401705:	48 89 6c 24 e0       	mov    %rbp,-0x20(%rsp)
  40170a:	48 89 fb             	mov    %rdi,%rbx
  40170d:	4c 89 64 24 e8       	mov    %r12,-0x18(%rsp)
  401712:	4c 89 74 24 f8       	mov    %r14,-0x8(%rsp)
  401717:	49 89 f4             	mov    %rsi,%r12
  40171a:	4c 89 6c 24 f0       	mov    %r13,-0x10(%rsp)
  40171f:	48 83 ec 28          	sub    $0x28,%rsp
  401723:	4c 8d 35 be 52 20 00 	lea    0x2052be(%rip),%r14        # 6069e8 <Except_stack>
  40172a:	48 85 ff             	test   %rdi,%rdi
  40172d:	89 d5                	mov    %edx,%ebp
  40172f:	4d 8b 2e             	mov    (%r14),%r13
  401732:	0f 84 a8 00 00 00    	je     4017e0 <Except_raise+0xe0>
  401738:	4d 85 ed             	test   %r13,%r13
  40173b:	74 33                	je     401770 <Except_raise+0x70>
  40173d:	49 8b 06             	mov    (%r14),%rax
  401740:	49 8d 7d 08          	lea    0x8(%r13),%rdi
  401744:	49 89 9d e0 00 00 00 	mov    %rbx,0xe0(%r13)
  40174b:	4d 89 a5 d0 00 00 00 	mov    %r12,0xd0(%r13)
  401752:	41 89 ad d8 00 00 00 	mov    %ebp,0xd8(%r13)
  401759:	be 01 00 00 00       	mov    $0x1,%esi
  40175e:	48 8b 00             	mov    (%rax),%rax
  401761:	49 89 06             	mov    %rax,(%r14)
  401764:	e8 87 f5 ff ff       	callq  400cf0 <longjmp@plt>
  401769:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401770:	4c 8b 2d 81 48 20 00 	mov    0x204881(%rip),%r13        # 605ff8 <stderr@@GLIBC_2.2.5-0x968>
  401777:	48 8d 3d fc 32 00 00 	lea    0x32fc(%rip),%rdi        # 404a7a <_IO_stdin_used+0x102>
  40177e:	ba 12 00 00 00       	mov    $0x12,%edx
  401783:	be 01 00 00 00       	mov    $0x1,%esi
  401788:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  40178c:	e8 9f f5 ff ff       	callq  400d30 <fwrite@plt>
  401791:	48 8b 13             	mov    (%rbx),%rdx
  401794:	48 85 d2             	test   %rdx,%rdx
  401797:	0f 84 83 00 00 00    	je     401820 <Except_raise+0x120>
  40179d:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  4017a1:	48 8d 35 e5 32 00 00 	lea    0x32e5(%rip),%rsi        # 404a8d <_IO_stdin_used+0x115>
  4017a8:	31 c0                	xor    %eax,%eax
  4017aa:	e8 e1 f4 ff ff       	callq  400c90 <fprintf@plt>
  4017af:	85 ed                	test   %ebp,%ebp
  4017b1:	7f 4d                	jg     401800 <Except_raise+0x100>
  4017b3:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  4017b7:	48 8d 3d ee 32 00 00 	lea    0x32ee(%rip),%rdi        # 404aac <_IO_stdin_used+0x134>
  4017be:	ba 0c 00 00 00       	mov    $0xc,%edx
  4017c3:	be 01 00 00 00       	mov    $0x1,%esi
  4017c8:	e8 63 f5 ff ff       	callq  400d30 <fwrite@plt>
  4017cd:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  4017d1:	e8 ea f4 ff ff       	callq  400cc0 <fflush@plt>
  4017d6:	e8 15 f4 ff ff       	callq  400bf0 <abort@plt>
  4017db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4017e0:	48 8d 3d c1 45 20 00 	lea    0x2045c1(%rip),%rdi        # 605da8 <Assert_Failed>
  4017e7:	48 8d 35 7f 32 00 00 	lea    0x327f(%rip),%rsi        # 404a6d <_IO_stdin_used+0xf5>
  4017ee:	ba 13 00 00 00       	mov    $0x13,%edx
  4017f3:	e8 08 ff ff ff       	callq  401700 <Except_raise>
  4017f8:	e9 3b ff ff ff       	jmpq   401738 <Except_raise+0x38>
  4017fd:	0f 1f 00             	nopl   (%rax)
  401800:	4d 85 e4             	test   %r12,%r12
  401803:	74 ae                	je     4017b3 <Except_raise+0xb3>
  401805:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401809:	48 8d 35 8a 32 00 00 	lea    0x328a(%rip),%rsi        # 404a9a <_IO_stdin_used+0x122>
  401810:	89 e9                	mov    %ebp,%ecx
  401812:	4c 89 e2             	mov    %r12,%rdx
  401815:	31 c0                	xor    %eax,%eax
  401817:	e8 74 f4 ff ff       	callq  400c90 <fprintf@plt>
  40181c:	eb 95                	jmp    4017b3 <Except_raise+0xb3>
  40181e:	66 90                	xchg   %ax,%ax
  401820:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401824:	48 8d 35 66 32 00 00 	lea    0x3266(%rip),%rsi        # 404a91 <_IO_stdin_used+0x119>
  40182b:	48 89 da             	mov    %rbx,%rdx
  40182e:	31 c0                	xor    %eax,%eax
  401830:	e8 5b f4 ff ff       	callq  400c90 <fprintf@plt>
  401835:	e9 75 ff ff ff       	jmpq   4017af <Except_raise+0xaf>
  40183a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401840 <Bitpack_gets.part.0>:
  401840:	41 55                	push   %r13
  401842:	41 54                	push   %r12
  401844:	49 89 fc             	mov    %rdi,%r12
  401847:	55                   	push   %rbp
  401848:	89 f5                	mov    %esi,%ebp
  40184a:	53                   	push   %rbx
  40184b:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  40184e:	48 83 ec 08          	sub    $0x8,%rsp
  401852:	83 fb 40             	cmp    $0x40,%ebx
  401855:	77 49                	ja     4018a0 <Bitpack_gets.part.0+0x60>
  401857:	b9 40 00 00 00       	mov    $0x40,%ecx
  40185c:	89 c8                	mov    %ecx,%eax
  40185e:	29 d9                	sub    %ebx,%ecx
  401860:	29 e8                	sub    %ebp,%eax
  401862:	83 f9 40             	cmp    $0x40,%ecx
  401865:	41 89 cd             	mov    %ecx,%r13d
  401868:	89 c5                	mov    %eax,%ebp
  40186a:	77 74                	ja     4018e0 <Bitpack_gets.part.0+0xa0>
  40186c:	bb 00 00 00 00       	mov    $0x0,%ebx
  401871:	74 09                	je     40187c <Bitpack_gets.part.0+0x3c>
  401873:	4c 89 e3             	mov    %r12,%rbx
  401876:	44 89 e9             	mov    %r13d,%ecx
  401879:	48 d3 e3             	shl    %cl,%rbx
  40187c:	83 fd 40             	cmp    $0x40,%ebp
  40187f:	77 3f                	ja     4018c0 <Bitpack_gets.part.0+0x80>
  401881:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  401886:	74 02                	je     40188a <Bitpack_gets.part.0+0x4a>
  401888:	89 e9                	mov    %ebp,%ecx
  40188a:	48 83 c4 08          	add    $0x8,%rsp
  40188e:	48 89 d8             	mov    %rbx,%rax
  401891:	5b                   	pop    %rbx
  401892:	5d                   	pop    %rbp
  401893:	41 5c                	pop    %r12
  401895:	48 d3 f8             	sar    %cl,%rax
  401898:	41 5d                	pop    %r13
  40189a:	c3                   	retq   
  40189b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4018a0:	ba 50 00 00 00       	mov    $0x50,%edx
  4018a5:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  4018aa:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4018af:	e8 4c fe ff ff       	callq  401700 <Except_raise>
  4018b4:	eb a1                	jmp    401857 <Bitpack_gets.part.0+0x17>
  4018b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4018bd:	00 00 00 
  4018c0:	ba 2c 00 00 00       	mov    $0x2c,%edx
  4018c5:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  4018ca:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4018cf:	e8 2c fe ff ff       	callq  401700 <Except_raise>
  4018d4:	eb b2                	jmp    401888 <Bitpack_gets.part.0+0x48>
  4018d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4018dd:	00 00 00 
  4018e0:	ba 14 00 00 00       	mov    $0x14,%edx
  4018e5:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  4018ea:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4018ef:	e8 0c fe ff ff       	callq  401700 <Except_raise>
  4018f4:	e9 7a ff ff ff       	jmpq   401873 <Bitpack_gets.part.0+0x33>
  4018f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401900 <Bitpack_fitss>:
  401900:	83 fe 3f             	cmp    $0x3f,%esi
  401903:	b8 01 00 00 00       	mov    $0x1,%eax
  401908:	77 1d                	ja     401927 <Bitpack_fitss+0x27>
  40190a:	b9 40 00 00 00       	mov    $0x40,%ecx
  40190f:	31 c0                	xor    %eax,%eax
  401911:	29 f1                	sub    %esi,%ecx
  401913:	83 f9 40             	cmp    $0x40,%ecx
  401916:	74 09                	je     401921 <Bitpack_fitss+0x21>
  401918:	48 89 f8             	mov    %rdi,%rax
  40191b:	48 d3 e0             	shl    %cl,%rax
  40191e:	48 d3 f8             	sar    %cl,%rax
  401921:	48 39 c7             	cmp    %rax,%rdi
  401924:	0f 94 c0             	sete   %al
  401927:	f3 c3                	repz retq 
  401929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401930 <Bitpack_fitsu>:
  401930:	83 fe 3f             	cmp    $0x3f,%esi
  401933:	b8 01 00 00 00       	mov    $0x1,%eax
  401938:	77 0b                	ja     401945 <Bitpack_fitsu+0x15>
  40193a:	89 f1                	mov    %esi,%ecx
  40193c:	48 d3 ef             	shr    %cl,%rdi
  40193f:	48 85 ff             	test   %rdi,%rdi
  401942:	0f 94 c0             	sete   %al
  401945:	f3 c3                	repz retq 
  401947:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40194e:	00 00 

0000000000401950 <Bitpack_gets>:
  401950:	85 f6                	test   %esi,%esi
  401952:	74 0c                	je     401960 <Bitpack_gets+0x10>
  401954:	e9 e7 fe ff ff       	jmpq   401840 <Bitpack_gets.part.0>
  401959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401960:	31 c0                	xor    %eax,%eax
  401962:	c3                   	retq   
  401963:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  40196a:	84 00 00 00 00 00 

0000000000401970 <Bitpack_getu>:
  401970:	41 55                	push   %r13
  401972:	49 89 fd             	mov    %rdi,%r13
  401975:	41 54                	push   %r12
  401977:	55                   	push   %rbp
  401978:	89 f5                	mov    %esi,%ebp
  40197a:	53                   	push   %rbx
  40197b:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  40197e:	48 83 ec 08          	sub    $0x8,%rsp
  401982:	83 fb 40             	cmp    $0x40,%ebx
  401985:	77 49                	ja     4019d0 <Bitpack_getu+0x60>
  401987:	b8 40 00 00 00       	mov    $0x40,%eax
  40198c:	89 c6                	mov    %eax,%esi
  40198e:	29 d8                	sub    %ebx,%eax
  401990:	29 ee                	sub    %ebp,%esi
  401992:	83 f8 40             	cmp    $0x40,%eax
  401995:	89 c3                	mov    %eax,%ebx
  401997:	89 f5                	mov    %esi,%ebp
  401999:	77 75                	ja     401a10 <Bitpack_getu+0xa0>
  40199b:	41 bc 00 00 00 00    	mov    $0x0,%r12d
  4019a1:	74 08                	je     4019ab <Bitpack_getu+0x3b>
  4019a3:	89 d9                	mov    %ebx,%ecx
  4019a5:	49 d3 e5             	shl    %cl,%r13
  4019a8:	4d 89 ec             	mov    %r13,%r12
  4019ab:	83 fd 40             	cmp    $0x40,%ebp
  4019ae:	77 40                	ja     4019f0 <Bitpack_getu+0x80>
  4019b0:	b8 00 00 00 00       	mov    $0x0,%eax
  4019b5:	74 08                	je     4019bf <Bitpack_getu+0x4f>
  4019b7:	4c 89 e0             	mov    %r12,%rax
  4019ba:	89 e9                	mov    %ebp,%ecx
  4019bc:	48 d3 e8             	shr    %cl,%rax
  4019bf:	48 83 c4 08          	add    $0x8,%rsp
  4019c3:	5b                   	pop    %rbx
  4019c4:	5d                   	pop    %rbp
  4019c5:	41 5c                	pop    %r12
  4019c7:	41 5d                	pop    %r13
  4019c9:	c3                   	retq   
  4019ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4019d0:	ba 58 00 00 00       	mov    $0x58,%edx
  4019d5:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  4019da:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4019df:	e8 1c fd ff ff       	callq  401700 <Except_raise>
  4019e4:	eb a1                	jmp    401987 <Bitpack_getu+0x17>
  4019e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019ed:	00 00 00 
  4019f0:	ba 20 00 00 00       	mov    $0x20,%edx
  4019f5:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  4019fa:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  4019ff:	e8 fc fc ff ff       	callq  401700 <Except_raise>
  401a04:	eb b1                	jmp    4019b7 <Bitpack_getu+0x47>
  401a06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401a0d:	00 00 00 
  401a10:	ba 14 00 00 00       	mov    $0x14,%edx
  401a15:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  401a1a:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401a1f:	e8 dc fc ff ff       	callq  401700 <Except_raise>
  401a24:	e9 7a ff ff ff       	jmpq   4019a3 <Bitpack_getu+0x33>
  401a29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401a30 <Bitpack_newu>:
  401a30:	41 56                	push   %r14
  401a32:	49 89 fe             	mov    %rdi,%r14
  401a35:	41 55                	push   %r13
  401a37:	41 89 f5             	mov    %esi,%r13d
  401a3a:	41 54                	push   %r12
  401a3c:	49 89 cc             	mov    %rcx,%r12
  401a3f:	55                   	push   %rbp
  401a40:	89 d5                	mov    %edx,%ebp
  401a42:	53                   	push   %rbx
  401a43:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  401a46:	83 fb 40             	cmp    $0x40,%ebx
  401a49:	0f 87 f9 00 00 00    	ja     401b48 <Bitpack_newu+0x118>
  401a4f:	44 89 ee             	mov    %r13d,%esi
  401a52:	4c 89 e7             	mov    %r12,%rdi
  401a55:	e8 d6 fe ff ff       	callq  401930 <Bitpack_fitsu>
  401a5a:	84 c0                	test   %al,%al
  401a5c:	0f 84 c6 00 00 00    	je     401b28 <Bitpack_newu+0xf8>
  401a62:	83 fb 40             	cmp    $0x40,%ebx
  401a65:	0f 87 85 00 00 00    	ja     401af0 <Bitpack_newu+0xc0>
  401a6b:	41 bd 00 00 00 00    	mov    $0x0,%r13d
  401a71:	74 0d                	je     401a80 <Bitpack_newu+0x50>
  401a73:	4d 89 f5             	mov    %r14,%r13
  401a76:	89 d9                	mov    %ebx,%ecx
  401a78:	49 d3 ed             	shr    %cl,%r13
  401a7b:	89 d9                	mov    %ebx,%ecx
  401a7d:	49 d3 e5             	shl    %cl,%r13
  401a80:	bb 40 00 00 00       	mov    $0x40,%ebx
  401a85:	29 eb                	sub    %ebp,%ebx
  401a87:	83 fb 40             	cmp    $0x40,%ebx
  401a8a:	77 34                	ja     401ac0 <Bitpack_newu+0x90>
  401a8c:	ba 00 00 00 00       	mov    $0x0,%edx
  401a91:	74 0d                	je     401aa0 <Bitpack_newu+0x70>
  401a93:	89 d9                	mov    %ebx,%ecx
  401a95:	49 d3 e6             	shl    %cl,%r14
  401a98:	4c 89 f2             	mov    %r14,%rdx
  401a9b:	89 d9                	mov    %ebx,%ecx
  401a9d:	48 d3 ea             	shr    %cl,%rdx
  401aa0:	5b                   	pop    %rbx
  401aa1:	4c 89 e0             	mov    %r12,%rax
  401aa4:	89 e9                	mov    %ebp,%ecx
  401aa6:	5d                   	pop    %rbp
  401aa7:	41 5c                	pop    %r12
  401aa9:	48 d3 e0             	shl    %cl,%rax
  401aac:	4c 09 e8             	or     %r13,%rax
  401aaf:	41 5d                	pop    %r13
  401ab1:	48 09 d0             	or     %rdx,%rax
  401ab4:	41 5e                	pop    %r14
  401ab6:	c3                   	retq   
  401ab7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401abe:	00 00 
  401ac0:	ba 14 00 00 00       	mov    $0x14,%edx
  401ac5:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  401aca:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401acf:	e8 2c fc ff ff       	callq  401700 <Except_raise>
  401ad4:	89 d9                	mov    %ebx,%ecx
  401ad6:	ba 20 00 00 00       	mov    $0x20,%edx
  401adb:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  401ae0:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401ae5:	49 d3 e6             	shl    %cl,%r14
  401ae8:	e8 13 fc ff ff       	callq  401700 <Except_raise>
  401aed:	eb a9                	jmp    401a98 <Bitpack_newu+0x68>
  401aef:	90                   	nop
  401af0:	ba 20 00 00 00       	mov    $0x20,%edx
  401af5:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  401afa:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401aff:	e8 fc fb ff ff       	callq  401700 <Except_raise>
  401b04:	4d 89 f5             	mov    %r14,%r13
  401b07:	89 d9                	mov    %ebx,%ecx
  401b09:	ba 14 00 00 00       	mov    $0x14,%edx
  401b0e:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  401b13:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401b18:	49 d3 ed             	shr    %cl,%r13
  401b1b:	e8 e0 fb ff ff       	callq  401700 <Except_raise>
  401b20:	e9 56 ff ff ff       	jmpq   401a7b <Bitpack_newu+0x4b>
  401b25:	0f 1f 00             	nopl   (%rax)
  401b28:	ba 65 00 00 00       	mov    $0x65,%edx
  401b2d:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  401b32:	bf 00 61 60 00       	mov    $0x606100,%edi
  401b37:	e8 c4 fb ff ff       	callq  401700 <Except_raise>
  401b3c:	e9 21 ff ff ff       	jmpq   401a62 <Bitpack_newu+0x32>
  401b41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401b48:	ba 63 00 00 00       	mov    $0x63,%edx
  401b4d:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  401b52:	bf a8 5d 60 00       	mov    $0x605da8,%edi
  401b57:	e8 a4 fb ff ff       	callq  401700 <Except_raise>
  401b5c:	e9 ee fe ff ff       	jmpq   401a4f <Bitpack_newu+0x1f>
  401b61:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  401b68:	0f 1f 84 00 00 00 00 
  401b6f:	00 

0000000000401b70 <Bitpack_news>:
  401b70:	41 55                	push   %r13
  401b72:	41 89 d5             	mov    %edx,%r13d
  401b75:	41 54                	push   %r12
  401b77:	49 89 fc             	mov    %rdi,%r12
  401b7a:	48 89 cf             	mov    %rcx,%rdi
  401b7d:	55                   	push   %rbp
  401b7e:	48 89 cd             	mov    %rcx,%rbp
  401b81:	53                   	push   %rbx
  401b82:	89 f3                	mov    %esi,%ebx
  401b84:	48 83 ec 08          	sub    $0x8,%rsp
  401b88:	e8 73 fd ff ff       	callq  401900 <Bitpack_fitss>
  401b8d:	84 c0                	test   %al,%al
  401b8f:	75 14                	jne    401ba5 <Bitpack_news+0x35>
  401b91:	ba 6f 00 00 00       	mov    $0x6f,%edx
  401b96:	be b9 4a 40 00       	mov    $0x404ab9,%esi
  401b9b:	bf 00 61 60 00       	mov    $0x606100,%edi
  401ba0:	e8 5b fb ff ff       	callq  401700 <Except_raise>
  401ba5:	89 de                	mov    %ebx,%esi
  401ba7:	48 89 ef             	mov    %rbp,%rdi
  401baa:	31 d2                	xor    %edx,%edx
  401bac:	e8 bf fd ff ff       	callq  401970 <Bitpack_getu>
  401bb1:	48 83 c4 08          	add    $0x8,%rsp
  401bb5:	89 de                	mov    %ebx,%esi
  401bb7:	4c 89 e7             	mov    %r12,%rdi
  401bba:	5b                   	pop    %rbx
  401bbb:	5d                   	pop    %rbp
  401bbc:	41 5c                	pop    %r12
  401bbe:	44 89 ea             	mov    %r13d,%edx
  401bc1:	48 89 c1             	mov    %rax,%rcx
  401bc4:	41 5d                	pop    %r13
  401bc6:	e9 65 fe ff ff       	jmpq   401a30 <Bitpack_newu>
  401bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000401bd0 <Bitpack_run_tests>:
  401bd0:	41 56                	push   %r14
  401bd2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401bd7:	55                   	push   %rbp
  401bd8:	53                   	push   %rbx
  401bd9:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
  401be0:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  401be7:	00 
  401be8:	48 b8 ef be ad de ce 	movabs $0xfeedfacedeadbeef,%rax
  401bef:	fa ed fe 
  401bf2:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
  401bf9:	00 
  401bfa:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
  401c01:	00 
  401c02:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401c06:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
  401c0b:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
  401c10:	40 88 7c 24 43       	mov    %dil,0x43(%rsp)
  401c15:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
  401c1c:	00 00 00 00 00 
  401c21:	83 f8 02             	cmp    $0x2,%eax
  401c24:	c7 84 24 a0 00 00 00 	movl   $0x0,0xa0(%rsp)
  401c2b:	00 00 00 00 
  401c2f:	c7 84 24 a4 00 00 00 	movl   $0x6,0xa4(%rsp)
  401c36:	06 00 00 00 
  401c3a:	c7 84 24 a8 00 00 00 	movl   $0x8,0xa8(%rsp)
  401c41:	08 00 00 00 
  401c45:	c7 84 24 ac 00 00 00 	movl   $0x40,0xac(%rsp)
  401c4c:	40 00 00 00 
  401c50:	c7 84 24 90 00 00 00 	movl   $0x10,0x90(%rsp)
  401c57:	10 00 00 00 
  401c5b:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
  401c62:	00 00 00 00 
  401c66:	c7 84 24 98 00 00 00 	movl   $0x63,0x98(%rsp)
  401c6d:	63 00 00 00 
  401c71:	48 c7 84 24 00 01 00 	movq   $0xfffffffffffffffe,0x100(%rsp)
  401c78:	00 fe ff ff ff 
  401c7d:	48 c7 84 24 08 01 00 	movq   $0x7,0x108(%rsp)
  401c84:	00 07 00 00 00 
  401c89:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
  401c90:	00 00 00 00 00 
  401c95:	48 c7 84 24 18 01 00 	movq   $0xb,0x118(%rsp)
  401c9c:	00 0b 00 00 00 
  401ca1:	48 c7 84 24 20 01 00 	movq   $0xfffffffffffffff8,0x120(%rsp)
  401ca8:	00 f8 ff ff ff 
  401cad:	48 c7 84 24 28 01 00 	movq   $0xfffffffffffffff5,0x128(%rsp)
  401cb4:	00 f5 ff ff ff 
  401cb9:	48 c7 84 24 d0 00 00 	movq   $0x33,0xd0(%rsp)
  401cc0:	00 33 00 00 00 
  401cc5:	48 c7 84 24 d8 00 00 	movq   $0x7,0xd8(%rsp)
  401ccc:	00 07 00 00 00 
  401cd1:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
  401cd8:	00 00 00 00 00 
  401cdd:	48 c7 84 24 e8 00 00 	movq   $0xb,0xe8(%rsp)
  401ce4:	00 0b 00 00 00 
  401ce9:	48 c7 84 24 f0 00 00 	movq   $0x1,0xf0(%rsp)
  401cf0:	00 01 00 00 00 
  401cf5:	0f 87 bd 02 00 00    	ja     401fb8 <Bitpack_run_tests+0x3e8>
  401cfb:	48 8d 84 24 38 01 00 	lea    0x138(%rsp),%rax
  401d02:	00 
  401d03:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  401d08:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401d0c:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
  401d13:	00 
  401d14:	48 8b 84 c4 b0 00 00 	mov    0xb0(%rsp,%rax,8),%rax
  401d1b:	00 
  401d1c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  401d21:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401d25:	83 f8 03             	cmp    $0x3,%eax
  401d28:	0f 87 72 02 00 00    	ja     401fa0 <Bitpack_run_tests+0x3d0>
  401d2e:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401d32:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
  401d39:	00 
  401d3a:	b9 40 00 00 00       	mov    $0x40,%ecx
  401d3f:	8b 84 84 a0 00 00 00 	mov    0xa0(%rsp,%rax,4),%eax
  401d46:	89 c3                	mov    %eax,%ebx
  401d48:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  401d4c:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401d50:	29 d9                	sub    %ebx,%ecx
  401d52:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
  401d56:	83 f8 02             	cmp    $0x2,%eax
  401d59:	0f 87 29 02 00 00    	ja     401f88 <Bitpack_run_tests+0x3b8>
  401d5f:	90                   	nop
  401d60:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401d64:	83 bc 84 90 00 00 00 	cmpl   $0x63,0x90(%rsp,%rax,4)
  401d6b:	63 
  401d6c:	0f 84 76 09 00 00    	je     4026e8 <Bitpack_run_tests+0xb18>
  401d72:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401d76:	8b 84 84 90 00 00 00 	mov    0x90(%rsp,%rax,4),%eax
  401d7d:	89 44 24 64          	mov    %eax,0x64(%rsp)
  401d81:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%rsp)
  401d88:	00 
  401d89:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401d8d:	83 f8 05             	cmp    $0x5,%eax
  401d90:	76 26                	jbe    401db8 <Bitpack_run_tests+0x1e8>
  401d92:	e9 d9 00 00 00       	jmpq   401e70 <Bitpack_run_tests+0x2a0>
  401d97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401d9e:	00 00 
  401da0:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401da4:	83 c0 01             	add    $0x1,%eax
  401da7:	89 44 24 68          	mov    %eax,0x68(%rsp)
  401dab:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401daf:	83 f8 05             	cmp    $0x5,%eax
  401db2:	0f 87 b8 00 00 00    	ja     401e70 <Bitpack_run_tests+0x2a0>
  401db8:	8b 44 24 68          	mov    0x68(%rsp),%eax
  401dbc:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  401dc3:	00 00 
  401dc5:	74 08                	je     401dcf <Bitpack_run_tests+0x1ff>
  401dc7:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  401dcb:	85 c0                	test   %eax,%eax
  401dcd:	74 d1                	je     401da0 <Bitpack_run_tests+0x1d0>
  401dcf:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401dd3:	03 44 24 0c          	add    0xc(%rsp),%eax
  401dd7:	83 f8 40             	cmp    $0x40,%eax
  401dda:	77 c4                	ja     401da0 <Bitpack_run_tests+0x1d0>
  401ddc:	48 8b 05 05 4c 20 00 	mov    0x204c05(%rip),%rax        # 6069e8 <Except_stack>
  401de3:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  401de8:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  401def:	00 
  401df0:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  401df7:	00 
  401df8:	48 89 05 e9 4b 20 00 	mov    %rax,0x204be9(%rip)        # 6069e8 <Except_stack>
  401dff:	e8 6c ee ff ff       	callq  400c70 <_setjmp@plt>
  401e04:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
  401e08:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  401e0c:	85 c0                	test   %eax,%eax
  401e0e:	0f 84 3c 05 00 00    	je     402350 <Bitpack_run_tests+0x780>
  401e14:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  401e19:	c7 44 24 6c 02 00 00 	movl   $0x2,0x6c(%rsp)
  401e20:	00 
  401e21:	be 06 00 00 00       	mov    $0x6,%esi
  401e26:	74 2d                	je     401e55 <Bitpack_run_tests+0x285>
  401e28:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401e2c:	85 c0                	test   %eax,%eax
  401e2e:	0f 84 a4 01 00 00    	je     401fd8 <Bitpack_run_tests+0x408>
  401e34:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401e38:	03 44 24 0c          	add    0xc(%rsp),%eax
  401e3c:	83 f8 40             	cmp    $0x40,%eax
  401e3f:	0f 84 93 01 00 00    	je     401fd8 <Bitpack_run_tests+0x408>
  401e45:	31 c0                	xor    %eax,%eax
  401e47:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  401e4b:	31 f6                	xor    %esi,%esi
  401e4d:	85 c9                	test   %ecx,%ecx
  401e4f:	40 0f 94 c6          	sete   %sil
  401e53:	09 c6                	or     %eax,%esi
  401e55:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  401e5a:	31 d2                	xor    %edx,%edx
  401e5c:	bf e8 4a 40 00       	mov    $0x404ae8,%edi
  401e61:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  401e66:	ff d0                	callq  *%rax
  401e68:	e9 33 ff ff ff       	jmpq   401da0 <Bitpack_run_tests+0x1d0>
  401e6d:	0f 1f 00             	nopl   (%rax)
  401e70:	c7 44 24 7c 00 00 00 	movl   $0x0,0x7c(%rsp)
  401e77:	00 
  401e78:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401e7c:	83 f8 04             	cmp    $0x4,%eax
  401e7f:	76 27                	jbe    401ea8 <Bitpack_run_tests+0x2d8>
  401e81:	e9 ea 00 00 00       	jmpq   401f70 <Bitpack_run_tests+0x3a0>
  401e86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401e8d:	00 00 00 
  401e90:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401e94:	83 c0 01             	add    $0x1,%eax
  401e97:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
  401e9b:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401e9f:	83 f8 04             	cmp    $0x4,%eax
  401ea2:	0f 87 c8 00 00 00    	ja     401f70 <Bitpack_run_tests+0x3a0>
  401ea8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401eac:	48 83 bc c4 d0 00 00 	cmpq   $0x0,0xd0(%rsp,%rax,8)
  401eb3:	00 00 
  401eb5:	74 0a                	je     401ec1 <Bitpack_run_tests+0x2f1>
  401eb7:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
  401ebc:	45 85 d2             	test   %r10d,%r10d
  401ebf:	74 cf                	je     401e90 <Bitpack_run_tests+0x2c0>
  401ec1:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401ec5:	03 44 24 0c          	add    0xc(%rsp),%eax
  401ec9:	83 f8 40             	cmp    $0x40,%eax
  401ecc:	77 c2                	ja     401e90 <Bitpack_run_tests+0x2c0>
  401ece:	48 8b 05 13 4b 20 00 	mov    0x204b13(%rip),%rax        # 6069e8 <Except_stack>
  401ed5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  401eda:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  401ee1:	00 
  401ee2:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  401ee9:	00 
  401eea:	48 89 05 f7 4a 20 00 	mov    %rax,0x204af7(%rip)        # 6069e8 <Except_stack>
  401ef1:	e8 7a ed ff ff       	callq  400c70 <_setjmp@plt>
  401ef6:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
  401efd:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  401f04:	85 c0                	test   %eax,%eax
  401f06:	0f 84 dc 00 00 00    	je     401fe8 <Bitpack_run_tests+0x418>
  401f0c:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  401f11:	c7 84 24 80 00 00 00 	movl   $0x2,0x80(%rsp)
  401f18:	02 00 00 00 
  401f1c:	be 06 00 00 00       	mov    $0x6,%esi
  401f21:	74 2d                	je     401f50 <Bitpack_run_tests+0x380>
  401f23:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401f27:	85 c0                	test   %eax,%eax
  401f29:	0f 84 99 00 00 00    	je     401fc8 <Bitpack_run_tests+0x3f8>
  401f2f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  401f33:	03 44 24 0c          	add    0xc(%rsp),%eax
  401f37:	83 f8 40             	cmp    $0x40,%eax
  401f3a:	0f 84 88 00 00 00    	je     401fc8 <Bitpack_run_tests+0x3f8>
  401f40:	31 c0                	xor    %eax,%eax
  401f42:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  401f46:	31 f6                	xor    %esi,%esi
  401f48:	85 d2                	test   %edx,%edx
  401f4a:	40 0f 94 c6          	sete   %sil
  401f4e:	09 c6                	or     %eax,%esi
  401f50:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  401f55:	31 d2                	xor    %edx,%edx
  401f57:	bf 28 4c 40 00       	mov    $0x404c28,%edi
  401f5c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  401f61:	ff d0                	callq  *%rax
  401f63:	e9 28 ff ff ff       	jmpq   401e90 <Bitpack_run_tests+0x2c0>
  401f68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401f6f:	00 
  401f70:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401f74:	83 c0 01             	add    $0x1,%eax
  401f77:	89 44 24 60          	mov    %eax,0x60(%rsp)
  401f7b:	8b 44 24 60          	mov    0x60(%rsp),%eax
  401f7f:	83 f8 02             	cmp    $0x2,%eax
  401f82:	0f 86 d8 fd ff ff    	jbe    401d60 <Bitpack_run_tests+0x190>
  401f88:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401f8c:	83 c0 01             	add    $0x1,%eax
  401f8f:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
  401f93:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  401f97:	83 f8 03             	cmp    $0x3,%eax
  401f9a:	0f 86 8e fd ff ff    	jbe    401d2e <Bitpack_run_tests+0x15e>
  401fa0:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401fa4:	83 c0 01             	add    $0x1,%eax
  401fa7:	89 44 24 58          	mov    %eax,0x58(%rsp)
  401fab:	8b 44 24 58          	mov    0x58(%rsp),%eax
  401faf:	83 f8 02             	cmp    $0x2,%eax
  401fb2:	0f 86 50 fd ff ff    	jbe    401d08 <Bitpack_run_tests+0x138>
  401fb8:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
  401fbf:	5b                   	pop    %rbx
  401fc0:	5d                   	pop    %rbp
  401fc1:	41 5e                	pop    %r14
  401fc3:	c3                   	retq   
  401fc4:	0f 1f 40 00          	nopl   0x0(%rax)
  401fc8:	b8 04 00 00 00       	mov    $0x4,%eax
  401fcd:	e9 70 ff ff ff       	jmpq   401f42 <Bitpack_run_tests+0x372>
  401fd2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401fd8:	b8 04 00 00 00       	mov    $0x4,%eax
  401fdd:	e9 65 fe ff ff       	jmpq   401e47 <Bitpack_run_tests+0x277>
  401fe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401fe8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  401fec:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  401ff0:	8b 54 24 64          	mov    0x64(%rsp),%edx
  401ff4:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  401ff9:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  402000:	00 
  402001:	e8 2a fa ff ff       	callq  401a30 <Bitpack_newu>
  402006:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  40200d:	85 c0                	test   %eax,%eax
  40200f:	75 11                	jne    402022 <Bitpack_run_tests+0x452>
  402011:	48 8b 05 d0 49 20 00 	mov    0x2049d0(%rip),%rax        # 6069e8 <Except_stack>
  402018:	48 8b 00             	mov    (%rax),%rax
  40201b:	48 89 05 c6 49 20 00 	mov    %rax,0x2049c6(%rip)        # 6069e8 <Except_stack>
  402022:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  402029:	83 f8 01             	cmp    $0x1,%eax
  40202c:	0f 84 d0 0b 00 00    	je     402c02 <Bitpack_run_tests+0x1032>
  402032:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402036:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  40203a:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40203e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402043:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  40204a:	00 
  40204b:	e8 e0 f9 ff ff       	callq  401a30 <Bitpack_newu>
  402050:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  402055:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  40205a:	0f 85 98 0a 00 00    	jne    402af8 <Bitpack_run_tests+0xf28>
  402060:	48 8b 05 81 49 20 00 	mov    0x204981(%rip),%rax        # 6069e8 <Except_stack>
  402067:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40206c:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402073:	00 
  402074:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  40207b:	00 
  40207c:	48 89 05 65 49 20 00 	mov    %rax,0x204965(%rip)        # 6069e8 <Except_stack>
  402083:	e8 e8 eb ff ff       	callq  400c70 <_setjmp@plt>
  402088:	89 84 24 84 00 00 00 	mov    %eax,0x84(%rsp)
  40208f:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  402096:	85 c0                	test   %eax,%eax
  402098:	0f 84 c2 09 00 00    	je     402a60 <Bitpack_run_tests+0xe90>
  40209e:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
  4020a3:	c7 84 24 84 00 00 00 	movl   $0x2,0x84(%rsp)
  4020aa:	02 00 00 00 
  4020ae:	bb 05 00 00 00       	mov    $0x5,%ebx
  4020b3:	45 85 c0             	test   %r8d,%r8d
  4020b6:	74 28                	je     4020e0 <Bitpack_run_tests+0x510>
  4020b8:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4020bd:	b3 06                	mov    $0x6,%bl
  4020bf:	74 1f                	je     4020e0 <Bitpack_run_tests+0x510>
  4020c1:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4020c5:	85 c0                	test   %eax,%eax
  4020c7:	0f 84 b3 0a 00 00    	je     402b80 <Bitpack_run_tests+0xfb0>
  4020cd:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4020d1:	03 44 24 0c          	add    0xc(%rsp),%eax
  4020d5:	83 f8 40             	cmp    $0x40,%eax
  4020d8:	0f 84 a2 0a 00 00    	je     402b80 <Bitpack_run_tests+0xfb0>
  4020de:	30 db                	xor    %bl,%bl
  4020e0:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  4020e5:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  4020ea:	bf 88 4b 40 00       	mov    $0x404b88,%edi
  4020ef:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4020f3:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4020f8:	31 c0                	xor    %eax,%eax
  4020fa:	e8 59 1b 00 00       	callq  403c58 <Fmt_string>
  4020ff:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402104:	31 d2                	xor    %edx,%edx
  402106:	48 89 c7             	mov    %rax,%rdi
  402109:	89 de                	mov    %ebx,%esi
  40210b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402110:	ff d0                	callq  *%rax
  402112:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  402119:	85 c0                	test   %eax,%eax
  40211b:	75 11                	jne    40212e <Bitpack_run_tests+0x55e>
  40211d:	48 8b 05 c4 48 20 00 	mov    0x2048c4(%rip),%rax        # 6069e8 <Except_stack>
  402124:	48 8b 00             	mov    (%rax),%rax
  402127:	48 89 05 ba 48 20 00 	mov    %rax,0x2048ba(%rip)        # 6069e8 <Except_stack>
  40212e:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  402135:	83 f8 01             	cmp    $0x1,%eax
  402138:	0f 84 27 0b 00 00    	je     402c65 <Bitpack_run_tests+0x1095>
  40213e:	48 8b 05 a3 48 20 00 	mov    0x2048a3(%rip),%rax        # 6069e8 <Except_stack>
  402145:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40214a:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402151:	00 
  402152:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402159:	00 
  40215a:	48 89 05 87 48 20 00 	mov    %rax,0x204887(%rip)        # 6069e8 <Except_stack>
  402161:	e8 0a eb ff ff       	callq  400c70 <_setjmp@plt>
  402166:	89 84 24 88 00 00 00 	mov    %eax,0x88(%rsp)
  40216d:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  402174:	85 c0                	test   %eax,%eax
  402176:	0f 84 04 08 00 00    	je     402980 <Bitpack_run_tests+0xdb0>
  40217c:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  402180:	c7 84 24 88 00 00 00 	movl   $0x2,0x88(%rsp)
  402187:	02 00 00 00 
  40218b:	bb 05 00 00 00       	mov    $0x5,%ebx
  402190:	85 ff                	test   %edi,%edi
  402192:	74 2c                	je     4021c0 <Bitpack_run_tests+0x5f0>
  402194:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402199:	b3 06                	mov    $0x6,%bl
  40219b:	74 23                	je     4021c0 <Bitpack_run_tests+0x5f0>
  40219d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4021a1:	85 c0                	test   %eax,%eax
  4021a3:	0f 84 97 09 00 00    	je     402b40 <Bitpack_run_tests+0xf70>
  4021a9:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4021ad:	03 44 24 0c          	add    0xc(%rsp),%eax
  4021b1:	83 f8 40             	cmp    $0x40,%eax
  4021b4:	0f 84 86 09 00 00    	je     402b40 <Bitpack_run_tests+0xf70>
  4021ba:	30 db                	xor    %bl,%bl
  4021bc:	0f 1f 40 00          	nopl   0x0(%rax)
  4021c0:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4021c4:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4021c8:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  4021ce:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4021d2:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4021d6:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  4021da:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  4021df:	41 29 f1             	sub    %esi,%r9d
  4021e2:	be 40 00 00 00       	mov    $0x40,%esi
  4021e7:	29 d6                	sub    %edx,%esi
  4021e9:	89 f2                	mov    %esi,%edx
  4021eb:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4021f0:	01 f8                	add    %edi,%eax
  4021f2:	01 f9                	add    %edi,%ecx
  4021f4:	29 fa                	sub    %edi,%edx
  4021f6:	89 04 24             	mov    %eax,(%rsp)
  4021f9:	41 29 f9             	sub    %edi,%r9d
  4021fc:	31 c0                	xor    %eax,%eax
  4021fe:	bf c0 4b 40 00       	mov    $0x404bc0,%edi
  402203:	e8 50 1a 00 00       	callq  403c58 <Fmt_string>
  402208:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40220d:	31 d2                	xor    %edx,%edx
  40220f:	48 89 c7             	mov    %rax,%rdi
  402212:	89 de                	mov    %ebx,%esi
  402214:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402219:	ff d0                	callq  *%rax
  40221b:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  402222:	85 c0                	test   %eax,%eax
  402224:	75 11                	jne    402237 <Bitpack_run_tests+0x667>
  402226:	48 8b 05 bb 47 20 00 	mov    0x2047bb(%rip),%rax        # 6069e8 <Except_stack>
  40222d:	48 8b 00             	mov    (%rax),%rax
  402230:	48 89 05 b1 47 20 00 	mov    %rax,0x2047b1(%rip)        # 6069e8 <Except_stack>
  402237:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  40223e:	83 f8 01             	cmp    $0x1,%eax
  402241:	0f 84 3f 0a 00 00    	je     402c86 <Bitpack_run_tests+0x10b6>
  402247:	48 8b 05 9a 47 20 00 	mov    0x20479a(%rip),%rax        # 6069e8 <Except_stack>
  40224e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  402253:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  40225a:	00 
  40225b:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402262:	00 
  402263:	48 89 05 7e 47 20 00 	mov    %rax,0x20477e(%rip)        # 6069e8 <Except_stack>
  40226a:	e8 01 ea ff ff       	callq  400c70 <_setjmp@plt>
  40226f:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%rsp)
  402276:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  40227d:	85 c0                	test   %eax,%eax
  40227f:	0f 84 63 06 00 00    	je     4028e8 <Bitpack_run_tests+0xd18>
  402285:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402289:	c7 84 24 8c 00 00 00 	movl   $0x2,0x8c(%rsp)
  402290:	02 00 00 00 
  402294:	bb 05 00 00 00       	mov    $0x5,%ebx
  402299:	85 f6                	test   %esi,%esi
  40229b:	74 2b                	je     4022c8 <Bitpack_run_tests+0x6f8>
  40229d:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4022a2:	b3 06                	mov    $0x6,%bl
  4022a4:	74 22                	je     4022c8 <Bitpack_run_tests+0x6f8>
  4022a6:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4022aa:	85 c0                	test   %eax,%eax
  4022ac:	0f 84 9e 08 00 00    	je     402b50 <Bitpack_run_tests+0xf80>
  4022b2:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4022b6:	03 44 24 0c          	add    0xc(%rsp),%eax
  4022ba:	83 f8 40             	cmp    $0x40,%eax
  4022bd:	0f 84 8d 08 00 00    	je     402b50 <Bitpack_run_tests+0xf80>
  4022c3:	30 db                	xor    %bl,%bl
  4022c5:	0f 1f 00             	nopl   (%rax)
  4022c8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  4022cc:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  4022d0:	bf a0 4c 40 00       	mov    $0x404ca0,%edi
  4022d5:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4022d9:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4022de:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  4022e5:	00 
  4022e6:	31 c0                	xor    %eax,%eax
  4022e8:	e8 6b 19 00 00       	callq  403c58 <Fmt_string>
  4022ed:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4022f2:	31 d2                	xor    %edx,%edx
  4022f4:	48 89 c7             	mov    %rax,%rdi
  4022f7:	89 de                	mov    %ebx,%esi
  4022f9:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4022fe:	ff d0                	callq  *%rax
  402300:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  402307:	85 c0                	test   %eax,%eax
  402309:	75 11                	jne    40231c <Bitpack_run_tests+0x74c>
  40230b:	48 8b 05 d6 46 20 00 	mov    0x2046d6(%rip),%rax        # 6069e8 <Except_stack>
  402312:	48 8b 00             	mov    (%rax),%rax
  402315:	48 89 05 cc 46 20 00 	mov    %rax,0x2046cc(%rip)        # 6069e8 <Except_stack>
  40231c:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  402323:	83 f8 01             	cmp    $0x1,%eax
  402326:	0f 85 64 fb ff ff    	jne    401e90 <Bitpack_run_tests+0x2c0>
  40232c:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402333:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  40233a:	00 
  40233b:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402342:	00 
  402343:	e8 b8 f3 ff ff       	callq  401700 <Except_raise>
  402348:	e9 43 fb ff ff       	jmpq   401e90 <Bitpack_run_tests+0x2c0>
  40234d:	0f 1f 00             	nopl   (%rax)
  402350:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402354:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402358:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40235c:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402361:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  402368:	00 
  402369:	e8 02 f8 ff ff       	callq  401b70 <Bitpack_news>
  40236e:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  402372:	85 c0                	test   %eax,%eax
  402374:	75 11                	jne    402387 <Bitpack_run_tests+0x7b7>
  402376:	48 8b 05 6b 46 20 00 	mov    0x20466b(%rip),%rax        # 6069e8 <Except_stack>
  40237d:	48 8b 00             	mov    (%rax),%rax
  402380:	48 89 05 61 46 20 00 	mov    %rax,0x204661(%rip)        # 6069e8 <Except_stack>
  402387:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  40238b:	83 f8 01             	cmp    $0x1,%eax
  40238e:	0f 84 b0 08 00 00    	je     402c44 <Bitpack_run_tests+0x1074>
  402394:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402398:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  40239c:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4023a0:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4023a5:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  4023ac:	00 
  4023ad:	e8 be f7 ff ff       	callq  401b70 <Bitpack_news>
  4023b2:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  4023b7:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  4023bc:	0f 85 1e 04 00 00    	jne    4027e0 <Bitpack_run_tests+0xc10>
  4023c2:	48 8b 05 1f 46 20 00 	mov    0x20461f(%rip),%rax        # 6069e8 <Except_stack>
  4023c9:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4023ce:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4023d5:	00 
  4023d6:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4023dd:	00 
  4023de:	48 89 05 03 46 20 00 	mov    %rax,0x204603(%rip)        # 6069e8 <Except_stack>
  4023e5:	e8 86 e8 ff ff       	callq  400c70 <_setjmp@plt>
  4023ea:	89 44 24 70          	mov    %eax,0x70(%rsp)
  4023ee:	8b 44 24 70          	mov    0x70(%rsp),%eax
  4023f2:	85 c0                	test   %eax,%eax
  4023f4:	0f 84 56 04 00 00    	je     402850 <Bitpack_run_tests+0xc80>
  4023fa:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  4023ff:	c7 44 24 70 02 00 00 	movl   $0x2,0x70(%rsp)
  402406:	00 
  402407:	bb 05 00 00 00       	mov    $0x5,%ebx
  40240c:	45 85 f6             	test   %r14d,%r14d
  40240f:	74 2f                	je     402440 <Bitpack_run_tests+0x870>
  402411:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402416:	b3 06                	mov    $0x6,%bl
  402418:	74 26                	je     402440 <Bitpack_run_tests+0x870>
  40241a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40241e:	85 c0                	test   %eax,%eax
  402420:	0f 84 4a 07 00 00    	je     402b70 <Bitpack_run_tests+0xfa0>
  402426:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40242a:	03 44 24 0c          	add    0xc(%rsp),%eax
  40242e:	83 f8 40             	cmp    $0x40,%eax
  402431:	0f 84 39 07 00 00    	je     402b70 <Bitpack_run_tests+0xfa0>
  402437:	30 db                	xor    %bl,%bl
  402439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402440:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402445:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40244a:	bf 88 4b 40 00       	mov    $0x404b88,%edi
  40244f:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402453:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402458:	31 c0                	xor    %eax,%eax
  40245a:	e8 f9 17 00 00       	callq  403c58 <Fmt_string>
  40245f:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402464:	31 d2                	xor    %edx,%edx
  402466:	48 89 c7             	mov    %rax,%rdi
  402469:	89 de                	mov    %ebx,%esi
  40246b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402470:	ff d0                	callq  *%rax
  402472:	8b 44 24 70          	mov    0x70(%rsp),%eax
  402476:	85 c0                	test   %eax,%eax
  402478:	75 11                	jne    40248b <Bitpack_run_tests+0x8bb>
  40247a:	48 8b 05 67 45 20 00 	mov    0x204567(%rip),%rax        # 6069e8 <Except_stack>
  402481:	48 8b 00             	mov    (%rax),%rax
  402484:	48 89 05 5d 45 20 00 	mov    %rax,0x20455d(%rip)        # 6069e8 <Except_stack>
  40248b:	8b 44 24 70          	mov    0x70(%rsp),%eax
  40248f:	83 f8 01             	cmp    $0x1,%eax
  402492:	0f 84 8b 07 00 00    	je     402c23 <Bitpack_run_tests+0x1053>
  402498:	48 8b 05 49 45 20 00 	mov    0x204549(%rip),%rax        # 6069e8 <Except_stack>
  40249f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4024a4:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4024ab:	00 
  4024ac:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4024b3:	00 
  4024b4:	48 89 05 2d 45 20 00 	mov    %rax,0x20452d(%rip)        # 6069e8 <Except_stack>
  4024bb:	e8 b0 e7 ff ff       	callq  400c70 <_setjmp@plt>
  4024c0:	89 44 24 74          	mov    %eax,0x74(%rsp)
  4024c4:	8b 44 24 74          	mov    0x74(%rsp),%eax
  4024c8:	85 c0                	test   %eax,%eax
  4024ca:	0f 84 28 02 00 00    	je     4026f8 <Bitpack_run_tests+0xb28>
  4024d0:	8b 6c 24 0c          	mov    0xc(%rsp),%ebp
  4024d4:	c7 44 24 74 02 00 00 	movl   $0x2,0x74(%rsp)
  4024db:	00 
  4024dc:	bb 05 00 00 00       	mov    $0x5,%ebx
  4024e1:	85 ed                	test   %ebp,%ebp
  4024e3:	74 2b                	je     402510 <Bitpack_run_tests+0x940>
  4024e5:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4024ea:	b3 06                	mov    $0x6,%bl
  4024ec:	74 22                	je     402510 <Bitpack_run_tests+0x940>
  4024ee:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4024f2:	85 c0                	test   %eax,%eax
  4024f4:	0f 84 66 06 00 00    	je     402b60 <Bitpack_run_tests+0xf90>
  4024fa:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4024fe:	03 44 24 0c          	add    0xc(%rsp),%eax
  402502:	83 f8 40             	cmp    $0x40,%eax
  402505:	0f 84 55 06 00 00    	je     402b60 <Bitpack_run_tests+0xf90>
  40250b:	30 db                	xor    %bl,%bl
  40250d:	0f 1f 00             	nopl   (%rax)
  402510:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402514:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402518:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  40251e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402522:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402526:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  40252a:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  40252f:	41 29 f1             	sub    %esi,%r9d
  402532:	be 40 00 00 00       	mov    $0x40,%esi
  402537:	29 d6                	sub    %edx,%esi
  402539:	89 f2                	mov    %esi,%edx
  40253b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402540:	01 f8                	add    %edi,%eax
  402542:	01 f9                	add    %edi,%ecx
  402544:	29 fa                	sub    %edi,%edx
  402546:	89 04 24             	mov    %eax,(%rsp)
  402549:	41 29 f9             	sub    %edi,%r9d
  40254c:	31 c0                	xor    %eax,%eax
  40254e:	bf c0 4b 40 00       	mov    $0x404bc0,%edi
  402553:	e8 00 17 00 00       	callq  403c58 <Fmt_string>
  402558:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40255d:	31 d2                	xor    %edx,%edx
  40255f:	48 89 c7             	mov    %rax,%rdi
  402562:	89 de                	mov    %ebx,%esi
  402564:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402569:	ff d0                	callq  *%rax
  40256b:	8b 44 24 74          	mov    0x74(%rsp),%eax
  40256f:	85 c0                	test   %eax,%eax
  402571:	75 11                	jne    402584 <Bitpack_run_tests+0x9b4>
  402573:	48 8b 05 6e 44 20 00 	mov    0x20446e(%rip),%rax        # 6069e8 <Except_stack>
  40257a:	48 8b 00             	mov    (%rax),%rax
  40257d:	48 89 05 64 44 20 00 	mov    %rax,0x204464(%rip)        # 6069e8 <Except_stack>
  402584:	8b 44 24 74          	mov    0x74(%rsp),%eax
  402588:	83 f8 01             	cmp    $0x1,%eax
  40258b:	0f 84 50 06 00 00    	je     402be1 <Bitpack_run_tests+0x1011>
  402591:	48 8b 05 50 44 20 00 	mov    0x204450(%rip),%rax        # 6069e8 <Except_stack>
  402598:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40259d:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4025a4:	00 
  4025a5:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4025ac:	00 
  4025ad:	48 89 05 34 44 20 00 	mov    %rax,0x204434(%rip)        # 6069e8 <Except_stack>
  4025b4:	e8 b7 e6 ff ff       	callq  400c70 <_setjmp@plt>
  4025b9:	89 44 24 78          	mov    %eax,0x78(%rsp)
  4025bd:	8b 44 24 78          	mov    0x78(%rsp),%eax
  4025c1:	85 c0                	test   %eax,%eax
  4025c3:	0f 85 a7 00 00 00    	jne    402670 <Bitpack_run_tests+0xaa0>
  4025c9:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  4025cd:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4025d1:	85 db                	test   %ebx,%ebx
  4025d3:	0f 85 b1 05 00 00    	jne    402b8a <Bitpack_run_tests+0xfba>
  4025d9:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4025dd:	31 ed                	xor    %ebp,%ebp
  4025df:	bb 05 00 00 00       	mov    $0x5,%ebx
  4025e4:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  4025eb:	00 00 
  4025ed:	40 0f 94 c5          	sete   %bpl
  4025f1:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4025f5:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  4025f9:	bf 00 4c 40 00       	mov    $0x404c00,%edi
  4025fe:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402602:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  402607:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  40260e:	00 
  40260f:	31 c0                	xor    %eax,%eax
  402611:	e8 42 16 00 00       	callq  403c58 <Fmt_string>
  402616:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40261b:	89 ea                	mov    %ebp,%edx
  40261d:	48 89 c7             	mov    %rax,%rdi
  402620:	89 de                	mov    %ebx,%esi
  402622:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402627:	ff d0                	callq  *%rax
  402629:	8b 44 24 78          	mov    0x78(%rsp),%eax
  40262d:	85 c0                	test   %eax,%eax
  40262f:	75 11                	jne    402642 <Bitpack_run_tests+0xa72>
  402631:	48 8b 05 b0 43 20 00 	mov    0x2043b0(%rip),%rax        # 6069e8 <Except_stack>
  402638:	48 8b 00             	mov    (%rax),%rax
  40263b:	48 89 05 a6 43 20 00 	mov    %rax,0x2043a6(%rip)        # 6069e8 <Except_stack>
  402642:	8b 44 24 78          	mov    0x78(%rsp),%eax
  402646:	83 f8 01             	cmp    $0x1,%eax
  402649:	0f 85 51 f7 ff ff    	jne    401da0 <Bitpack_run_tests+0x1d0>
  40264f:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402656:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  40265d:	00 
  40265e:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402665:	00 
  402666:	e8 95 f0 ff ff       	callq  401700 <Except_raise>
  40266b:	e9 30 f7 ff ff       	jmpq   401da0 <Bitpack_run_tests+0x1d0>
  402670:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
  402675:	c7 44 24 78 02 00 00 	movl   $0x2,0x78(%rsp)
  40267c:	00 
  40267d:	bb 05 00 00 00       	mov    $0x5,%ebx
  402682:	45 85 db             	test   %r11d,%r11d
  402685:	74 29                	je     4026b0 <Bitpack_run_tests+0xae0>
  402687:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40268c:	b3 06                	mov    $0x6,%bl
  40268e:	74 20                	je     4026b0 <Bitpack_run_tests+0xae0>
  402690:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402694:	85 c0                	test   %eax,%eax
  402696:	0f 84 15 06 00 00    	je     402cb1 <Bitpack_run_tests+0x10e1>
  40269c:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4026a0:	03 44 24 0c          	add    0xc(%rsp),%eax
  4026a4:	83 f8 40             	cmp    $0x40,%eax
  4026a7:	0f 84 04 06 00 00    	je     402cb1 <Bitpack_run_tests+0x10e1>
  4026ad:	30 db                	xor    %bl,%bl
  4026af:	90                   	nop
  4026b0:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4026b4:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  4026b8:	bf 00 4c 40 00       	mov    $0x404c00,%edi
  4026bd:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4026c1:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4026c6:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  4026cd:	00 
  4026ce:	31 c0                	xor    %eax,%eax
  4026d0:	e8 83 15 00 00       	callq  403c58 <Fmt_string>
  4026d5:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4026da:	31 d2                	xor    %edx,%edx
  4026dc:	e9 3c ff ff ff       	jmpq   40261d <Bitpack_run_tests+0xa4d>
  4026e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4026e8:	8b 44 24 44          	mov    0x44(%rsp),%eax
  4026ec:	e9 8c f6 ff ff       	jmpq   401d7d <Bitpack_run_tests+0x1ad>
  4026f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4026f8:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4026fc:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402700:	be 40 00 00 00       	mov    $0x40,%esi
  402705:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  40270a:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  40270f:	31 ed                	xor    %ebp,%ebp
  402711:	29 c6                	sub    %eax,%esi
  402713:	44 01 f2             	add    %r14d,%edx
  402716:	44 29 f6             	sub    %r14d,%esi
  402719:	e8 52 f2 ff ff       	callq  401970 <Bitpack_getu>
  40271e:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402722:	48 89 c3             	mov    %rax,%rbx
  402725:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402729:	be 40 00 00 00       	mov    $0x40,%esi
  40272e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402733:	29 c6                	sub    %eax,%esi
  402735:	44 01 f2             	add    %r14d,%edx
  402738:	44 29 f6             	sub    %r14d,%esi
  40273b:	e8 30 f2 ff ff       	callq  401970 <Bitpack_getu>
  402740:	48 39 c3             	cmp    %rax,%rbx
  402743:	bb 05 00 00 00       	mov    $0x5,%ebx
  402748:	40 0f 94 c5          	sete   %bpl
  40274c:	45 85 f6             	test   %r14d,%r14d
  40274f:	74 2f                	je     402780 <Bitpack_run_tests+0xbb0>
  402751:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402756:	b3 06                	mov    $0x6,%bl
  402758:	74 26                	je     402780 <Bitpack_run_tests+0xbb0>
  40275a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40275e:	85 c0                	test   %eax,%eax
  402760:	0f 84 93 05 00 00    	je     402cf9 <Bitpack_run_tests+0x1129>
  402766:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40276a:	03 44 24 0c          	add    0xc(%rsp),%eax
  40276e:	83 f8 40             	cmp    $0x40,%eax
  402771:	0f 84 82 05 00 00    	je     402cf9 <Bitpack_run_tests+0x1129>
  402777:	30 db                	xor    %bl,%bl
  402779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402780:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402784:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402788:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  40278e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402792:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402796:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  40279a:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  40279f:	41 29 f1             	sub    %esi,%r9d
  4027a2:	be 40 00 00 00       	mov    $0x40,%esi
  4027a7:	29 c6                	sub    %eax,%esi
  4027a9:	89 f0                	mov    %esi,%eax
  4027ab:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4027b0:	01 fa                	add    %edi,%edx
  4027b2:	29 f8                	sub    %edi,%eax
  4027b4:	01 f9                	add    %edi,%ecx
  4027b6:	89 14 24             	mov    %edx,(%rsp)
  4027b9:	41 29 f9             	sub    %edi,%r9d
  4027bc:	89 c2                	mov    %eax,%edx
  4027be:	bf c0 4b 40 00       	mov    $0x404bc0,%edi
  4027c3:	31 c0                	xor    %eax,%eax
  4027c5:	e8 8e 14 00 00       	callq  403c58 <Fmt_string>
  4027ca:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4027cf:	89 ea                	mov    %ebp,%edx
  4027d1:	e9 89 fd ff ff       	jmpq   40255f <Bitpack_run_tests+0x98f>
  4027d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4027dd:	00 00 00 
  4027e0:	8b 54 24 68          	mov    0x68(%rsp),%edx
  4027e4:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4027e8:	bf 20 4b 40 00       	mov    $0x404b20,%edi
  4027ed:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  4027f1:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4027f5:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  4027fa:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  402801:	00 
  402802:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  402807:	4c 8b 8c d4 00 01 00 	mov    0x100(%rsp,%rdx,8),%r9
  40280e:	00 
  40280f:	89 da                	mov    %ebx,%edx
  402811:	48 89 04 24          	mov    %rax,(%rsp)
  402815:	31 c0                	xor    %eax,%eax
  402817:	e8 14 e4 ff ff       	callq  400c30 <printf@plt>
  40281c:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402820:	31 f6                	xor    %esi,%esi
  402822:	85 db                	test   %ebx,%ebx
  402824:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402828:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  40282f:	00 
  402830:	0f 85 85 04 00 00    	jne    402cbb <Bitpack_run_tests+0x10eb>
  402836:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
  40283b:	bf 58 4b 40 00       	mov    $0x404b58,%edi
  402840:	31 c0                	xor    %eax,%eax
  402842:	e8 e9 e3 ff ff       	callq  400c30 <printf@plt>
  402847:	e9 76 fb ff ff       	jmpq   4023c2 <Bitpack_run_tests+0x7f2>
  40284c:	0f 1f 40 00          	nopl   0x0(%rax)
  402850:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402854:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402859:	31 d2                	xor    %edx,%edx
  40285b:	31 ed                	xor    %ebp,%ebp
  40285d:	e8 0e f1 ff ff       	callq  401970 <Bitpack_getu>
  402862:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402866:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40286b:	48 89 c3             	mov    %rax,%rbx
  40286e:	31 d2                	xor    %edx,%edx
  402870:	e8 fb f0 ff ff       	callq  401970 <Bitpack_getu>
  402875:	48 39 c3             	cmp    %rax,%rbx
  402878:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  40287c:	bb 05 00 00 00       	mov    $0x5,%ebx
  402881:	40 0f 94 c5          	sete   %bpl
  402885:	85 c0                	test   %eax,%eax
  402887:	74 2f                	je     4028b8 <Bitpack_run_tests+0xce8>
  402889:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40288e:	b3 06                	mov    $0x6,%bl
  402890:	74 26                	je     4028b8 <Bitpack_run_tests+0xce8>
  402892:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402896:	85 c0                	test   %eax,%eax
  402898:	0f 84 65 04 00 00    	je     402d03 <Bitpack_run_tests+0x1133>
  40289e:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4028a2:	03 44 24 0c          	add    0xc(%rsp),%eax
  4028a6:	83 f8 40             	cmp    $0x40,%eax
  4028a9:	0f 84 54 04 00 00    	je     402d03 <Bitpack_run_tests+0x1133>
  4028af:	30 db                	xor    %bl,%bl
  4028b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4028b8:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  4028bd:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  4028c2:	bf 88 4b 40 00       	mov    $0x404b88,%edi
  4028c7:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4028cb:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4028d0:	31 c0                	xor    %eax,%eax
  4028d2:	e8 81 13 00 00       	callq  403c58 <Fmt_string>
  4028d7:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4028dc:	89 ea                	mov    %ebp,%edx
  4028de:	e9 83 fb ff ff       	jmpq   402466 <Bitpack_run_tests+0x896>
  4028e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4028e8:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  4028ed:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4028f1:	31 ed                	xor    %ebp,%ebp
  4028f3:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  4028f8:	bb 05 00 00 00       	mov    $0x5,%ebx
  4028fd:	44 89 f6             	mov    %r14d,%esi
  402900:	e8 6b f0 ff ff       	callq  401970 <Bitpack_getu>
  402905:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  402909:	48 3b 84 d4 d0 00 00 	cmp    0xd0(%rsp,%rdx,8),%rax
  402910:	00 
  402911:	40 0f 94 c5          	sete   %bpl
  402915:	45 85 f6             	test   %r14d,%r14d
  402918:	74 2e                	je     402948 <Bitpack_run_tests+0xd78>
  40291a:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40291f:	b3 06                	mov    $0x6,%bl
  402921:	74 25                	je     402948 <Bitpack_run_tests+0xd78>
  402923:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402927:	85 c0                	test   %eax,%eax
  402929:	0f 84 c0 03 00 00    	je     402cef <Bitpack_run_tests+0x111f>
  40292f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402933:	03 44 24 0c          	add    0xc(%rsp),%eax
  402937:	83 f8 40             	cmp    $0x40,%eax
  40293a:	0f 84 af 03 00 00    	je     402cef <Bitpack_run_tests+0x111f>
  402940:	30 db                	xor    %bl,%bl
  402942:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402948:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  40294c:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402950:	bf a0 4c 40 00       	mov    $0x404ca0,%edi
  402955:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402959:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  40295e:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  402965:	00 
  402966:	31 c0                	xor    %eax,%eax
  402968:	e8 eb 12 00 00       	callq  403c58 <Fmt_string>
  40296d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402972:	89 ea                	mov    %ebp,%edx
  402974:	e9 7b f9 ff ff       	jmpq   4022f4 <Bitpack_run_tests+0x724>
  402979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402980:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402984:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402988:	be 40 00 00 00       	mov    $0x40,%esi
  40298d:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402992:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402997:	31 ed                	xor    %ebp,%ebp
  402999:	29 c6                	sub    %eax,%esi
  40299b:	44 01 f2             	add    %r14d,%edx
  40299e:	44 29 f6             	sub    %r14d,%esi
  4029a1:	e8 ca ef ff ff       	callq  401970 <Bitpack_getu>
  4029a6:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4029aa:	48 89 c3             	mov    %rax,%rbx
  4029ad:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4029b1:	be 40 00 00 00       	mov    $0x40,%esi
  4029b6:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4029bb:	29 c6                	sub    %eax,%esi
  4029bd:	44 01 f2             	add    %r14d,%edx
  4029c0:	44 29 f6             	sub    %r14d,%esi
  4029c3:	e8 a8 ef ff ff       	callq  401970 <Bitpack_getu>
  4029c8:	48 39 c3             	cmp    %rax,%rbx
  4029cb:	bb 05 00 00 00       	mov    $0x5,%ebx
  4029d0:	40 0f 94 c5          	sete   %bpl
  4029d4:	45 85 f6             	test   %r14d,%r14d
  4029d7:	74 2f                	je     402a08 <Bitpack_run_tests+0xe38>
  4029d9:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4029de:	b3 06                	mov    $0x6,%bl
  4029e0:	74 26                	je     402a08 <Bitpack_run_tests+0xe38>
  4029e2:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4029e6:	85 c0                	test   %eax,%eax
  4029e8:	0f 84 ed 02 00 00    	je     402cdb <Bitpack_run_tests+0x110b>
  4029ee:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4029f2:	03 44 24 0c          	add    0xc(%rsp),%eax
  4029f6:	83 f8 40             	cmp    $0x40,%eax
  4029f9:	0f 84 dc 02 00 00    	je     402cdb <Bitpack_run_tests+0x110b>
  4029ff:	30 db                	xor    %bl,%bl
  402a01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402a08:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402a0c:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402a10:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  402a16:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402a1a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402a1e:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  402a22:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  402a27:	41 29 f1             	sub    %esi,%r9d
  402a2a:	be 40 00 00 00       	mov    $0x40,%esi
  402a2f:	29 c6                	sub    %eax,%esi
  402a31:	89 f0                	mov    %esi,%eax
  402a33:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402a38:	01 fa                	add    %edi,%edx
  402a3a:	29 f8                	sub    %edi,%eax
  402a3c:	01 f9                	add    %edi,%ecx
  402a3e:	89 14 24             	mov    %edx,(%rsp)
  402a41:	41 29 f9             	sub    %edi,%r9d
  402a44:	89 c2                	mov    %eax,%edx
  402a46:	bf c0 4b 40 00       	mov    $0x404bc0,%edi
  402a4b:	31 c0                	xor    %eax,%eax
  402a4d:	e8 06 12 00 00       	callq  403c58 <Fmt_string>
  402a52:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402a57:	89 ea                	mov    %ebp,%edx
  402a59:	e9 b1 f7 ff ff       	jmpq   40220f <Bitpack_run_tests+0x63f>
  402a5e:	66 90                	xchg   %ax,%ax
  402a60:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402a64:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  402a69:	31 d2                	xor    %edx,%edx
  402a6b:	31 ed                	xor    %ebp,%ebp
  402a6d:	e8 fe ee ff ff       	callq  401970 <Bitpack_getu>
  402a72:	8b 74 24 64          	mov    0x64(%rsp),%esi
  402a76:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402a7b:	31 d2                	xor    %edx,%edx
  402a7d:	48 89 c3             	mov    %rax,%rbx
  402a80:	e8 eb ee ff ff       	callq  401970 <Bitpack_getu>
  402a85:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
  402a8a:	48 39 c3             	cmp    %rax,%rbx
  402a8d:	bb 05 00 00 00       	mov    $0x5,%ebx
  402a92:	40 0f 94 c5          	sete   %bpl
  402a96:	45 85 c9             	test   %r9d,%r9d
  402a99:	74 2d                	je     402ac8 <Bitpack_run_tests+0xef8>
  402a9b:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402aa0:	b3 06                	mov    $0x6,%bl
  402aa2:	74 24                	je     402ac8 <Bitpack_run_tests+0xef8>
  402aa4:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402aa8:	85 c0                	test   %eax,%eax
  402aaa:	0f 84 35 02 00 00    	je     402ce5 <Bitpack_run_tests+0x1115>
  402ab0:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402ab4:	03 44 24 0c          	add    0xc(%rsp),%eax
  402ab8:	83 f8 40             	cmp    $0x40,%eax
  402abb:	0f 84 24 02 00 00    	je     402ce5 <Bitpack_run_tests+0x1115>
  402ac1:	30 db                	xor    %bl,%bl
  402ac3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402ac8:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  402acd:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  402ad2:	bf 88 4b 40 00       	mov    $0x404b88,%edi
  402ad7:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402adb:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  402ae0:	31 c0                	xor    %eax,%eax
  402ae2:	e8 71 11 00 00       	callq  403c58 <Fmt_string>
  402ae7:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402aec:	89 ea                	mov    %ebp,%edx
  402aee:	e9 13 f6 ff ff       	jmpq   402106 <Bitpack_run_tests+0x536>
  402af3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402af8:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  402afc:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402b00:	bf 68 4c 40 00       	mov    $0x404c68,%edi
  402b05:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  402b09:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  402b0e:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  402b15:	00 
  402b16:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  402b1b:	4c 8b 8c d4 d0 00 00 	mov    0xd0(%rsp,%rdx,8),%r9
  402b22:	00 
  402b23:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402b27:	48 89 04 24          	mov    %rax,(%rsp)
  402b2b:	31 c0                	xor    %eax,%eax
  402b2d:	e8 fe e0 ff ff       	callq  400c30 <printf@plt>
  402b32:	e9 29 f5 ff ff       	jmpq   402060 <Bitpack_run_tests+0x490>
  402b37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402b3e:	00 00 
  402b40:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b45:	e9 76 f6 ff ff       	jmpq   4021c0 <Bitpack_run_tests+0x5f0>
  402b4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402b50:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b55:	e9 6e f7 ff ff       	jmpq   4022c8 <Bitpack_run_tests+0x6f8>
  402b5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402b60:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b65:	e9 a6 f9 ff ff       	jmpq   402510 <Bitpack_run_tests+0x940>
  402b6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402b70:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b75:	e9 c6 f8 ff ff       	jmpq   402440 <Bitpack_run_tests+0x870>
  402b7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402b80:	bb 04 00 00 00       	mov    $0x4,%ebx
  402b85:	e9 56 f5 ff ff       	jmpq   4020e0 <Bitpack_run_tests+0x510>
  402b8a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  402b8f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402b94:	31 ed                	xor    %ebp,%ebp
  402b96:	bb 06 00 00 00       	mov    $0x6,%ebx
  402b9b:	44 89 f6             	mov    %r14d,%esi
  402b9e:	e8 9d ec ff ff       	callq  401840 <Bitpack_gets.part.0>
  402ba3:	8b 54 24 68          	mov    0x68(%rsp),%edx
  402ba7:	48 3b 84 d4 00 01 00 	cmp    0x100(%rsp,%rdx,8),%rax
  402bae:	00 
  402baf:	40 0f 94 c5          	sete   %bpl
  402bb3:	41 83 fe 40          	cmp    $0x40,%r14d
  402bb7:	0f 84 34 fa ff ff    	je     4025f1 <Bitpack_run_tests+0xa21>
  402bbd:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402bc1:	85 c0                	test   %eax,%eax
  402bc3:	0f 84 de 00 00 00    	je     402ca7 <Bitpack_run_tests+0x10d7>
  402bc9:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402bcd:	03 44 24 0c          	add    0xc(%rsp),%eax
  402bd1:	83 f8 40             	cmp    $0x40,%eax
  402bd4:	0f 84 cd 00 00 00    	je     402ca7 <Bitpack_run_tests+0x10d7>
  402bda:	30 db                	xor    %bl,%bl
  402bdc:	e9 10 fa ff ff       	jmpq   4025f1 <Bitpack_run_tests+0xa21>
  402be1:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402be8:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402bef:	00 
  402bf0:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402bf7:	00 
  402bf8:	e8 03 eb ff ff       	callq  401700 <Except_raise>
  402bfd:	e9 8f f9 ff ff       	jmpq   402591 <Bitpack_run_tests+0x9c1>
  402c02:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402c09:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402c10:	00 
  402c11:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402c18:	00 
  402c19:	e8 e2 ea ff ff       	callq  401700 <Except_raise>
  402c1e:	e9 0f f4 ff ff       	jmpq   402032 <Bitpack_run_tests+0x462>
  402c23:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402c2a:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402c31:	00 
  402c32:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402c39:	00 
  402c3a:	e8 c1 ea ff ff       	callq  401700 <Except_raise>
  402c3f:	e9 54 f8 ff ff       	jmpq   402498 <Bitpack_run_tests+0x8c8>
  402c44:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402c4b:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402c52:	00 
  402c53:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402c5a:	00 
  402c5b:	e8 a0 ea ff ff       	callq  401700 <Except_raise>
  402c60:	e9 2f f7 ff ff       	jmpq   402394 <Bitpack_run_tests+0x7c4>
  402c65:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402c6c:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402c73:	00 
  402c74:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402c7b:	00 
  402c7c:	e8 7f ea ff ff       	callq  401700 <Except_raise>
  402c81:	e9 b8 f4 ff ff       	jmpq   40213e <Bitpack_run_tests+0x56e>
  402c86:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  402c8d:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  402c94:	00 
  402c95:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  402c9c:	00 
  402c9d:	e8 5e ea ff ff       	callq  401700 <Except_raise>
  402ca2:	e9 a0 f5 ff ff       	jmpq   402247 <Bitpack_run_tests+0x677>
  402ca7:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cac:	e9 40 f9 ff ff       	jmpq   4025f1 <Bitpack_run_tests+0xa21>
  402cb1:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cb6:	e9 f5 f9 ff ff       	jmpq   4026b0 <Bitpack_run_tests+0xae0>
  402cbb:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402cbf:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  402cc4:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  402cc9:	e8 72 eb ff ff       	callq  401840 <Bitpack_gets.part.0>
  402cce:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
  402cd3:	48 89 c6             	mov    %rax,%rsi
  402cd6:	e9 5b fb ff ff       	jmpq   402836 <Bitpack_run_tests+0xc66>
  402cdb:	bb 04 00 00 00       	mov    $0x4,%ebx
  402ce0:	e9 23 fd ff ff       	jmpq   402a08 <Bitpack_run_tests+0xe38>
  402ce5:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cea:	e9 d9 fd ff ff       	jmpq   402ac8 <Bitpack_run_tests+0xef8>
  402cef:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cf4:	e9 4f fc ff ff       	jmpq   402948 <Bitpack_run_tests+0xd78>
  402cf9:	bb 04 00 00 00       	mov    $0x4,%ebx
  402cfe:	e9 7d fa ff ff       	jmpq   402780 <Bitpack_run_tests+0xbb0>
  402d03:	bb 04 00 00 00       	mov    $0x4,%ebx
  402d08:	e9 ab fb ff ff       	jmpq   4028b8 <Bitpack_run_tests+0xce8>
  402d0d:	0f 1f 00             	nopl   (%rax)

0000000000402d10 <cvt_s>:
  402d10:	55                   	push   %rbp
  402d11:	48 89 e5             	mov    %rsp,%rbp
  402d14:	53                   	push   %rbx
  402d15:	48 83 ec 58          	sub    $0x58,%rsp
  402d19:	89 7d dc             	mov    %edi,-0x24(%rbp)
  402d1c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  402d20:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  402d24:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  402d28:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  402d2c:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  402d30:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  402d34:	8b 10                	mov    (%rax),%edx
  402d36:	83 fa 30             	cmp    $0x30,%edx
  402d39:	73 15                	jae    402d50 <cvt_s+0x40>
  402d3b:	48 8b 48 10          	mov    0x10(%rax),%rcx
  402d3f:	8b 10                	mov    (%rax),%edx
  402d41:	89 d2                	mov    %edx,%edx
  402d43:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  402d47:	8b 08                	mov    (%rax),%ecx
  402d49:	83 c1 08             	add    $0x8,%ecx
  402d4c:	89 08                	mov    %ecx,(%rax)
  402d4e:	eb 0f                	jmp    402d5f <cvt_s+0x4f>
  402d50:	48 8b 48 08          	mov    0x8(%rax),%rcx
  402d54:	48 89 ca             	mov    %rcx,%rdx
  402d57:	48 83 c1 08          	add    $0x8,%rcx
  402d5b:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402d5f:	48 89 d0             	mov    %rdx,%rax
  402d62:	48 8b 00             	mov    (%rax),%rax
  402d65:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  402d69:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  402d6e:	75 1b                	jne    402d8b <cvt_s+0x7b>
  402d70:	ba 1b 00 00 00       	mov    $0x1b,%edx
  402d75:	48 8d 35 4c 1f 00 00 	lea    0x1f4c(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  402d7c:	48 8d 05 25 30 20 00 	lea    0x203025(%rip),%rax        # 605da8 <Assert_Failed>
  402d83:	48 89 c7             	mov    %rax,%rdi
  402d86:	e8 75 e9 ff ff       	callq  401700 <Except_raise>
  402d8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402d8f:	48 89 c7             	mov    %rax,%rdi
  402d92:	e8 79 de ff ff       	callq  400c10 <strlen@plt>
  402d97:	89 c3                	mov    %eax,%ebx
  402d99:	44 8b 45 b4          	mov    -0x4c(%rbp),%r8d
  402d9d:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  402da1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  402da5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  402da9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  402dad:	8b 75 10             	mov    0x10(%rbp),%esi
  402db0:	89 34 24             	mov    %esi,(%rsp)
  402db3:	45 89 c1             	mov    %r8d,%r9d
  402db6:	49 89 f8             	mov    %rdi,%r8
  402db9:	89 de                	mov    %ebx,%esi
  402dbb:	48 89 c7             	mov    %rax,%rdi
  402dbe:	e8 d2 08 00 00       	callq  403695 <Fmt_puts>
  402dc3:	48 83 c4 58          	add    $0x58,%rsp
  402dc7:	5b                   	pop    %rbx
  402dc8:	c9                   	leaveq 
  402dc9:	c3                   	retq   

0000000000402dca <cvt_d>:
  402dca:	55                   	push   %rbp
  402dcb:	48 89 e5             	mov    %rsp,%rbp
  402dce:	53                   	push   %rbx
  402dcf:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  402dd6:	89 7d ac             	mov    %edi,-0x54(%rbp)
  402dd9:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  402ddd:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  402de1:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  402de5:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  402de9:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  402ded:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  402df1:	8b 10                	mov    (%rax),%edx
  402df3:	83 fa 30             	cmp    $0x30,%edx
  402df6:	73 15                	jae    402e0d <cvt_d+0x43>
  402df8:	48 8b 48 10          	mov    0x10(%rax),%rcx
  402dfc:	8b 10                	mov    (%rax),%edx
  402dfe:	89 d2                	mov    %edx,%edx
  402e00:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  402e04:	8b 08                	mov    (%rax),%ecx
  402e06:	83 c1 08             	add    $0x8,%ecx
  402e09:	89 08                	mov    %ecx,(%rax)
  402e0b:	eb 0f                	jmp    402e1c <cvt_d+0x52>
  402e0d:	48 8b 48 08          	mov    0x8(%rax),%rcx
  402e11:	48 89 ca             	mov    %rcx,%rdx
  402e14:	48 83 c1 08          	add    $0x8,%rcx
  402e18:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402e1c:	48 89 d0             	mov    %rdx,%rax
  402e1f:	8b 00                	mov    (%rax),%eax
  402e21:	89 45 dc             	mov    %eax,-0x24(%rbp)
  402e24:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  402e28:	48 83 c0 2b          	add    $0x2b,%rax
  402e2c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  402e30:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  402e37:	75 09                	jne    402e42 <cvt_d+0x78>
  402e39:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  402e40:	eb 16                	jmp    402e58 <cvt_d+0x8e>
  402e42:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  402e46:	79 0a                	jns    402e52 <cvt_d+0x88>
  402e48:	8b 45 dc             	mov    -0x24(%rbp),%eax
  402e4b:	f7 d8                	neg    %eax
  402e4d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402e50:	eb 06                	jmp    402e58 <cvt_d+0x8e>
  402e52:	8b 45 dc             	mov    -0x24(%rbp),%eax
  402e55:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402e58:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  402e5d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  402e60:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  402e65:	89 c8                	mov    %ecx,%eax
  402e67:	f7 e2                	mul    %edx
  402e69:	c1 ea 03             	shr    $0x3,%edx
  402e6c:	89 d0                	mov    %edx,%eax
  402e6e:	c1 e0 02             	shl    $0x2,%eax
  402e71:	01 d0                	add    %edx,%eax
  402e73:	01 c0                	add    %eax,%eax
  402e75:	89 ca                	mov    %ecx,%edx
  402e77:	29 c2                	sub    %eax,%edx
  402e79:	89 d0                	mov    %edx,%eax
  402e7b:	83 c0 30             	add    $0x30,%eax
  402e7e:	89 c2                	mov    %eax,%edx
  402e80:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402e84:	88 10                	mov    %dl,(%rax)
  402e86:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  402e89:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  402e8f:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  402e94:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  402e9a:	f7 e2                	mul    %edx
  402e9c:	89 d0                	mov    %edx,%eax
  402e9e:	c1 e8 03             	shr    $0x3,%eax
  402ea1:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402ea4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  402ea8:	75 ae                	jne    402e58 <cvt_d+0x8e>
  402eaa:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  402eae:	79 0c                	jns    402ebc <cvt_d+0xf2>
  402eb0:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  402eb5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402eb9:	c6 00 2d             	movb   $0x2d,(%rax)
  402ebc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  402ec0:	48 83 c0 2b          	add    $0x2b,%rax
  402ec4:	89 c2                	mov    %eax,%edx
  402ec6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402eca:	89 d1                	mov    %edx,%ecx
  402ecc:	29 c1                	sub    %eax,%ecx
  402ece:	89 c8                	mov    %ecx,%eax
  402ed0:	89 c3                	mov    %eax,%ebx
  402ed2:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  402ed6:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  402eda:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  402ede:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  402ee2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402ee6:	8b 75 10             	mov    0x10(%rbp),%esi
  402ee9:	89 34 24             	mov    %esi,(%rsp)
  402eec:	45 89 c1             	mov    %r8d,%r9d
  402eef:	49 89 f8             	mov    %rdi,%r8
  402ef2:	89 de                	mov    %ebx,%esi
  402ef4:	48 89 c7             	mov    %rax,%rdi
  402ef7:	e8 cd 14 00 00       	callq  4043c9 <Fmt_putd>
  402efc:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  402f03:	5b                   	pop    %rbx
  402f04:	c9                   	leaveq 
  402f05:	c3                   	retq   

0000000000402f06 <cvt_u>:
  402f06:	55                   	push   %rbp
  402f07:	48 89 e5             	mov    %rsp,%rbp
  402f0a:	53                   	push   %rbx
  402f0b:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  402f12:	89 7d ac             	mov    %edi,-0x54(%rbp)
  402f15:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  402f19:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  402f1d:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  402f21:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  402f25:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  402f29:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  402f2d:	8b 10                	mov    (%rax),%edx
  402f2f:	83 fa 30             	cmp    $0x30,%edx
  402f32:	73 15                	jae    402f49 <cvt_u+0x43>
  402f34:	48 8b 48 10          	mov    0x10(%rax),%rcx
  402f38:	8b 10                	mov    (%rax),%edx
  402f3a:	89 d2                	mov    %edx,%edx
  402f3c:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  402f40:	8b 08                	mov    (%rax),%ecx
  402f42:	83 c1 08             	add    $0x8,%ecx
  402f45:	89 08                	mov    %ecx,(%rax)
  402f47:	eb 0f                	jmp    402f58 <cvt_u+0x52>
  402f49:	48 8b 48 08          	mov    0x8(%rax),%rcx
  402f4d:	48 89 ca             	mov    %rcx,%rdx
  402f50:	48 83 c1 08          	add    $0x8,%rcx
  402f54:	48 89 48 08          	mov    %rcx,0x8(%rax)
  402f58:	48 89 d0             	mov    %rdx,%rax
  402f5b:	8b 00                	mov    (%rax),%eax
  402f5d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402f60:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  402f64:	48 83 c0 2b          	add    $0x2b,%rax
  402f68:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  402f6c:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  402f71:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  402f74:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  402f79:	89 c8                	mov    %ecx,%eax
  402f7b:	f7 e2                	mul    %edx
  402f7d:	c1 ea 03             	shr    $0x3,%edx
  402f80:	89 d0                	mov    %edx,%eax
  402f82:	c1 e0 02             	shl    $0x2,%eax
  402f85:	01 d0                	add    %edx,%eax
  402f87:	01 c0                	add    %eax,%eax
  402f89:	89 ca                	mov    %ecx,%edx
  402f8b:	29 c2                	sub    %eax,%edx
  402f8d:	89 d0                	mov    %edx,%eax
  402f8f:	83 c0 30             	add    $0x30,%eax
  402f92:	89 c2                	mov    %eax,%edx
  402f94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402f98:	88 10                	mov    %dl,(%rax)
  402f9a:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  402f9d:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  402fa3:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  402fa8:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  402fae:	f7 e2                	mul    %edx
  402fb0:	89 d0                	mov    %edx,%eax
  402fb2:	c1 e8 03             	shr    $0x3,%eax
  402fb5:	89 45 ec             	mov    %eax,-0x14(%rbp)
  402fb8:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  402fbc:	75 ae                	jne    402f6c <cvt_u+0x66>
  402fbe:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  402fc2:	48 83 c0 2b          	add    $0x2b,%rax
  402fc6:	89 c2                	mov    %eax,%edx
  402fc8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402fcc:	89 d1                	mov    %edx,%ecx
  402fce:	29 c1                	sub    %eax,%ecx
  402fd0:	89 c8                	mov    %ecx,%eax
  402fd2:	89 c3                	mov    %eax,%ebx
  402fd4:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  402fd8:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  402fdc:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  402fe0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  402fe4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  402fe8:	8b 75 10             	mov    0x10(%rbp),%esi
  402feb:	89 34 24             	mov    %esi,(%rsp)
  402fee:	45 89 c1             	mov    %r8d,%r9d
  402ff1:	49 89 f8             	mov    %rdi,%r8
  402ff4:	89 de                	mov    %ebx,%esi
  402ff6:	48 89 c7             	mov    %rax,%rdi
  402ff9:	e8 cb 13 00 00       	callq  4043c9 <Fmt_putd>
  402ffe:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  403005:	5b                   	pop    %rbx
  403006:	c9                   	leaveq 
  403007:	c3                   	retq   

0000000000403008 <cvt_o>:
  403008:	55                   	push   %rbp
  403009:	48 89 e5             	mov    %rsp,%rbp
  40300c:	53                   	push   %rbx
  40300d:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  403014:	89 7d ac             	mov    %edi,-0x54(%rbp)
  403017:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  40301b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  40301f:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403023:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403027:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  40302b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40302f:	8b 10                	mov    (%rax),%edx
  403031:	83 fa 30             	cmp    $0x30,%edx
  403034:	73 15                	jae    40304b <cvt_o+0x43>
  403036:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40303a:	8b 10                	mov    (%rax),%edx
  40303c:	89 d2                	mov    %edx,%edx
  40303e:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403042:	8b 08                	mov    (%rax),%ecx
  403044:	83 c1 08             	add    $0x8,%ecx
  403047:	89 08                	mov    %ecx,(%rax)
  403049:	eb 0f                	jmp    40305a <cvt_o+0x52>
  40304b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40304f:	48 89 ca             	mov    %rcx,%rdx
  403052:	48 83 c1 08          	add    $0x8,%rcx
  403056:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40305a:	48 89 d0             	mov    %rdx,%rax
  40305d:	8b 00                	mov    (%rax),%eax
  40305f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403062:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403066:	48 83 c0 2b          	add    $0x2b,%rax
  40306a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40306e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403073:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403076:	83 e0 07             	and    $0x7,%eax
  403079:	83 c0 30             	add    $0x30,%eax
  40307c:	89 c2                	mov    %eax,%edx
  40307e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403082:	88 10                	mov    %dl,(%rax)
  403084:	c1 6d ec 03          	shrl   $0x3,-0x14(%rbp)
  403088:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  40308c:	75 e0                	jne    40306e <cvt_o+0x66>
  40308e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403092:	48 83 c0 2b          	add    $0x2b,%rax
  403096:	89 c2                	mov    %eax,%edx
  403098:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40309c:	89 d1                	mov    %edx,%ecx
  40309e:	29 c1                	sub    %eax,%ecx
  4030a0:	89 c8                	mov    %ecx,%eax
  4030a2:	89 c3                	mov    %eax,%ebx
  4030a4:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  4030a8:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  4030ac:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  4030b0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  4030b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4030b8:	8b 75 10             	mov    0x10(%rbp),%esi
  4030bb:	89 34 24             	mov    %esi,(%rsp)
  4030be:	45 89 c1             	mov    %r8d,%r9d
  4030c1:	49 89 f8             	mov    %rdi,%r8
  4030c4:	89 de                	mov    %ebx,%esi
  4030c6:	48 89 c7             	mov    %rax,%rdi
  4030c9:	e8 fb 12 00 00       	callq  4043c9 <Fmt_putd>
  4030ce:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  4030d5:	5b                   	pop    %rbx
  4030d6:	c9                   	leaveq 
  4030d7:	c3                   	retq   

00000000004030d8 <cvt_x>:
  4030d8:	55                   	push   %rbp
  4030d9:	48 89 e5             	mov    %rsp,%rbp
  4030dc:	53                   	push   %rbx
  4030dd:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  4030e4:	89 7d ac             	mov    %edi,-0x54(%rbp)
  4030e7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4030eb:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4030ef:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  4030f3:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  4030f7:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  4030fb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4030ff:	8b 10                	mov    (%rax),%edx
  403101:	83 fa 30             	cmp    $0x30,%edx
  403104:	73 15                	jae    40311b <cvt_x+0x43>
  403106:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40310a:	8b 10                	mov    (%rax),%edx
  40310c:	89 d2                	mov    %edx,%edx
  40310e:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403112:	8b 08                	mov    (%rax),%ecx
  403114:	83 c1 08             	add    $0x8,%ecx
  403117:	89 08                	mov    %ecx,(%rax)
  403119:	eb 0f                	jmp    40312a <cvt_x+0x52>
  40311b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40311f:	48 89 ca             	mov    %rcx,%rdx
  403122:	48 83 c1 08          	add    $0x8,%rcx
  403126:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40312a:	48 89 d0             	mov    %rdx,%rax
  40312d:	8b 00                	mov    (%rax),%eax
  40312f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403132:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403136:	48 83 c0 2b          	add    $0x2b,%rax
  40313a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40313e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403143:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403146:	83 e0 0f             	and    $0xf,%eax
  403149:	89 c2                	mov    %eax,%edx
  40314b:	48 8d 05 80 1b 00 00 	lea    0x1b80(%rip),%rax        # 404cd2 <_IO_stdin_used+0x35a>
  403152:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  403156:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40315a:	88 10                	mov    %dl,(%rax)
  40315c:	c1 6d ec 04          	shrl   $0x4,-0x14(%rbp)
  403160:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  403164:	75 d8                	jne    40313e <cvt_x+0x66>
  403166:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40316a:	48 83 c0 2b          	add    $0x2b,%rax
  40316e:	89 c2                	mov    %eax,%edx
  403170:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403174:	89 d1                	mov    %edx,%ecx
  403176:	29 c1                	sub    %eax,%ecx
  403178:	89 c8                	mov    %ecx,%eax
  40317a:	89 c3                	mov    %eax,%ebx
  40317c:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403180:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403184:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  403188:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40318c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403190:	8b 75 10             	mov    0x10(%rbp),%esi
  403193:	89 34 24             	mov    %esi,(%rsp)
  403196:	45 89 c1             	mov    %r8d,%r9d
  403199:	49 89 f8             	mov    %rdi,%r8
  40319c:	89 de                	mov    %ebx,%esi
  40319e:	48 89 c7             	mov    %rax,%rdi
  4031a1:	e8 23 12 00 00       	callq  4043c9 <Fmt_putd>
  4031a6:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  4031ad:	5b                   	pop    %rbx
  4031ae:	c9                   	leaveq 
  4031af:	c3                   	retq   

00000000004031b0 <cvt_p>:
  4031b0:	55                   	push   %rbp
  4031b1:	48 89 e5             	mov    %rsp,%rbp
  4031b4:	53                   	push   %rbx
  4031b5:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  4031bc:	89 7d ac             	mov    %edi,-0x54(%rbp)
  4031bf:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  4031c3:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  4031c7:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  4031cb:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  4031cf:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  4031d3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  4031d7:	8b 10                	mov    (%rax),%edx
  4031d9:	83 fa 30             	cmp    $0x30,%edx
  4031dc:	73 15                	jae    4031f3 <cvt_p+0x43>
  4031de:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4031e2:	8b 10                	mov    (%rax),%edx
  4031e4:	89 d2                	mov    %edx,%edx
  4031e6:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4031ea:	8b 08                	mov    (%rax),%ecx
  4031ec:	83 c1 08             	add    $0x8,%ecx
  4031ef:	89 08                	mov    %ecx,(%rax)
  4031f1:	eb 0f                	jmp    403202 <cvt_p+0x52>
  4031f3:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4031f7:	48 89 ca             	mov    %rcx,%rdx
  4031fa:	48 83 c1 08          	add    $0x8,%rcx
  4031fe:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403202:	48 89 d0             	mov    %rdx,%rax
  403205:	48 8b 00             	mov    (%rax),%rax
  403208:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40320c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403210:	48 83 c0 2b          	add    $0x2b,%rax
  403214:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403218:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%rbp)
  40321f:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403224:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403228:	48 89 c2             	mov    %rax,%rdx
  40322b:	83 e2 0f             	and    $0xf,%edx
  40322e:	48 8d 05 9d 1a 00 00 	lea    0x1a9d(%rip),%rax        # 404cd2 <_IO_stdin_used+0x35a>
  403235:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  403239:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40323d:	88 10                	mov    %dl,(%rax)
  40323f:	48 c1 6d e8 04       	shrq   $0x4,-0x18(%rbp)
  403244:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403249:	75 d4                	jne    40321f <cvt_p+0x6f>
  40324b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40324f:	48 83 c0 2b          	add    $0x2b,%rax
  403253:	89 c2                	mov    %eax,%edx
  403255:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403259:	89 d1                	mov    %edx,%ecx
  40325b:	29 c1                	sub    %eax,%ecx
  40325d:	89 c8                	mov    %ecx,%eax
  40325f:	89 c3                	mov    %eax,%ebx
  403261:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403265:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403269:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  40326d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  403271:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403275:	8b 75 dc             	mov    -0x24(%rbp),%esi
  403278:	89 34 24             	mov    %esi,(%rsp)
  40327b:	45 89 c1             	mov    %r8d,%r9d
  40327e:	49 89 f8             	mov    %rdi,%r8
  403281:	89 de                	mov    %ebx,%esi
  403283:	48 89 c7             	mov    %rax,%rdi
  403286:	e8 3e 11 00 00       	callq  4043c9 <Fmt_putd>
  40328b:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  403292:	5b                   	pop    %rbx
  403293:	c9                   	leaveq 
  403294:	c3                   	retq   

0000000000403295 <cvt_c>:
  403295:	55                   	push   %rbp
  403296:	48 89 e5             	mov    %rsp,%rbp
  403299:	48 83 ec 40          	sub    $0x40,%rsp
  40329d:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4032a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4032a4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4032a8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4032ac:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  4032b0:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  4032b4:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  4032bb:	75 07                	jne    4032c4 <cvt_c+0x2f>
  4032bd:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  4032c4:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  4032c8:	79 0e                	jns    4032d8 <cvt_c+0x43>
  4032ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4032ce:	48 83 c0 2d          	add    $0x2d,%rax
  4032d2:	c6 00 01             	movb   $0x1,(%rax)
  4032d5:	f7 5d c4             	negl   -0x3c(%rbp)
  4032d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4032dc:	48 83 c0 2d          	add    $0x2d,%rax
  4032e0:	0f b6 00             	movzbl (%rax),%eax
  4032e3:	84 c0                	test   %al,%al
  4032e5:	75 2c                	jne    403313 <cvt_c+0x7e>
  4032e7:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4032ea:	83 e8 01             	sub    $0x1,%eax
  4032ed:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4032f0:	eb 12                	jmp    403304 <cvt_c+0x6f>
  4032f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4032f6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4032fa:	48 89 c6             	mov    %rax,%rsi
  4032fd:	bf 20 00 00 00       	mov    $0x20,%edi
  403302:	ff d2                	callq  *%rdx
  403304:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403308:	0f 9f c0             	setg   %al
  40330b:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  40330f:	84 c0                	test   %al,%al
  403311:	75 df                	jne    4032f2 <cvt_c+0x5d>
  403313:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403317:	8b 10                	mov    (%rax),%edx
  403319:	83 fa 30             	cmp    $0x30,%edx
  40331c:	73 15                	jae    403333 <cvt_c+0x9e>
  40331e:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403322:	8b 10                	mov    (%rax),%edx
  403324:	89 d2                	mov    %edx,%edx
  403326:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  40332a:	8b 08                	mov    (%rax),%ecx
  40332c:	83 c1 08             	add    $0x8,%ecx
  40332f:	89 08                	mov    %ecx,(%rax)
  403331:	eb 0f                	jmp    403342 <cvt_c+0xad>
  403333:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403337:	48 89 ca             	mov    %rcx,%rdx
  40333a:	48 83 c1 08          	add    $0x8,%rcx
  40333e:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403342:	48 89 d0             	mov    %rdx,%rax
  403345:	8b 00                	mov    (%rax),%eax
  403347:	0f b6 c0             	movzbl %al,%eax
  40334a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40334e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  403352:	48 89 d6             	mov    %rdx,%rsi
  403355:	89 c7                	mov    %eax,%edi
  403357:	ff d1                	callq  *%rcx
  403359:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40335d:	48 83 c0 2d          	add    $0x2d,%rax
  403361:	0f b6 00             	movzbl (%rax),%eax
  403364:	84 c0                	test   %al,%al
  403366:	74 2c                	je     403394 <cvt_c+0xff>
  403368:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40336b:	83 e8 01             	sub    $0x1,%eax
  40336e:	89 45 f8             	mov    %eax,-0x8(%rbp)
  403371:	eb 12                	jmp    403385 <cvt_c+0xf0>
  403373:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403377:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40337b:	48 89 c6             	mov    %rax,%rsi
  40337e:	bf 20 00 00 00       	mov    $0x20,%edi
  403383:	ff d2                	callq  *%rdx
  403385:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  403389:	0f 9f c0             	setg   %al
  40338c:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
  403390:	84 c0                	test   %al,%al
  403392:	75 df                	jne    403373 <cvt_c+0xde>
  403394:	c9                   	leaveq 
  403395:	c3                   	retq   

0000000000403396 <cvt_f>:
  403396:	55                   	push   %rbp
  403397:	48 89 e5             	mov    %rsp,%rbp
  40339a:	53                   	push   %rbx
  40339b:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
  4033a2:	89 bd 4c fe ff ff    	mov    %edi,-0x1b4(%rbp)
  4033a8:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
  4033af:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  4033b6:	48 89 8d 30 fe ff ff 	mov    %rcx,-0x1d0(%rbp)
  4033bd:	4c 89 85 28 fe ff ff 	mov    %r8,-0x1d8(%rbp)
  4033c4:	44 89 8d 24 fe ff ff 	mov    %r9d,-0x1dc(%rbp)
  4033cb:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4033cf:	79 07                	jns    4033d8 <cvt_f+0x42>
  4033d1:	c7 45 10 06 00 00 00 	movl   $0x6,0x10(%rbp)
  4033d8:	83 bd 4c fe ff ff 67 	cmpl   $0x67,-0x1b4(%rbp)
  4033df:	75 0d                	jne    4033ee <cvt_f+0x58>
  4033e1:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4033e5:	75 07                	jne    4033ee <cvt_f+0x58>
  4033e7:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  4033ee:	83 7d 10 63          	cmpl   $0x63,0x10(%rbp)
  4033f2:	7e 1b                	jle    40340f <cvt_f+0x79>
  4033f4:	ba 7e 00 00 00       	mov    $0x7e,%edx
  4033f9:	48 8d 35 c8 18 00 00 	lea    0x18c8(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403400:	48 8d 05 a1 29 20 00 	lea    0x2029a1(%rip),%rax        # 605da8 <Assert_Failed>
  403407:	48 89 c7             	mov    %rax,%rdi
  40340a:	e8 f1 e2 ff ff       	callq  401700 <Except_raise>
  40340f:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
  403415:	88 05 f6 2c 20 00    	mov    %al,0x202cf6(%rip)        # 606111 <fmt.2280+0x4>
  40341b:	8b 4d 10             	mov    0x10(%rbp),%ecx
  40341e:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403423:	89 c8                	mov    %ecx,%eax
  403425:	f7 ea                	imul   %edx
  403427:	c1 fa 02             	sar    $0x2,%edx
  40342a:	89 c8                	mov    %ecx,%eax
  40342c:	c1 f8 1f             	sar    $0x1f,%eax
  40342f:	29 c2                	sub    %eax,%edx
  403431:	89 d0                	mov    %edx,%eax
  403433:	c1 e0 02             	shl    $0x2,%eax
  403436:	01 d0                	add    %edx,%eax
  403438:	01 c0                	add    %eax,%eax
  40343a:	89 ca                	mov    %ecx,%edx
  40343c:	29 c2                	sub    %eax,%edx
  40343e:	89 d0                	mov    %edx,%eax
  403440:	83 c0 30             	add    $0x30,%eax
  403443:	88 05 c7 2c 20 00    	mov    %al,0x202cc7(%rip)        # 606110 <fmt.2280+0x3>
  403449:	8b 4d 10             	mov    0x10(%rbp),%ecx
  40344c:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403451:	89 c8                	mov    %ecx,%eax
  403453:	f7 ea                	imul   %edx
  403455:	c1 fa 02             	sar    $0x2,%edx
  403458:	89 c8                	mov    %ecx,%eax
  40345a:	c1 f8 1f             	sar    $0x1f,%eax
  40345d:	89 d1                	mov    %edx,%ecx
  40345f:	29 c1                	sub    %eax,%ecx
  403461:	ba 67 66 66 66       	mov    $0x66666667,%edx
  403466:	89 c8                	mov    %ecx,%eax
  403468:	f7 ea                	imul   %edx
  40346a:	c1 fa 02             	sar    $0x2,%edx
  40346d:	89 c8                	mov    %ecx,%eax
  40346f:	c1 f8 1f             	sar    $0x1f,%eax
  403472:	29 c2                	sub    %eax,%edx
  403474:	89 d0                	mov    %edx,%eax
  403476:	c1 e0 02             	shl    $0x2,%eax
  403479:	01 d0                	add    %edx,%eax
  40347b:	01 c0                	add    %eax,%eax
  40347d:	89 ca                	mov    %ecx,%edx
  40347f:	29 c2                	sub    %eax,%edx
  403481:	89 d0                	mov    %edx,%eax
  403483:	83 c0 30             	add    $0x30,%eax
  403486:	88 05 83 2c 20 00    	mov    %al,0x202c83(%rip)        # 60610f <fmt.2280+0x2>
  40348c:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  403493:	8b 50 04             	mov    0x4(%rax),%edx
  403496:	81 fa b0 00 00 00    	cmp    $0xb0,%edx
  40349c:	73 18                	jae    4034b6 <cvt_f+0x120>
  40349e:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4034a2:	8b 50 04             	mov    0x4(%rax),%edx
  4034a5:	89 d2                	mov    %edx,%edx
  4034a7:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4034ab:	8b 48 04             	mov    0x4(%rax),%ecx
  4034ae:	83 c1 10             	add    $0x10,%ecx
  4034b1:	89 48 04             	mov    %ecx,0x4(%rax)
  4034b4:	eb 0f                	jmp    4034c5 <cvt_f+0x12f>
  4034b6:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4034ba:	48 89 ca             	mov    %rcx,%rdx
  4034bd:	48 83 c1 08          	add    $0x8,%rcx
  4034c1:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4034c5:	48 89 d0             	mov    %rdx,%rax
  4034c8:	f2 0f 10 00          	movsd  (%rax),%xmm0
  4034cc:	48 8d 15 3a 2c 20 00 	lea    0x202c3a(%rip),%rdx        # 60610d <fmt.2280>
  4034d3:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4034da:	48 89 d6             	mov    %rdx,%rsi
  4034dd:	48 89 c7             	mov    %rax,%rdi
  4034e0:	b8 01 00 00 00       	mov    $0x1,%eax
  4034e5:	e8 26 d8 ff ff       	callq  400d10 <sprintf@plt>
  4034ea:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4034f1:	48 89 c7             	mov    %rax,%rdi
  4034f4:	e8 17 d7 ff ff       	callq  400c10 <strlen@plt>
  4034f9:	89 c3                	mov    %eax,%ebx
  4034fb:	44 8b 85 24 fe ff ff 	mov    -0x1dc(%rbp),%r8d
  403502:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  403509:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
  403510:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
  403517:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  40351e:	8b 75 10             	mov    0x10(%rbp),%esi
  403521:	89 34 24             	mov    %esi,(%rsp)
  403524:	45 89 c1             	mov    %r8d,%r9d
  403527:	49 89 f8             	mov    %rdi,%r8
  40352a:	89 de                	mov    %ebx,%esi
  40352c:	48 89 c7             	mov    %rax,%rdi
  40352f:	e8 95 0e 00 00       	callq  4043c9 <Fmt_putd>
  403534:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
  40353b:	5b                   	pop    %rbx
  40353c:	c9                   	leaveq 
  40353d:	c3                   	retq   

000000000040353e <outc>:
  40353e:	55                   	push   %rbp
  40353f:	48 89 e5             	mov    %rsp,%rbp
  403542:	48 83 ec 20          	sub    $0x20,%rsp
  403546:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403549:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40354d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403551:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403555:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403559:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40355c:	48 89 d6             	mov    %rdx,%rsi
  40355f:	89 c7                	mov    %eax,%edi
  403561:	e8 ea d6 ff ff       	callq  400c50 <_IO_putc@plt>
  403566:	c9                   	leaveq 
  403567:	c3                   	retq   

0000000000403568 <insert>:
  403568:	55                   	push   %rbp
  403569:	48 89 e5             	mov    %rsp,%rbp
  40356c:	48 83 ec 20          	sub    $0x20,%rsp
  403570:	89 7d ec             	mov    %edi,-0x14(%rbp)
  403573:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403577:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40357b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40357f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403583:	48 8b 50 08          	mov    0x8(%rax),%rdx
  403587:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40358b:	48 8b 08             	mov    (%rax),%rcx
  40358e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403592:	8b 40 10             	mov    0x10(%rax),%eax
  403595:	48 98                	cltq   
  403597:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  40359b:	48 39 c2             	cmp    %rax,%rdx
  40359e:	72 1b                	jb     4035bb <insert+0x53>
  4035a0:	ba a2 00 00 00       	mov    $0xa2,%edx
  4035a5:	48 8d 35 1c 17 00 00 	lea    0x171c(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  4035ac:	48 8d 05 fd 27 20 00 	lea    0x2027fd(%rip),%rax        # 605db0 <Fmt_Overflow>
  4035b3:	48 89 c7             	mov    %rax,%rdi
  4035b6:	e8 45 e1 ff ff       	callq  401700 <Except_raise>
  4035bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4035bf:	48 8b 40 08          	mov    0x8(%rax),%rax
  4035c3:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4035c6:	88 10                	mov    %dl,(%rax)
  4035c8:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4035cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4035d0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4035d4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4035d7:	c9                   	leaveq 
  4035d8:	c3                   	retq   

00000000004035d9 <append>:
  4035d9:	55                   	push   %rbp
  4035da:	48 89 e5             	mov    %rsp,%rbp
  4035dd:	53                   	push   %rbx
  4035de:	48 83 ec 28          	sub    $0x28,%rsp
  4035e2:	89 7d dc             	mov    %edi,-0x24(%rbp)
  4035e5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4035e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4035ed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4035f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4035f5:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4035f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4035fd:	48 8b 08             	mov    (%rax),%rcx
  403600:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403604:	8b 40 10             	mov    0x10(%rax),%eax
  403607:	48 98                	cltq   
  403609:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  40360d:	48 39 c2             	cmp    %rax,%rdx
  403610:	72 60                	jb     403672 <append+0x99>
  403612:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403616:	8b 40 10             	mov    0x10(%rax),%eax
  403619:	01 c0                	add    %eax,%eax
  40361b:	48 63 d8             	movslq %eax,%rbx
  40361e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403622:	48 8b 00             	mov    (%rax),%rax
  403625:	b9 a9 00 00 00       	mov    $0xa9,%ecx
  40362a:	48 8d 15 97 16 00 00 	lea    0x1697(%rip),%rdx        # 404cc8 <_IO_stdin_used+0x350>
  403631:	48 89 de             	mov    %rbx,%rsi
  403634:	48 89 c7             	mov    %rax,%rdi
  403637:	e8 ef 11 00 00       	callq  40482b <Mem_resize>
  40363c:	48 89 c2             	mov    %rax,%rdx
  40363f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403643:	48 89 10             	mov    %rdx,(%rax)
  403646:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40364a:	48 8b 10             	mov    (%rax),%rdx
  40364d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403651:	8b 40 10             	mov    0x10(%rax),%eax
  403654:	48 98                	cltq   
  403656:	48 01 c2             	add    %rax,%rdx
  403659:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40365d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403661:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403665:	8b 40 10             	mov    0x10(%rax),%eax
  403668:	8d 14 00             	lea    (%rax,%rax,1),%edx
  40366b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40366f:	89 50 10             	mov    %edx,0x10(%rax)
  403672:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403676:	48 8b 40 08          	mov    0x8(%rax),%rax
  40367a:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40367d:	88 10                	mov    %dl,(%rax)
  40367f:	48 8d 50 01          	lea    0x1(%rax),%rdx
  403683:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403687:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40368b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40368e:	48 83 c4 28          	add    $0x28,%rsp
  403692:	5b                   	pop    %rbx
  403693:	c9                   	leaveq 
  403694:	c3                   	retq   

0000000000403695 <Fmt_puts>:
  403695:	55                   	push   %rbp
  403696:	48 89 e5             	mov    %rsp,%rbp
  403699:	48 83 ec 40          	sub    $0x40,%rsp
  40369d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4036a1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4036a4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4036a8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4036ac:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  4036b0:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  4036b4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4036b9:	75 1b                	jne    4036d6 <Fmt_puts+0x41>
  4036bb:	ba b3 00 00 00       	mov    $0xb3,%edx
  4036c0:	48 8d 35 01 16 00 00 	lea    0x1601(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  4036c7:	48 8d 05 da 26 20 00 	lea    0x2026da(%rip),%rax        # 605da8 <Assert_Failed>
  4036ce:	48 89 c7             	mov    %rax,%rdi
  4036d1:	e8 2a e0 ff ff       	callq  401700 <Except_raise>
  4036d6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4036da:	79 1b                	jns    4036f7 <Fmt_puts+0x62>
  4036dc:	ba b4 00 00 00       	mov    $0xb4,%edx
  4036e1:	48 8d 35 e0 15 00 00 	lea    0x15e0(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  4036e8:	48 8d 05 b9 26 20 00 	lea    0x2026b9(%rip),%rax        # 605da8 <Assert_Failed>
  4036ef:	48 89 c7             	mov    %rax,%rdi
  4036f2:	e8 09 e0 ff ff       	callq  401700 <Except_raise>
  4036f7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  4036fc:	75 1b                	jne    403719 <Fmt_puts+0x84>
  4036fe:	ba b5 00 00 00       	mov    $0xb5,%edx
  403703:	48 8d 35 be 15 00 00 	lea    0x15be(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  40370a:	48 8d 05 97 26 20 00 	lea    0x202697(%rip),%rax        # 605da8 <Assert_Failed>
  403711:	48 89 c7             	mov    %rax,%rdi
  403714:	e8 e7 df ff ff       	callq  401700 <Except_raise>
  403719:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  403720:	75 07                	jne    403729 <Fmt_puts+0x94>
  403722:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  403729:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  40372d:	79 0e                	jns    40373d <Fmt_puts+0xa8>
  40372f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403733:	48 83 c0 2d          	add    $0x2d,%rax
  403737:	c6 00 01             	movb   $0x1,(%rax)
  40373a:	f7 5d c4             	negl   -0x3c(%rbp)
  40373d:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  403741:	78 0b                	js     40374e <Fmt_puts+0xb9>
  403743:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403747:	48 83 c0 30          	add    $0x30,%rax
  40374b:	c6 00 00             	movb   $0x0,(%rax)
  40374e:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  403752:	78 0e                	js     403762 <Fmt_puts+0xcd>
  403754:	8b 45 10             	mov    0x10(%rbp),%eax
  403757:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  40375a:	7d 06                	jge    403762 <Fmt_puts+0xcd>
  40375c:	8b 45 10             	mov    0x10(%rbp),%eax
  40375f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  403762:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403766:	48 83 c0 2d          	add    $0x2d,%rax
  40376a:	0f b6 00             	movzbl (%rax),%eax
  40376d:	84 c0                	test   %al,%al
  40376f:	75 32                	jne    4037a3 <Fmt_puts+0x10e>
  403771:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  403774:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  403777:	89 d1                	mov    %edx,%ecx
  403779:	29 c1                	sub    %eax,%ecx
  40377b:	89 c8                	mov    %ecx,%eax
  40377d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  403780:	eb 12                	jmp    403794 <Fmt_puts+0xff>
  403782:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403786:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40378a:	48 89 c6             	mov    %rax,%rsi
  40378d:	bf 20 00 00 00       	mov    $0x20,%edi
  403792:	ff d2                	callq  *%rdx
  403794:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  403798:	0f 9f c0             	setg   %al
  40379b:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  40379f:	84 c0                	test   %al,%al
  4037a1:	75 df                	jne    403782 <Fmt_puts+0xed>
  4037a3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  4037aa:	eb 22                	jmp    4037ce <Fmt_puts+0x139>
  4037ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4037b0:	0f b6 00             	movzbl (%rax),%eax
  4037b3:	0f b6 c0             	movzbl %al,%eax
  4037b6:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  4037bb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4037bf:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4037c3:	48 89 d6             	mov    %rdx,%rsi
  4037c6:	89 c7                	mov    %eax,%edi
  4037c8:	ff d1                	callq  *%rcx
  4037ca:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  4037ce:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4037d1:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  4037d4:	7c d6                	jl     4037ac <Fmt_puts+0x117>
  4037d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4037da:	48 83 c0 2d          	add    $0x2d,%rax
  4037de:	0f b6 00             	movzbl (%rax),%eax
  4037e1:	84 c0                	test   %al,%al
  4037e3:	74 32                	je     403817 <Fmt_puts+0x182>
  4037e5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4037e8:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  4037eb:	89 d1                	mov    %edx,%ecx
  4037ed:	29 c1                	sub    %eax,%ecx
  4037ef:	89 c8                	mov    %ecx,%eax
  4037f1:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4037f4:	eb 12                	jmp    403808 <Fmt_puts+0x173>
  4037f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4037fa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4037fe:	48 89 c6             	mov    %rax,%rsi
  403801:	bf 20 00 00 00       	mov    $0x20,%edi
  403806:	ff d2                	callq  *%rdx
  403808:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  40380c:	0f 9f c0             	setg   %al
  40380f:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  403813:	84 c0                	test   %al,%al
  403815:	75 df                	jne    4037f6 <Fmt_puts+0x161>
  403817:	c9                   	leaveq 
  403818:	c3                   	retq   

0000000000403819 <Fmt_fmt>:
  403819:	55                   	push   %rbp
  40381a:	48 89 e5             	mov    %rsp,%rbp
  40381d:	53                   	push   %rbx
  40381e:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  403825:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  40382c:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  403833:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  40383a:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  403841:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  403848:	0f b6 c0             	movzbl %al,%eax
  40384b:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  403852:	00 
  403853:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403883 <Fmt_fmt+0x6a>
  40385a:	48 29 c8             	sub    %rcx,%rax
  40385d:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  403861:	ff e0                	jmpq   *%rax
  403863:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  403867:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  40386b:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  40386f:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  403873:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  403877:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  40387b:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  40387f:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  403883:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  40388a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403891:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  403897:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40389e:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  4038a5:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  4038ac:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  4038b0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4038b4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  4038bb:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  4038c2:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4038c6:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  4038cd:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  4038d4:	48 8b 9d 10 ff ff ff 	mov    -0xf0(%rbp),%rbx
  4038db:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  4038e2:	48 89 de             	mov    %rbx,%rsi
  4038e5:	48 89 c7             	mov    %rax,%rdi
  4038e8:	e8 2b 05 00 00       	callq  403e18 <Fmt_vfmt>
  4038ed:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  4038f4:	5b                   	pop    %rbx
  4038f5:	c9                   	leaveq 
  4038f6:	c3                   	retq   

00000000004038f7 <Fmt_print>:
  4038f7:	55                   	push   %rbp
  4038f8:	48 89 e5             	mov    %rsp,%rbp
  4038fb:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  403902:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  403909:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  403910:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  403917:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  40391e:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  403925:	0f b6 c0             	movzbl %al,%eax
  403928:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  40392f:	00 
  403930:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403960 <Fmt_print+0x69>
  403937:	48 29 d0             	sub    %rdx,%rax
  40393a:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  40393e:	ff e0                	jmpq   *%rax
  403940:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403944:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403948:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  40394c:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403950:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403954:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403958:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  40395c:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403960:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  403967:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40396e:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  403974:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40397b:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403982:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403989:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  40398d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403991:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403998:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  40399f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4039a3:	48 8b 05 2e 26 20 00 	mov    0x20262e(%rip),%rax        # 605fd8 <stdout@GLIBC_2.2.5>
  4039aa:	48 8b 00             	mov    (%rax),%rax
  4039ad:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  4039b4:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  4039bb:	48 89 c6             	mov    %rax,%rsi
  4039be:	48 8d 3d 79 fb ff ff 	lea    -0x487(%rip),%rdi        # 40353e <outc>
  4039c5:	e8 4e 04 00 00       	callq  403e18 <Fmt_vfmt>
  4039ca:	c9                   	leaveq 
  4039cb:	c3                   	retq   

00000000004039cc <Fmt_fprint>:
  4039cc:	55                   	push   %rbp
  4039cd:	48 89 e5             	mov    %rsp,%rbp
  4039d0:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  4039d7:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  4039de:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  4039e5:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  4039ec:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  4039f3:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  4039fa:	0f b6 c0             	movzbl %al,%eax
  4039fd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  403a04:	00 
  403a05:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403a35 <Fmt_fprint+0x69>
  403a0c:	48 29 d0             	sub    %rdx,%rax
  403a0f:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  403a13:	ff e0                	jmpq   *%rax
  403a15:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403a19:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403a1d:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  403a21:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403a25:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403a29:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403a2d:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  403a31:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403a35:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  403a3c:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403a43:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
  403a49:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403a50:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403a57:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403a5e:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403a62:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403a66:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403a6d:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  403a74:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403a78:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  403a7f:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  403a86:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  403a8d:	48 89 c6             	mov    %rax,%rsi
  403a90:	48 8d 3d a7 fa ff ff 	lea    -0x559(%rip),%rdi        # 40353e <outc>
  403a97:	e8 7c 03 00 00       	callq  403e18 <Fmt_vfmt>
  403a9c:	c9                   	leaveq 
  403a9d:	c3                   	retq   

0000000000403a9e <Fmt_sfmt>:
  403a9e:	55                   	push   %rbp
  403a9f:	48 89 e5             	mov    %rsp,%rbp
  403aa2:	53                   	push   %rbx
  403aa3:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  403aaa:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  403ab1:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)
  403ab7:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  403abe:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  403ac5:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  403acc:	0f b6 c0             	movzbl %al,%eax
  403acf:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  403ad6:	00 
  403ad7:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403b07 <Fmt_sfmt+0x69>
  403ade:	48 29 c8             	sub    %rcx,%rax
  403ae1:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  403ae5:	ff e0                	jmpq   *%rax
  403ae7:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  403aeb:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  403aef:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  403af3:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  403af7:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  403afb:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  403aff:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  403b03:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  403b07:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  403b0e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403b15:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  403b1b:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403b22:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403b29:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403b30:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403b34:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403b38:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  403b3f:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  403b46:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403b4a:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  403b51:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  403b58:	8b 9d 14 ff ff ff    	mov    -0xec(%rbp),%ebx
  403b5e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  403b65:	89 de                	mov    %ebx,%esi
  403b67:	48 89 c7             	mov    %rax,%rdi
  403b6a:	e8 16 00 00 00       	callq  403b85 <Fmt_vsfmt>
  403b6f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  403b75:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  403b7b:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  403b82:	5b                   	pop    %rbx
  403b83:	c9                   	leaveq 
  403b84:	c3                   	retq   

0000000000403b85 <Fmt_vsfmt>:
  403b85:	55                   	push   %rbp
  403b86:	48 89 e5             	mov    %rsp,%rbp
  403b89:	48 83 ec 40          	sub    $0x40,%rsp
  403b8d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403b91:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  403b94:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  403b98:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  403b9c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  403ba1:	75 1b                	jne    403bbe <Fmt_vsfmt+0x39>
  403ba3:	ba e8 00 00 00       	mov    $0xe8,%edx
  403ba8:	48 8d 35 19 11 00 00 	lea    0x1119(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403baf:	48 8d 05 f2 21 20 00 	lea    0x2021f2(%rip),%rax        # 605da8 <Assert_Failed>
  403bb6:	48 89 c7             	mov    %rax,%rdi
  403bb9:	e8 42 db ff ff       	callq  401700 <Except_raise>
  403bbe:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  403bc2:	7f 1b                	jg     403bdf <Fmt_vsfmt+0x5a>
  403bc4:	ba e9 00 00 00       	mov    $0xe9,%edx
  403bc9:	48 8d 35 f8 10 00 00 	lea    0x10f8(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403bd0:	48 8d 05 d1 21 20 00 	lea    0x2021d1(%rip),%rax        # 605da8 <Assert_Failed>
  403bd7:	48 89 c7             	mov    %rax,%rdi
  403bda:	e8 21 db ff ff       	callq  401700 <Except_raise>
  403bdf:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  403be4:	75 1b                	jne    403c01 <Fmt_vsfmt+0x7c>
  403be6:	ba ea 00 00 00       	mov    $0xea,%edx
  403beb:	48 8d 35 d6 10 00 00 	lea    0x10d6(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403bf2:	48 8d 05 af 21 20 00 	lea    0x2021af(%rip),%rax        # 605da8 <Assert_Failed>
  403bf9:	48 89 c7             	mov    %rax,%rdi
  403bfc:	e8 ff da ff ff       	callq  401700 <Except_raise>
  403c01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403c05:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403c09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403c0d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403c11:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  403c14:	89 45 f0             	mov    %eax,-0x10(%rbp)
  403c17:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  403c1b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  403c1f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  403c23:	48 89 c6             	mov    %rax,%rsi
  403c26:	48 8d 3d 3b f9 ff ff 	lea    -0x6c5(%rip),%rdi        # 403568 <insert>
  403c2d:	e8 e6 01 00 00       	callq  403e18 <Fmt_vfmt>
  403c32:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  403c36:	48 89 c6             	mov    %rax,%rsi
  403c39:	bf 00 00 00 00       	mov    $0x0,%edi
  403c3e:	e8 25 f9 ff ff       	callq  403568 <insert>
  403c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403c47:	89 c2                	mov    %eax,%edx
  403c49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403c4d:	89 d1                	mov    %edx,%ecx
  403c4f:	29 c1                	sub    %eax,%ecx
  403c51:	89 c8                	mov    %ecx,%eax
  403c53:	83 e8 01             	sub    $0x1,%eax
  403c56:	c9                   	leaveq 
  403c57:	c3                   	retq   

0000000000403c58 <Fmt_string>:
  403c58:	55                   	push   %rbp
  403c59:	48 89 e5             	mov    %rsp,%rbp
  403c5c:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  403c63:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  403c6a:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  403c71:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  403c78:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  403c7f:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  403c86:	0f b6 c0             	movzbl %al,%eax
  403c89:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  403c90:	00 
  403c91:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 403cc1 <Fmt_string+0x69>
  403c98:	48 29 d0             	sub    %rdx,%rax
  403c9b:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  403c9f:	ff e0                	jmpq   *%rax
  403ca1:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  403ca5:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  403ca9:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  403cad:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  403cb1:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  403cb5:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  403cb9:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  403cbd:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  403cc1:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  403cc8:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  403ccf:	00 
  403cd0:	75 1b                	jne    403ced <Fmt_string+0x95>
  403cd2:	ba f4 00 00 00       	mov    $0xf4,%edx
  403cd7:	48 8d 35 ea 0f 00 00 	lea    0xfea(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403cde:	48 8d 05 c3 20 20 00 	lea    0x2020c3(%rip),%rax        # 605da8 <Assert_Failed>
  403ce5:	48 89 c7             	mov    %rax,%rdi
  403ce8:	e8 13 da ff ff       	callq  401700 <Except_raise>
  403ced:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403cf4:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  403cfa:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403d01:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  403d08:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403d0f:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  403d13:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403d17:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  403d1e:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  403d25:	48 89 50 10          	mov    %rdx,0x10(%rax)
  403d29:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  403d30:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  403d37:	48 89 d6             	mov    %rdx,%rsi
  403d3a:	48 89 c7             	mov    %rax,%rdi
  403d3d:	e8 10 00 00 00       	callq  403d52 <Fmt_vstring>
  403d42:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  403d49:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  403d50:	c9                   	leaveq 
  403d51:	c3                   	retq   

0000000000403d52 <Fmt_vstring>:
  403d52:	55                   	push   %rbp
  403d53:	48 89 e5             	mov    %rsp,%rbp
  403d56:	53                   	push   %rbx
  403d57:	48 83 ec 38          	sub    $0x38,%rsp
  403d5b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  403d5f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  403d63:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  403d68:	75 1b                	jne    403d85 <Fmt_vstring+0x33>
  403d6a:	ba fc 00 00 00       	mov    $0xfc,%edx
  403d6f:	48 8d 35 52 0f 00 00 	lea    0xf52(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403d76:	48 8d 05 2b 20 20 00 	lea    0x20202b(%rip),%rax        # 605da8 <Assert_Failed>
  403d7d:	48 89 c7             	mov    %rax,%rdi
  403d80:	e8 7b d9 ff ff       	callq  401700 <Except_raise>
  403d85:	c7 45 e0 00 01 00 00 	movl   $0x100,-0x20(%rbp)
  403d8c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  403d8f:	48 98                	cltq   
  403d91:	ba fe 00 00 00       	mov    $0xfe,%edx
  403d96:	48 8d 35 2b 0f 00 00 	lea    0xf2b(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403d9d:	48 89 c7             	mov    %rax,%rdi
  403da0:	e8 13 09 00 00       	callq  4046b8 <Mem_alloc>
  403da5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  403da9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403dad:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  403db1:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  403db5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  403db9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  403dbd:	48 89 c6             	mov    %rax,%rsi
  403dc0:	48 8d 3d 12 f8 ff ff 	lea    -0x7ee(%rip),%rdi        # 4035d9 <append>
  403dc7:	e8 4c 00 00 00       	callq  403e18 <Fmt_vfmt>
  403dcc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  403dd0:	48 89 c6             	mov    %rax,%rsi
  403dd3:	bf 00 00 00 00       	mov    $0x0,%edi
  403dd8:	e8 fc f7 ff ff       	callq  4035d9 <append>
  403ddd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403de1:	48 89 c2             	mov    %rax,%rdx
  403de4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403de8:	48 89 d3             	mov    %rdx,%rbx
  403deb:	48 29 c3             	sub    %rax,%rbx
  403dee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403df2:	b9 01 01 00 00       	mov    $0x101,%ecx
  403df7:	48 8d 15 ca 0e 00 00 	lea    0xeca(%rip),%rdx        # 404cc8 <_IO_stdin_used+0x350>
  403dfe:	48 89 de             	mov    %rbx,%rsi
  403e01:	48 89 c7             	mov    %rax,%rdi
  403e04:	e8 22 0a 00 00       	callq  40482b <Mem_resize>
  403e09:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  403e0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403e11:	48 83 c4 38          	add    $0x38,%rsp
  403e15:	5b                   	pop    %rbx
  403e16:	c9                   	leaveq 
  403e17:	c3                   	retq   

0000000000403e18 <Fmt_vfmt>:
  403e18:	55                   	push   %rbp
  403e19:	48 89 e5             	mov    %rsp,%rbp
  403e1c:	53                   	push   %rbx
  403e1d:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
  403e24:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  403e2b:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  403e32:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
  403e39:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  403e40:	48 83 bd c8 fe ff ff 	cmpq   $0x0,-0x138(%rbp)
  403e47:	00 
  403e48:	75 1b                	jne    403e65 <Fmt_vfmt+0x4d>
  403e4a:	ba 05 01 00 00       	mov    $0x105,%edx
  403e4f:	48 8d 35 72 0e 00 00 	lea    0xe72(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403e56:	48 8d 05 4b 1f 20 00 	lea    0x201f4b(%rip),%rax        # 605da8 <Assert_Failed>
  403e5d:	48 89 c7             	mov    %rax,%rdi
  403e60:	e8 9b d8 ff ff       	callq  401700 <Except_raise>
  403e65:	48 83 bd b8 fe ff ff 	cmpq   $0x0,-0x148(%rbp)
  403e6c:	00 
  403e6d:	0f 85 bf 04 00 00    	jne    404332 <Fmt_vfmt+0x51a>
  403e73:	ba 06 01 00 00       	mov    $0x106,%edx
  403e78:	48 8d 35 49 0e 00 00 	lea    0xe49(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403e7f:	48 8d 05 22 1f 20 00 	lea    0x201f22(%rip),%rax        # 605da8 <Assert_Failed>
  403e86:	48 89 c7             	mov    %rax,%rdi
  403e89:	e8 72 d8 ff ff       	callq  401700 <Except_raise>
  403e8e:	e9 a0 04 00 00       	jmpq   404333 <Fmt_vfmt+0x51b>
  403e93:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403e9a:	0f b6 00             	movzbl (%rax),%eax
  403e9d:	3c 25                	cmp    $0x25,%al
  403e9f:	75 16                	jne    403eb7 <Fmt_vfmt+0x9f>
  403ea1:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  403ea8:	01 
  403ea9:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403eb0:	0f b6 00             	movzbl (%rax),%eax
  403eb3:	3c 25                	cmp    $0x25,%al
  403eb5:	75 2f                	jne    403ee6 <Fmt_vfmt+0xce>
  403eb7:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403ebe:	0f b6 00             	movzbl (%rax),%eax
  403ec1:	0f b6 c0             	movzbl %al,%eax
  403ec4:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  403ecb:	01 
  403ecc:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  403ed3:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  403eda:	48 89 d6             	mov    %rdx,%rsi
  403edd:	89 c7                	mov    %eax,%edi
  403edf:	ff d1                	callq  *%rcx
  403ee1:	e9 4d 04 00 00       	jmpq   404333 <Fmt_vfmt+0x51b>
  403ee6:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  403eed:	c7 45 e8 00 00 00 80 	movl   $0x80000000,-0x18(%rbp)
  403ef4:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
  403efb:	ba 00 01 00 00       	mov    $0x100,%edx
  403f00:	be 00 00 00 00       	mov    $0x0,%esi
  403f05:	48 89 c7             	mov    %rax,%rdi
  403f08:	e8 53 cd ff ff       	callq  400c60 <memset@plt>
  403f0d:	48 8d 05 0c 2a 20 00 	lea    0x202a0c(%rip),%rax        # 606920 <Fmt_flags>
  403f14:	48 8b 00             	mov    (%rax),%rax
  403f17:	48 85 c0             	test   %rax,%rax
  403f1a:	0f 84 8f 00 00 00    	je     403faf <Fmt_vfmt+0x197>
  403f20:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403f27:	0f b6 00             	movzbl (%rax),%eax
  403f2a:	88 45 e7             	mov    %al,-0x19(%rbp)
  403f2d:	eb 5d                	jmp    403f8c <Fmt_vfmt+0x174>
  403f2f:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  403f33:	48 98                	cltq   
  403f35:	0f b6 84 05 d0 fe ff 	movzbl -0x130(%rbp,%rax,1),%eax
  403f3c:	ff 
  403f3d:	3c ff                	cmp    $0xff,%al
  403f3f:	75 1b                	jne    403f5c <Fmt_vfmt+0x144>
  403f41:	ba 12 01 00 00       	mov    $0x112,%edx
  403f46:	48 8d 35 7b 0d 00 00 	lea    0xd7b(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  403f4d:	48 8d 05 54 1e 20 00 	lea    0x201e54(%rip),%rax        # 605da8 <Assert_Failed>
  403f54:	48 89 c7             	mov    %rax,%rdi
  403f57:	e8 a4 d7 ff ff       	callq  401700 <Except_raise>
  403f5c:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  403f60:	48 63 d0             	movslq %eax,%rdx
  403f63:	0f b6 94 15 d0 fe ff 	movzbl -0x130(%rbp,%rdx,1),%edx
  403f6a:	ff 
  403f6b:	83 c2 01             	add    $0x1,%edx
  403f6e:	48 98                	cltq   
  403f70:	88 94 05 d0 fe ff ff 	mov    %dl,-0x130(%rbp,%rax,1)
  403f77:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  403f7e:	01 
  403f7f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403f86:	0f b6 00             	movzbl (%rax),%eax
  403f89:	88 45 e7             	mov    %al,-0x19(%rbp)
  403f8c:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
  403f90:	74 1d                	je     403faf <Fmt_vfmt+0x197>
  403f92:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  403f96:	48 8d 05 83 29 20 00 	lea    0x202983(%rip),%rax        # 606920 <Fmt_flags>
  403f9d:	48 8b 00             	mov    (%rax),%rax
  403fa0:	89 d6                	mov    %edx,%esi
  403fa2:	48 89 c7             	mov    %rax,%rdi
  403fa5:	e8 76 cc ff ff       	callq  400c20 <strchr@plt>
  403faa:	48 85 c0             	test   %rax,%rax
  403fad:	75 80                	jne    403f2f <Fmt_vfmt+0x117>
  403faf:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403fb6:	0f b6 00             	movzbl (%rax),%eax
  403fb9:	3c 2a                	cmp    $0x2a,%al
  403fbb:	74 30                	je     403fed <Fmt_vfmt+0x1d5>
  403fbd:	e8 8e cd ff ff       	callq  400d50 <__ctype_b_loc@plt>
  403fc2:	48 8b 10             	mov    (%rax),%rdx
  403fc5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403fcc:	0f b6 00             	movzbl (%rax),%eax
  403fcf:	48 0f be c0          	movsbq %al,%rax
  403fd3:	48 01 c0             	add    %rax,%rax
  403fd6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  403fda:	0f b7 00             	movzwl (%rax),%eax
  403fdd:	0f b7 c0             	movzwl %ax,%eax
  403fe0:	25 00 08 00 00       	and    $0x800,%eax
  403fe5:	85 c0                	test   %eax,%eax
  403fe7:	0f 84 26 01 00 00    	je     404113 <Fmt_vfmt+0x2fb>
  403fed:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  403ff4:	0f b6 00             	movzbl (%rax),%eax
  403ff7:	3c 2a                	cmp    $0x2a,%al
  403ff9:	75 6b                	jne    404066 <Fmt_vfmt+0x24e>
  403ffb:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  404002:	8b 10                	mov    (%rax),%edx
  404004:	83 fa 30             	cmp    $0x30,%edx
  404007:	73 15                	jae    40401e <Fmt_vfmt+0x206>
  404009:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40400d:	8b 10                	mov    (%rax),%edx
  40400f:	89 d2                	mov    %edx,%edx
  404011:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  404015:	8b 08                	mov    (%rax),%ecx
  404017:	83 c1 08             	add    $0x8,%ecx
  40401a:	89 08                	mov    %ecx,(%rax)
  40401c:	eb 0f                	jmp    40402d <Fmt_vfmt+0x215>
  40401e:	48 8b 48 08          	mov    0x8(%rax),%rcx
  404022:	48 89 ca             	mov    %rcx,%rdx
  404025:	48 83 c1 08          	add    $0x8,%rcx
  404029:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40402d:	48 89 d0             	mov    %rdx,%rax
  404030:	8b 00                	mov    (%rax),%eax
  404032:	89 45 e0             	mov    %eax,-0x20(%rbp)
  404035:	81 7d e0 00 00 00 80 	cmpl   $0x80000000,-0x20(%rbp)
  40403c:	75 1b                	jne    404059 <Fmt_vfmt+0x241>
  40403e:	ba 1a 01 00 00       	mov    $0x11a,%edx
  404043:	48 8d 35 7e 0c 00 00 	lea    0xc7e(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  40404a:	48 8d 05 57 1d 20 00 	lea    0x201d57(%rip),%rax        # 605da8 <Assert_Failed>
  404051:	48 89 c7             	mov    %rax,%rdi
  404054:	e8 a7 d6 ff ff       	callq  401700 <Except_raise>
  404059:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  404060:	01 
  404061:	e9 a7 00 00 00       	jmpq   40410d <Fmt_vfmt+0x2f5>
  404066:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  40406d:	eb 6e                	jmp    4040dd <Fmt_vfmt+0x2c5>
  40406f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404076:	0f b6 00             	movzbl (%rax),%eax
  404079:	0f be c0             	movsbl %al,%eax
  40407c:	83 e8 30             	sub    $0x30,%eax
  40407f:	89 45 d8             	mov    %eax,-0x28(%rbp)
  404082:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  404087:	89 c1                	mov    %eax,%ecx
  404089:	2b 4d d8             	sub    -0x28(%rbp),%ecx
  40408c:	ba 67 66 66 66       	mov    $0x66666667,%edx
  404091:	89 c8                	mov    %ecx,%eax
  404093:	f7 ea                	imul   %edx
  404095:	c1 fa 02             	sar    $0x2,%edx
  404098:	89 c8                	mov    %ecx,%eax
  40409a:	c1 f8 1f             	sar    $0x1f,%eax
  40409d:	89 d1                	mov    %edx,%ecx
  40409f:	29 c1                	sub    %eax,%ecx
  4040a1:	89 c8                	mov    %ecx,%eax
  4040a3:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  4040a6:	7d 1b                	jge    4040c3 <Fmt_vfmt+0x2ab>
  4040a8:	ba 1f 01 00 00       	mov    $0x11f,%edx
  4040ad:	48 8d 35 14 0c 00 00 	lea    0xc14(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  4040b4:	48 8d 05 ed 1c 20 00 	lea    0x201ced(%rip),%rax        # 605da8 <Assert_Failed>
  4040bb:	48 89 c7             	mov    %rax,%rdi
  4040be:	e8 3d d6 ff ff       	callq  401700 <Except_raise>
  4040c3:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4040c6:	89 d0                	mov    %edx,%eax
  4040c8:	c1 e0 02             	shl    $0x2,%eax
  4040cb:	01 d0                	add    %edx,%eax
  4040cd:	01 c0                	add    %eax,%eax
  4040cf:	03 45 d8             	add    -0x28(%rbp),%eax
  4040d2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4040d5:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4040dc:	01 
  4040dd:	e8 6e cc ff ff       	callq  400d50 <__ctype_b_loc@plt>
  4040e2:	48 8b 10             	mov    (%rax),%rdx
  4040e5:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4040ec:	0f b6 00             	movzbl (%rax),%eax
  4040ef:	48 0f be c0          	movsbq %al,%rax
  4040f3:	48 01 c0             	add    %rax,%rax
  4040f6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  4040fa:	0f b7 00             	movzwl (%rax),%eax
  4040fd:	0f b7 c0             	movzwl %ax,%eax
  404100:	25 00 08 00 00       	and    $0x800,%eax
  404105:	85 c0                	test   %eax,%eax
  404107:	0f 85 62 ff ff ff    	jne    40406f <Fmt_vfmt+0x257>
  40410d:	8b 45 e0             	mov    -0x20(%rbp),%eax
  404110:	89 45 ec             	mov    %eax,-0x14(%rbp)
  404113:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40411a:	0f b6 00             	movzbl (%rax),%eax
  40411d:	3c 2e                	cmp    $0x2e,%al
  40411f:	0f 85 6c 01 00 00    	jne    404291 <Fmt_vfmt+0x479>
  404125:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40412c:	01 
  40412d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404134:	0f b6 00             	movzbl (%rax),%eax
  404137:	3c 2a                	cmp    $0x2a,%al
  404139:	74 30                	je     40416b <Fmt_vfmt+0x353>
  40413b:	e8 10 cc ff ff       	callq  400d50 <__ctype_b_loc@plt>
  404140:	48 8b 10             	mov    (%rax),%rdx
  404143:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40414a:	0f b6 00             	movzbl (%rax),%eax
  40414d:	48 0f be c0          	movsbq %al,%rax
  404151:	48 01 c0             	add    %rax,%rax
  404154:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404158:	0f b7 00             	movzwl (%rax),%eax
  40415b:	0f b7 c0             	movzwl %ax,%eax
  40415e:	25 00 08 00 00       	and    $0x800,%eax
  404163:	85 c0                	test   %eax,%eax
  404165:	0f 84 26 01 00 00    	je     404291 <Fmt_vfmt+0x479>
  40416b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404172:	0f b6 00             	movzbl (%rax),%eax
  404175:	3c 2a                	cmp    $0x2a,%al
  404177:	75 6b                	jne    4041e4 <Fmt_vfmt+0x3cc>
  404179:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  404180:	8b 10                	mov    (%rax),%edx
  404182:	83 fa 30             	cmp    $0x30,%edx
  404185:	73 15                	jae    40419c <Fmt_vfmt+0x384>
  404187:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40418b:	8b 10                	mov    (%rax),%edx
  40418d:	89 d2                	mov    %edx,%edx
  40418f:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  404193:	8b 08                	mov    (%rax),%ecx
  404195:	83 c1 08             	add    $0x8,%ecx
  404198:	89 08                	mov    %ecx,(%rax)
  40419a:	eb 0f                	jmp    4041ab <Fmt_vfmt+0x393>
  40419c:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4041a0:	48 89 ca             	mov    %rcx,%rdx
  4041a3:	48 83 c1 08          	add    $0x8,%rcx
  4041a7:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4041ab:	48 89 d0             	mov    %rdx,%rax
  4041ae:	8b 00                	mov    (%rax),%eax
  4041b0:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4041b3:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  4041ba:	75 1b                	jne    4041d7 <Fmt_vfmt+0x3bf>
  4041bc:	ba 28 01 00 00       	mov    $0x128,%edx
  4041c1:	48 8d 35 00 0b 00 00 	lea    0xb00(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  4041c8:	48 8d 05 d9 1b 20 00 	lea    0x201bd9(%rip),%rax        # 605da8 <Assert_Failed>
  4041cf:	48 89 c7             	mov    %rax,%rdi
  4041d2:	e8 29 d5 ff ff       	callq  401700 <Except_raise>
  4041d7:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4041de:	01 
  4041df:	e9 a7 00 00 00       	jmpq   40428b <Fmt_vfmt+0x473>
  4041e4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  4041eb:	eb 6e                	jmp    40425b <Fmt_vfmt+0x443>
  4041ed:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4041f4:	0f b6 00             	movzbl (%rax),%eax
  4041f7:	0f be c0             	movsbl %al,%eax
  4041fa:	83 e8 30             	sub    $0x30,%eax
  4041fd:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  404200:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  404205:	89 c1                	mov    %eax,%ecx
  404207:	2b 4d d4             	sub    -0x2c(%rbp),%ecx
  40420a:	ba 67 66 66 66       	mov    $0x66666667,%edx
  40420f:	89 c8                	mov    %ecx,%eax
  404211:	f7 ea                	imul   %edx
  404213:	c1 fa 02             	sar    $0x2,%edx
  404216:	89 c8                	mov    %ecx,%eax
  404218:	c1 f8 1f             	sar    $0x1f,%eax
  40421b:	89 d1                	mov    %edx,%ecx
  40421d:	29 c1                	sub    %eax,%ecx
  40421f:	89 c8                	mov    %ecx,%eax
  404221:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  404224:	7d 1b                	jge    404241 <Fmt_vfmt+0x429>
  404226:	ba 2d 01 00 00       	mov    $0x12d,%edx
  40422b:	48 8d 35 96 0a 00 00 	lea    0xa96(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  404232:	48 8d 05 6f 1b 20 00 	lea    0x201b6f(%rip),%rax        # 605da8 <Assert_Failed>
  404239:	48 89 c7             	mov    %rax,%rdi
  40423c:	e8 bf d4 ff ff       	callq  401700 <Except_raise>
  404241:	8b 55 dc             	mov    -0x24(%rbp),%edx
  404244:	89 d0                	mov    %edx,%eax
  404246:	c1 e0 02             	shl    $0x2,%eax
  404249:	01 d0                	add    %edx,%eax
  40424b:	01 c0                	add    %eax,%eax
  40424d:	03 45 d4             	add    -0x2c(%rbp),%eax
  404250:	89 45 dc             	mov    %eax,-0x24(%rbp)
  404253:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40425a:	01 
  40425b:	e8 f0 ca ff ff       	callq  400d50 <__ctype_b_loc@plt>
  404260:	48 8b 10             	mov    (%rax),%rdx
  404263:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40426a:	0f b6 00             	movzbl (%rax),%eax
  40426d:	48 0f be c0          	movsbq %al,%rax
  404271:	48 01 c0             	add    %rax,%rax
  404274:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404278:	0f b7 00             	movzwl (%rax),%eax
  40427b:	0f b7 c0             	movzwl %ax,%eax
  40427e:	25 00 08 00 00       	and    $0x800,%eax
  404283:	85 c0                	test   %eax,%eax
  404285:	0f 85 62 ff ff ff    	jne    4041ed <Fmt_vfmt+0x3d5>
  40428b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40428e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  404291:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404298:	0f b6 00             	movzbl (%rax),%eax
  40429b:	88 45 d3             	mov    %al,-0x2d(%rbp)
  40429e:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4042a5:	01 
  4042a6:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  4042aa:	48 98                	cltq   
  4042ac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4042b3:	00 
  4042b4:	48 8d 05 65 1e 20 00 	lea    0x201e65(%rip),%rax        # 606120 <cvt>
  4042bb:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  4042bf:	48 85 c0             	test   %rax,%rax
  4042c2:	75 1b                	jne    4042df <Fmt_vfmt+0x4c7>
  4042c4:	ba 33 01 00 00       	mov    $0x133,%edx
  4042c9:	48 8d 35 f8 09 00 00 	lea    0x9f8(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  4042d0:	48 8d 05 d1 1a 20 00 	lea    0x201ad1(%rip),%rax        # 605da8 <Assert_Failed>
  4042d7:	48 89 c7             	mov    %rax,%rdi
  4042da:	e8 21 d4 ff ff       	callq  401700 <Except_raise>
  4042df:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  4042e3:	48 98                	cltq   
  4042e5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4042ec:	00 
  4042ed:	48 8d 05 2c 1e 20 00 	lea    0x201e2c(%rip),%rax        # 606120 <cvt>
  4042f4:	4c 8b 14 02          	mov    (%rdx,%rax,1),%r10
  4042f8:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  4042fc:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
  404300:	48 8d bd d0 fe ff ff 	lea    -0x130(%rbp),%rdi
  404307:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  40430e:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  404315:	48 8b 9d b0 fe ff ff 	mov    -0x150(%rbp),%rbx
  40431c:	8b 75 e8             	mov    -0x18(%rbp),%esi
  40431f:	89 34 24             	mov    %esi,(%rsp)
  404322:	45 89 c1             	mov    %r8d,%r9d
  404325:	49 89 f8             	mov    %rdi,%r8
  404328:	48 89 de             	mov    %rbx,%rsi
  40432b:	89 c7                	mov    %eax,%edi
  40432d:	41 ff d2             	callq  *%r10
  404330:	eb 01                	jmp    404333 <Fmt_vfmt+0x51b>
  404332:	90                   	nop
  404333:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40433a:	0f b6 00             	movzbl (%rax),%eax
  40433d:	84 c0                	test   %al,%al
  40433f:	0f 85 4e fb ff ff    	jne    403e93 <Fmt_vfmt+0x7b>
  404345:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
  40434c:	5b                   	pop    %rbx
  40434d:	c9                   	leaveq 
  40434e:	c3                   	retq   

000000000040434f <Fmt_register>:
  40434f:	55                   	push   %rbp
  404350:	48 89 e5             	mov    %rsp,%rbp
  404353:	48 83 ec 20          	sub    $0x20,%rsp
  404357:	89 7d ec             	mov    %edi,-0x14(%rbp)
  40435a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40435e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  404362:	7e 09                	jle    40436d <Fmt_register+0x1e>
  404364:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
  40436b:	7e 1d                	jle    40438a <Fmt_register+0x3b>
  40436d:	ba 3a 01 00 00       	mov    $0x13a,%edx
  404372:	48 8d 35 4f 09 00 00 	lea    0x94f(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  404379:	48 8d 05 28 1a 20 00 	lea    0x201a28(%rip),%rax        # 605da8 <Assert_Failed>
  404380:	48 89 c7             	mov    %rax,%rdi
  404383:	e8 78 d3 ff ff       	callq  401700 <Except_raise>
  404388:	eb 01                	jmp    40438b <Fmt_register+0x3c>
  40438a:	90                   	nop
  40438b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40438e:	48 98                	cltq   
  404390:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  404397:	00 
  404398:	48 8d 05 81 1d 20 00 	lea    0x201d81(%rip),%rax        # 606120 <cvt>
  40439f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  4043a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4043a7:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4043aa:	48 98                	cltq   
  4043ac:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  4043b3:	00 
  4043b4:	48 8d 05 65 1d 20 00 	lea    0x201d65(%rip),%rax        # 606120 <cvt>
  4043bb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4043bf:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
  4043c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4043c7:	c9                   	leaveq 
  4043c8:	c3                   	retq   

00000000004043c9 <Fmt_putd>:
  4043c9:	55                   	push   %rbp
  4043ca:	48 89 e5             	mov    %rsp,%rbp
  4043cd:	48 83 ec 50          	sub    $0x50,%rsp
  4043d1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4043d5:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  4043d8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4043dc:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  4043e0:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  4043e4:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  4043e8:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4043ed:	75 1b                	jne    40440a <Fmt_putd+0x41>
  4043ef:	ba 43 01 00 00       	mov    $0x143,%edx
  4043f4:	48 8d 35 cd 08 00 00 	lea    0x8cd(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  4043fb:	48 8d 05 a6 19 20 00 	lea    0x2019a6(%rip),%rax        # 605da8 <Assert_Failed>
  404402:	48 89 c7             	mov    %rax,%rdi
  404405:	e8 f6 d2 ff ff       	callq  401700 <Except_raise>
  40440a:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  40440e:	79 1b                	jns    40442b <Fmt_putd+0x62>
  404410:	ba 44 01 00 00       	mov    $0x144,%edx
  404415:	48 8d 35 ac 08 00 00 	lea    0x8ac(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  40441c:	48 8d 05 85 19 20 00 	lea    0x201985(%rip),%rax        # 605da8 <Assert_Failed>
  404423:	48 89 c7             	mov    %rax,%rdi
  404426:	e8 d5 d2 ff ff       	callq  401700 <Except_raise>
  40442b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  404430:	75 1b                	jne    40444d <Fmt_putd+0x84>
  404432:	ba 45 01 00 00       	mov    $0x145,%edx
  404437:	48 8d 35 8a 08 00 00 	lea    0x88a(%rip),%rsi        # 404cc8 <_IO_stdin_used+0x350>
  40443e:	48 8d 05 63 19 20 00 	lea    0x201963(%rip),%rax        # 605da8 <Assert_Failed>
  404445:	48 89 c7             	mov    %rax,%rdi
  404448:	e8 b3 d2 ff ff       	callq  401700 <Except_raise>
  40444d:	81 7d b4 00 00 00 80 	cmpl   $0x80000000,-0x4c(%rbp)
  404454:	75 07                	jne    40445d <Fmt_putd+0x94>
  404456:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  40445d:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
  404461:	79 0e                	jns    404471 <Fmt_putd+0xa8>
  404463:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404467:	48 83 c0 2d          	add    $0x2d,%rax
  40446b:	c6 00 01             	movb   $0x1,(%rax)
  40446e:	f7 5d b4             	negl   -0x4c(%rbp)
  404471:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  404475:	78 0b                	js     404482 <Fmt_putd+0xb9>
  404477:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40447b:	48 83 c0 30          	add    $0x30,%rax
  40447f:	c6 00 00             	movb   $0x0,(%rax)
  404482:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  404486:	7e 2e                	jle    4044b6 <Fmt_putd+0xed>
  404488:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40448c:	0f b6 00             	movzbl (%rax),%eax
  40448f:	3c 2d                	cmp    $0x2d,%al
  404491:	74 0b                	je     40449e <Fmt_putd+0xd5>
  404493:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404497:	0f b6 00             	movzbl (%rax),%eax
  40449a:	3c 2b                	cmp    $0x2b,%al
  40449c:	75 18                	jne    4044b6 <Fmt_putd+0xed>
  40449e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4044a2:	0f b6 00             	movzbl (%rax),%eax
  4044a5:	0f be c0             	movsbl %al,%eax
  4044a8:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4044ab:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  4044b0:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
  4044b4:	eb 37                	jmp    4044ed <Fmt_putd+0x124>
  4044b6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4044ba:	48 83 c0 2b          	add    $0x2b,%rax
  4044be:	0f b6 00             	movzbl (%rax),%eax
  4044c1:	84 c0                	test   %al,%al
  4044c3:	74 09                	je     4044ce <Fmt_putd+0x105>
  4044c5:	c7 45 fc 2b 00 00 00 	movl   $0x2b,-0x4(%rbp)
  4044cc:	eb 1f                	jmp    4044ed <Fmt_putd+0x124>
  4044ce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4044d2:	48 83 c0 20          	add    $0x20,%rax
  4044d6:	0f b6 00             	movzbl (%rax),%eax
  4044d9:	84 c0                	test   %al,%al
  4044db:	74 09                	je     4044e6 <Fmt_putd+0x11d>
  4044dd:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)
  4044e4:	eb 07                	jmp    4044ed <Fmt_putd+0x124>
  4044e6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4044ed:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4044f1:	79 07                	jns    4044fa <Fmt_putd+0x131>
  4044f3:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  4044fa:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4044fd:	3b 45 10             	cmp    0x10(%rbp),%eax
  404500:	7d 08                	jge    40450a <Fmt_putd+0x141>
  404502:	8b 45 10             	mov    0x10(%rbp),%eax
  404505:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404508:	eb 26                	jmp    404530 <Fmt_putd+0x167>
  40450a:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  40450e:	75 1a                	jne    40452a <Fmt_putd+0x161>
  404510:	83 7d d4 01          	cmpl   $0x1,-0x2c(%rbp)
  404514:	75 14                	jne    40452a <Fmt_putd+0x161>
  404516:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40451a:	0f b6 00             	movzbl (%rax),%eax
  40451d:	3c 30                	cmp    $0x30,%al
  40451f:	75 09                	jne    40452a <Fmt_putd+0x161>
  404521:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  404528:	eb 06                	jmp    404530 <Fmt_putd+0x167>
  40452a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40452d:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404530:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404534:	74 04                	je     40453a <Fmt_putd+0x171>
  404536:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  40453a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40453e:	48 83 c0 2d          	add    $0x2d,%rax
  404542:	0f b6 00             	movzbl (%rax),%eax
  404545:	84 c0                	test   %al,%al
  404547:	74 21                	je     40456a <Fmt_putd+0x1a1>
  404549:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40454d:	0f 84 bc 00 00 00    	je     40460f <Fmt_putd+0x246>
  404553:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404557:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40455a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40455e:	48 89 d6             	mov    %rdx,%rsi
  404561:	89 c7                	mov    %eax,%edi
  404563:	ff d1                	callq  *%rcx
  404565:	e9 a5 00 00 00       	jmpq   40460f <Fmt_putd+0x246>
  40456a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40456e:	48 83 c0 30          	add    $0x30,%rax
  404572:	0f b6 00             	movzbl (%rax),%eax
  404575:	84 c0                	test   %al,%al
  404577:	74 4c                	je     4045c5 <Fmt_putd+0x1fc>
  404579:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40457d:	74 12                	je     404591 <Fmt_putd+0x1c8>
  40457f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404583:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404586:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40458a:	48 89 d6             	mov    %rdx,%rsi
  40458d:	89 c7                	mov    %eax,%edi
  40458f:	ff d1                	callq  *%rcx
  404591:	8b 45 f8             	mov    -0x8(%rbp),%eax
  404594:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  404597:	89 d1                	mov    %edx,%ecx
  404599:	29 c1                	sub    %eax,%ecx
  40459b:	89 c8                	mov    %ecx,%eax
  40459d:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4045a0:	eb 12                	jmp    4045b4 <Fmt_putd+0x1eb>
  4045a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4045a6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4045aa:	48 89 c6             	mov    %rax,%rsi
  4045ad:	bf 30 00 00 00       	mov    $0x30,%edi
  4045b2:	ff d2                	callq  *%rdx
  4045b4:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4045b8:	0f 9f c0             	setg   %al
  4045bb:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  4045bf:	84 c0                	test   %al,%al
  4045c1:	75 df                	jne    4045a2 <Fmt_putd+0x1d9>
  4045c3:	eb 4a                	jmp    40460f <Fmt_putd+0x246>
  4045c5:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4045c8:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  4045cb:	89 d1                	mov    %edx,%ecx
  4045cd:	29 c1                	sub    %eax,%ecx
  4045cf:	89 c8                	mov    %ecx,%eax
  4045d1:	89 45 f0             	mov    %eax,-0x10(%rbp)
  4045d4:	eb 12                	jmp    4045e8 <Fmt_putd+0x21f>
  4045d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4045da:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4045de:	48 89 c6             	mov    %rax,%rsi
  4045e1:	bf 20 00 00 00       	mov    $0x20,%edi
  4045e6:	ff d2                	callq  *%rdx
  4045e8:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  4045ec:	0f 9f c0             	setg   %al
  4045ef:	83 6d f0 01          	subl   $0x1,-0x10(%rbp)
  4045f3:	84 c0                	test   %al,%al
  4045f5:	75 df                	jne    4045d6 <Fmt_putd+0x20d>
  4045f7:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4045fb:	74 12                	je     40460f <Fmt_putd+0x246>
  4045fd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  404601:	8b 45 fc             	mov    -0x4(%rbp),%eax
  404604:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404608:	48 89 d6             	mov    %rdx,%rsi
  40460b:	89 c7                	mov    %eax,%edi
  40460d:	ff d1                	callq  *%rcx
  40460f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  404612:	8b 55 10             	mov    0x10(%rbp),%edx
  404615:	89 d1                	mov    %edx,%ecx
  404617:	29 c1                	sub    %eax,%ecx
  404619:	89 c8                	mov    %ecx,%eax
  40461b:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40461e:	eb 12                	jmp    404632 <Fmt_putd+0x269>
  404620:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404624:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404628:	48 89 c6             	mov    %rax,%rsi
  40462b:	bf 30 00 00 00       	mov    $0x30,%edi
  404630:	ff d2                	callq  *%rdx
  404632:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  404636:	0f 9f c0             	setg   %al
  404639:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
  40463d:	84 c0                	test   %al,%al
  40463f:	75 df                	jne    404620 <Fmt_putd+0x257>
  404641:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  404648:	eb 22                	jmp    40466c <Fmt_putd+0x2a3>
  40464a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40464e:	0f b6 00             	movzbl (%rax),%eax
  404651:	0f b6 c0             	movzbl %al,%eax
  404654:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  404659:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40465d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  404661:	48 89 d6             	mov    %rdx,%rsi
  404664:	89 c7                	mov    %eax,%edi
  404666:	ff d1                	callq  *%rcx
  404668:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  40466c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40466f:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  404672:	7c d6                	jl     40464a <Fmt_putd+0x281>
  404674:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404678:	48 83 c0 2d          	add    $0x2d,%rax
  40467c:	0f b6 00             	movzbl (%rax),%eax
  40467f:	84 c0                	test   %al,%al
  404681:	74 32                	je     4046b5 <Fmt_putd+0x2ec>
  404683:	8b 45 f8             	mov    -0x8(%rbp),%eax
  404686:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  404689:	89 d1                	mov    %edx,%ecx
  40468b:	29 c1                	sub    %eax,%ecx
  40468d:	89 c8                	mov    %ecx,%eax
  40468f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  404692:	eb 12                	jmp    4046a6 <Fmt_putd+0x2dd>
  404694:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  404698:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40469c:	48 89 c6             	mov    %rax,%rsi
  40469f:	bf 20 00 00 00       	mov    $0x20,%edi
  4046a4:	ff d2                	callq  *%rdx
  4046a6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4046aa:	0f 9f c0             	setg   %al
  4046ad:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  4046b1:	84 c0                	test   %al,%al
  4046b3:	75 df                	jne    404694 <Fmt_putd+0x2cb>
  4046b5:	c9                   	leaveq 
  4046b6:	c3                   	retq   
  4046b7:	90                   	nop

00000000004046b8 <Mem_alloc>:
  4046b8:	55                   	push   %rbp
  4046b9:	48 89 e5             	mov    %rsp,%rbp
  4046bc:	48 83 ec 30          	sub    $0x30,%rsp
  4046c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4046c4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4046c8:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4046cb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4046d0:	7f 1b                	jg     4046ed <Mem_alloc+0x35>
  4046d2:	ba 0a 00 00 00       	mov    $0xa,%edx
  4046d7:	48 8d 35 30 06 00 00 	lea    0x630(%rip),%rsi        # 404d0e <_IO_stdin_used+0x396>
  4046de:	48 8d 05 c3 16 20 00 	lea    0x2016c3(%rip),%rax        # 605da8 <Assert_Failed>
  4046e5:	48 89 c7             	mov    %rax,%rdi
  4046e8:	e8 13 d0 ff ff       	callq  401700 <Except_raise>
  4046ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4046f1:	48 89 c7             	mov    %rax,%rdi
  4046f4:	e8 b7 c5 ff ff       	callq  400cb0 <malloc@plt>
  4046f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4046fd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404702:	75 3d                	jne    404741 <Mem_alloc+0x89>
  404704:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  404709:	75 1d                	jne    404728 <Mem_alloc+0x70>
  40470b:	ba 0f 00 00 00       	mov    $0xf,%edx
  404710:	48 8d 35 f7 05 00 00 	lea    0x5f7(%rip),%rsi        # 404d0e <_IO_stdin_used+0x396>
  404717:	48 8d 05 9a 16 20 00 	lea    0x20169a(%rip),%rax        # 605db8 <Mem_Failed>
  40471e:	48 89 c7             	mov    %rax,%rdi
  404721:	e8 da cf ff ff       	callq  401700 <Except_raise>
  404726:	eb 19                	jmp    404741 <Mem_alloc+0x89>
  404728:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40472b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40472f:	48 89 c6             	mov    %rax,%rsi
  404732:	48 8d 05 7f 16 20 00 	lea    0x20167f(%rip),%rax        # 605db8 <Mem_Failed>
  404739:	48 89 c7             	mov    %rax,%rdi
  40473c:	e8 bf cf ff ff       	callq  401700 <Except_raise>
  404741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404745:	c9                   	leaveq 
  404746:	c3                   	retq   

0000000000404747 <Mem_calloc>:
  404747:	55                   	push   %rbp
  404748:	48 89 e5             	mov    %rsp,%rbp
  40474b:	48 83 ec 30          	sub    $0x30,%rsp
  40474f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404753:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  404757:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40475b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40475e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404763:	7f 1b                	jg     404780 <Mem_calloc+0x39>
  404765:	ba 18 00 00 00       	mov    $0x18,%edx
  40476a:	48 8d 35 9d 05 00 00 	lea    0x59d(%rip),%rsi        # 404d0e <_IO_stdin_used+0x396>
  404771:	48 8d 05 30 16 20 00 	lea    0x201630(%rip),%rax        # 605da8 <Assert_Failed>
  404778:	48 89 c7             	mov    %rax,%rdi
  40477b:	e8 80 cf ff ff       	callq  401700 <Except_raise>
  404780:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  404785:	7f 1b                	jg     4047a2 <Mem_calloc+0x5b>
  404787:	ba 19 00 00 00       	mov    $0x19,%edx
  40478c:	48 8d 35 7b 05 00 00 	lea    0x57b(%rip),%rsi        # 404d0e <_IO_stdin_used+0x396>
  404793:	48 8d 05 0e 16 20 00 	lea    0x20160e(%rip),%rax        # 605da8 <Assert_Failed>
  40479a:	48 89 c7             	mov    %rax,%rdi
  40479d:	e8 5e cf ff ff       	callq  401700 <Except_raise>
  4047a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4047a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4047aa:	48 89 d6             	mov    %rdx,%rsi
  4047ad:	48 89 c7             	mov    %rax,%rdi
  4047b0:	e8 cb c4 ff ff       	callq  400c80 <calloc@plt>
  4047b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4047b9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4047be:	75 3d                	jne    4047fd <Mem_calloc+0xb6>
  4047c0:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  4047c5:	75 1d                	jne    4047e4 <Mem_calloc+0x9d>
  4047c7:	ba 1e 00 00 00       	mov    $0x1e,%edx
  4047cc:	48 8d 35 3b 05 00 00 	lea    0x53b(%rip),%rsi        # 404d0e <_IO_stdin_used+0x396>
  4047d3:	48 8d 05 de 15 20 00 	lea    0x2015de(%rip),%rax        # 605db8 <Mem_Failed>
  4047da:	48 89 c7             	mov    %rax,%rdi
  4047dd:	e8 1e cf ff ff       	callq  401700 <Except_raise>
  4047e2:	eb 19                	jmp    4047fd <Mem_calloc+0xb6>
  4047e4:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4047e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4047eb:	48 89 c6             	mov    %rax,%rsi
  4047ee:	48 8d 05 c3 15 20 00 	lea    0x2015c3(%rip),%rax        # 605db8 <Mem_Failed>
  4047f5:	48 89 c7             	mov    %rax,%rdi
  4047f8:	e8 03 cf ff ff       	callq  401700 <Except_raise>
  4047fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404801:	c9                   	leaveq 
  404802:	c3                   	retq   

0000000000404803 <Mem_free>:
  404803:	55                   	push   %rbp
  404804:	48 89 e5             	mov    %rsp,%rbp
  404807:	48 83 ec 20          	sub    $0x20,%rsp
  40480b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40480f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  404813:	89 55 ec             	mov    %edx,-0x14(%rbp)
  404816:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40481b:	74 0c                	je     404829 <Mem_free+0x26>
  40481d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404821:	48 89 c7             	mov    %rax,%rdi
  404824:	e8 a7 c3 ff ff       	callq  400bd0 <free@plt>
  404829:	c9                   	leaveq 
  40482a:	c3                   	retq   

000000000040482b <Mem_resize>:
  40482b:	55                   	push   %rbp
  40482c:	48 89 e5             	mov    %rsp,%rbp
  40482f:	48 83 ec 20          	sub    $0x20,%rsp
  404833:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404837:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40483b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40483f:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  404842:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  404847:	75 1b                	jne    404864 <Mem_resize+0x39>
  404849:	ba 2a 00 00 00       	mov    $0x2a,%edx
  40484e:	48 8d 35 b9 04 00 00 	lea    0x4b9(%rip),%rsi        # 404d0e <_IO_stdin_used+0x396>
  404855:	48 8d 05 4c 15 20 00 	lea    0x20154c(%rip),%rax        # 605da8 <Assert_Failed>
  40485c:	48 89 c7             	mov    %rax,%rdi
  40485f:	e8 9c ce ff ff       	callq  401700 <Except_raise>
  404864:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  404869:	7f 1b                	jg     404886 <Mem_resize+0x5b>
  40486b:	ba 2b 00 00 00       	mov    $0x2b,%edx
  404870:	48 8d 35 97 04 00 00 	lea    0x497(%rip),%rsi        # 404d0e <_IO_stdin_used+0x396>
  404877:	48 8d 05 2a 15 20 00 	lea    0x20152a(%rip),%rax        # 605da8 <Assert_Failed>
  40487e:	48 89 c7             	mov    %rax,%rdi
  404881:	e8 7a ce ff ff       	callq  401700 <Except_raise>
  404886:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40488a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40488e:	48 89 d6             	mov    %rdx,%rsi
  404891:	48 89 c7             	mov    %rax,%rdi
  404894:	e8 47 c4 ff ff       	callq  400ce0 <realloc@plt>
  404899:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40489d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4048a2:	75 3d                	jne    4048e1 <Mem_resize+0xb6>
  4048a4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4048a9:	75 1d                	jne    4048c8 <Mem_resize+0x9d>
  4048ab:	ba 30 00 00 00       	mov    $0x30,%edx
  4048b0:	48 8d 35 57 04 00 00 	lea    0x457(%rip),%rsi        # 404d0e <_IO_stdin_used+0x396>
  4048b7:	48 8d 05 fa 14 20 00 	lea    0x2014fa(%rip),%rax        # 605db8 <Mem_Failed>
  4048be:	48 89 c7             	mov    %rax,%rdi
  4048c1:	e8 3a ce ff ff       	callq  401700 <Except_raise>
  4048c6:	eb 19                	jmp    4048e1 <Mem_resize+0xb6>
  4048c8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4048cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4048cf:	48 89 c6             	mov    %rax,%rsi
  4048d2:	48 8d 05 df 14 20 00 	lea    0x2014df(%rip),%rax        # 605db8 <Mem_Failed>
  4048d9:	48 89 c7             	mov    %rax,%rdi
  4048dc:	e8 1f ce ff ff       	callq  401700 <Except_raise>
  4048e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4048e5:	c9                   	leaveq 
  4048e6:	c3                   	retq   
  4048e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4048ee:	00 00 

00000000004048f0 <__libc_csu_init>:
  4048f0:	f3 0f 1e fa          	endbr64 
  4048f4:	41 57                	push   %r15
  4048f6:	49 89 d7             	mov    %rdx,%r15
  4048f9:	41 56                	push   %r14
  4048fb:	49 89 f6             	mov    %rsi,%r14
  4048fe:	41 55                	push   %r13
  404900:	41 89 fd             	mov    %edi,%r13d
  404903:	41 54                	push   %r12
  404905:	4c 8d 25 8c 14 20 00 	lea    0x20148c(%rip),%r12        # 605d98 <__frame_dummy_init_array_entry>
  40490c:	55                   	push   %rbp
  40490d:	48 8d 2d 8c 14 20 00 	lea    0x20148c(%rip),%rbp        # 605da0 <__init_array_end>
  404914:	53                   	push   %rbx
  404915:	4c 29 e5             	sub    %r12,%rbp
  404918:	48 83 ec 08          	sub    $0x8,%rsp
  40491c:	e8 77 c2 ff ff       	callq  400b98 <_init>
  404921:	48 c1 fd 03          	sar    $0x3,%rbp
  404925:	74 1f                	je     404946 <__libc_csu_init+0x56>
  404927:	31 db                	xor    %ebx,%ebx
  404929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  404930:	4c 89 fa             	mov    %r15,%rdx
  404933:	4c 89 f6             	mov    %r14,%rsi
  404936:	44 89 ef             	mov    %r13d,%edi
  404939:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40493d:	48 83 c3 01          	add    $0x1,%rbx
  404941:	48 39 dd             	cmp    %rbx,%rbp
  404944:	75 ea                	jne    404930 <__libc_csu_init+0x40>
  404946:	48 83 c4 08          	add    $0x8,%rsp
  40494a:	5b                   	pop    %rbx
  40494b:	5d                   	pop    %rbp
  40494c:	41 5c                	pop    %r12
  40494e:	41 5d                	pop    %r13
  404950:	41 5e                	pop    %r14
  404952:	41 5f                	pop    %r15
  404954:	c3                   	retq   

0000000000404955 <.annobin___libc_csu_fini.start>:
  404955:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  40495c:	00 00 00 00 

0000000000404960 <__libc_csu_fini>:
  404960:	f3 0f 1e fa          	endbr64 
  404964:	c3                   	retq   

Disassembly of section .fini:

0000000000404968 <_fini>:
  404968:	f3 0f 1e fa          	endbr64 
  40496c:	48 83 ec 08          	sub    $0x8,%rsp
  404970:	48 83 c4 08          	add    $0x8,%rsp
  404974:	c3                   	retq   
